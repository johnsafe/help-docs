openapi: 3.0.0
servers:
  - url: https://api.atomgit.com
    description: prod
  - url: https://test-api.atomgit.com
    description: test
info:
  description: |
    AtomGit 提供了REST API,您可以使用 Git CLI、curl、官方 Octokit 库和第三方库与此API进行交互。

    ## API 版本

    每当您向 REST API 发出请求时，您都必须指定要使用的 REST API 版本，您应该使用X-Api-Version标头来指定 API 版本。例如：

    ```bash
    $ curl --header "X-Api-Version:2023-02-21" https://api.atomgit.com/user/info
    ```
    没有标头的请求X-Api-Version将默认使用该2023-02-21版本。

    如果您指定不再受支持的 API 版本，您将收到400错误消息。

    ## token 验证

    AtomGit提供的REST API支持Oauth2令牌和私人令牌两种验证方式：

    1. OAuth2令牌（在标头中发送）

    ```bash
      $ curl -H "Authorization: Bearer OAUTH-TOKEN" https://api.atomgit.com
    ```

    2. 私人令牌令牌 （在标头中发送）

    ```bash
      $ curl -H "Authorization: Bearer PERSONAL-TOKEN" https://api.atomgit.com
    ```
    ## 联系我们
    - 联系人： API技术支持
    - 邮箱： lish#csdn.net (请将 # 换成 @)
    - Issue 反馈地址： https://atomgit.com/OpenAtomFoundation/AtomGit-Docs/issues

  version: 2023-02-21
  title: "关于AtomGit OpenAPI"
tags:
  - name: user
    description: Operations about user
    x-displayName: 用户账号
  - name: org
    description: Operations about org
    x-displayName: 组织相关
  - name: branches
    description: Operations about branches
    x-displayName: 分支相关
x-tagGroups:
  - name: User Management
    tags:
      - user
  - name: Org Management
    tags:
      - org
  - name: branches
    tags:
      - branches
  - name: commits
    tags:
      - commits
  - name: commit statuses
    tags:
      - commits statuses
  - name: repository
    tags:
      - repository
  - name: repository contents
    tags:
      - contents
  - name: check-runs
    tags:
      - check-runs
paths:
  # 获取用户个人信息
  /user/info:
    get:
      tags:
        - user
      summary: 获取用户个人信息
      description: 获取用户个人信息
      operationId: getTheAuthenticatedUser
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token
          required: true
      responses:
        401:
          description: 'token不合法、请检查token是否正确'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        200:
          description: 操作成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
            application/xml:
              schema:
                $ref: "#/components/schemas/User"

  # 根据用户名查询用户信息
  /users/{username}:
    get:
      tags:
        - user
      summary: 根据用户名查询用户信息
      description: 根据用户名查询用户信息
      operationId: getUserByUsername
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token
          required: true
        - name: username
          in: path
          description: "用户名"
          required: true
      responses:
        401:
          description: 'token不合法、请检查token是否正确'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        200:
          description: 操作成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
            application/xml:
              schema:
                $ref: "#/components/schemas/User"
 # 获取当前用户的邮箱列表
  /user/emails:
    get:
      tags:
        - user
      summary: 获取当前用户的邮箱列表
      description: 获取当前用户的邮箱列表
      operationId: listEmail
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token
          required: true
      responses:
        401:
          description: 'token不合法、请检查token是否正确'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        200:
          description: 操作成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserEmailVO"
            application/xml:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserEmailVO"
 # 获取当前用户的粉丝列表
  /user/followers:
    get:
      tags:
        - user
      summary: 获取当前用户的粉丝列表
      description: 获取当前用户的粉丝列表
      operationId: getUserFollowers
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token
          required: true
        - name: page
          in: query
          description: "页码(默认为1)"
          required: false
        - name: per_page
          in: query
          description: "页面大小(默认 30,最大 100)"
          required: false
      responses:
        401:
          description: token无效
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        200:
          description: 操作成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AuthenticatedUserListVO"
            application/xml:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AuthenticatedUserListVO"
 # 获取指定用户的粉丝列表
  /users/{username}/followers:
    get:
      tags:
        - user
      summary: 获取指定用户的粉丝列表
      description: 获取指定用户的粉丝列表
      operationId: getUserFollowersByUsername
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token
          required: true
        - name: username
          in: path
          description: "需要获取粉丝列表的指定用户名"
          required: true
        - name: page
          in: query
          description: "页码(默认为1)"
          required: false
        - name: per_page
          in: query
          description: "页面大小(默认 30,最大 100)"
          required: false
      responses:
        401:
          description: token无效
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        200:
          description: 操作成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AuthenticatedUserListVO"
            application/xml:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AuthenticatedUserListVO"
 # 列出当前用户的关注列表
  /user/following:
    get:
      tags:
        - user
      summary: 列出当前用户的关注列表
      description: 列出当前用户的关注列表
      operationId: getUserFollowing
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token
          required: true
        - name: page
          in: query
          description: "页码(默认为1)"
          required: false
        - name: per_page
          in: query
          description: "页面大小(默认 30,最大 100)"
          required: false
      responses:
        401:
          description: token无效
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        200:
          description: 操作成功
          content:
            application/json:
                type: array
                items:
                  $ref: "#/components/schemas/AuthenticatedUserListVO"
            application/xml:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AuthenticatedUserListVO"
 # 获取指定用户的关注列表
  /users/{username}/following:
    get:
      tags:
        - user
      summary: 获取指定用户的关注列表
      description: 获取指定用户的关注列表
      operationId: getTheFollowing
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token
          required: true
        - name: username
          in: path
          description: "需要获取粉丝列表的指定用户名"
          required: true
        - name: page
          in: query
          description: "页码(默认为1)"
          required: false
        - name: per_page
          in: query
          description: "页面大小(默认 30,最大 100)"
          required: false
      responses:
        401:
          description: token无效
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        200:
          description: 操作成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AuthenticatedUserListVO"
            application/xml:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AuthenticatedUserListVO"
 # 关注指定用户
  /user/following/{username}:
    put:
      tags:
        - user
      summary: 关注指定用户
      description: 关注指定用户
      operationId: addFans
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token
          required: true
        - name: username
          in: path
          description: "关注的用户名"
          required: true
      responses:
        401:
          description: token无效
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        200:
          description: 操作成功
        400:
          description: 不能重复关注
 # 移除某个已关注用户
    delete:
      tags:
        - user
      summary: 移除某个已关注用户
      description: 移除某个已关注用户
      operationId: delFans
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token
          required: true
        - name: username
          in: path
          description: "被移除用户的用户名"
          required: true
      responses:
        401:
          description: token无效
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        200:
          description: 操作成功
 # 检查当前用户是否关注了某个用户
    get:
      tags:
        - user
      summary: 检查当前用户是否关注了某个用户
      description: 检查当前用户是否关注了某个用户
      operationId: hasThisFans
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token
          required: true
        - name: username
          in: path
          description: "判断是否关注的用户名"
          required: true
      responses:
        401:
          description: token无效
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        200:
          description: 返回true或false，true为关注，false为未关注

 # 检查用户是否关注了指定用户
  /users/{username}/following/{targetUsername}:
    get:
      tags:
        - user
      summary: 检查用户是否关注了指定用户
      description: 检查用户是否关注了指定用户
      operationId: hasTheFans
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token
          required: true
        - name: username
          in: path
          description: "关注的用户名"
          required: true
        - name: targetUsername
          in: path
          description: "被关注的用户名"
          required: true
      responses:
        401:
          description: token无效
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        200:
          description: 操作成功
        400:
          description: 不能重复关注
 # 获取当前登录用户的 SSH 公钥列表
  /user/keys:
    get:
      tags:
        - user
      summary: 获取当前登录用户的 SSH 公钥列表
      description: 获取当前登录用户的 SSH 公钥列表
      operationId: listKey
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token
          required: true
        - name: page
          in: query
          description: "页码(默认为1)"
          required: false
        - name: per_page
          in: query
          description: "页面大小(默认 30,最大 100)"
          required: false
      responses:
        401:
          description: token无效
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        200:
          description: 操作成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SSHKeyVO"
            application/xml:
              schema:
                $ref: "#/components/schemas/SSHKeyVO"
  #为当前登录用户创建一个新的 SSH 公钥（注：勾选写权限会默认选中读权限）
    post:
      tags:
        - user
      summary: 为当前登录用户创建一个新的 SSH 公钥
      description: 为当前登录用户创建一个新的 SSH 公钥
      operationId: addKey
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token
          required: true
      responses:
        401:
          description: token无效
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        200:
          description: 操作成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SSHKeyVO"
            application/xml:
              schema:
                $ref: "#/components/schemas/SSHKeyVO"
        400:
          description: 标题不能为空/SSH Key格式错误/该密钥已被添加为用户密钥或部署密钥，添加失败
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddSSHKeyDTO"
        description: add ssh key request body
        required: true
 # 移除指定的 SSH 公钥
  /user/keys/{keyId}:
    delete:
      tags:
        - user
      summary: 移除指定的 SSH 公钥
      description: 移除指定的 SSH 公钥
      operationId: delKey
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token
          required: true
        - name: keyId
          in: path
          description: "指定SSH公钥id"
          required: true
      responses:
        401:
          description: token无效
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        200:
          description: 操作成功

  /organizations:
    get:
      tags:
        - org
      summary: 列出所有组织
      description: 按照创建日期，分页列出所有在AtomGit上组织。
      operationId: orgPageList
      parameters:
        - name: since
          in: query
          description: 起始页
          required: false
          schema:
            type: integer
        - name: per_page
          in: query
          description: 每页最大数量，最大限制为50
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: 操作成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrgPage"
  /orgs/{org}:
    get:
      tags:
        - org
      summary: 查询组织详情
      description: 根据组织命名空间查询组织详细信息
      operationId: orgDetail
      parameters:
        - name: org
          in: path
          description: 组织命名空间
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 操作成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrgDetail"
        "404":
          description: 组织不存在
    patch:
      tags:
        - org
      summary: 更新组织基本信息
      description: 更新组织的基本信息，当前操作人必须是组织管理员。
      operationId: updateOrg
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token
          required: true
        - name: org
          in: path
          description: 组织命名空间
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 操作成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrgDetail"
        "401":
          description: 操作失败，暂未登录
        "403":
          description: 暂无权限，操作失败
        "404":
          description: 组织不存在
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateOrg"
        description: Update org request body
        required: true
  /user/orgs:
    get:
      tags:
        - org
      summary: 列出当前用户加入的组织
      description: 列出当前用户所有组织，此接口必须有user 或者 read:org 的scope权限，否则返回403
      operationId: userOrgPageList
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token
          required: true
        - name: since
          in: query
          description: 起始页
          required: false
          schema:
            type: integer
        - name: per_page
          in: query
          description: 每页大小，最大限制50
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: 操作成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserOrgPage"
        "401":
          description: 操作失败，暂未登录
        "403":
          description: 操作失败，暂无权限
  #  /users/{username}/orgs:
  #    get:
  #    tags:
  #        - org
  #      summary: list organizations by username
  #      description: "List public organization memberships for the specified user."
  #      operationId: userOrgByUserNamePageList
  #      parameters:
  #        - name: since
  #          in: query
  #          description: 起始页
  #          required: false
  #          schema:
  #            type: integer
  #        - name: per_page
  #          in: query
  #          description: 每页大小，最大限制50
  #          required: false
  #          schema:
  #            type: integer
  #      responses:
  #        "200":
  #          description: 操作成功
  #          content:
  #            application/json:
  #              schema:
  #                type: array
  #                items:
  #                  $ref: "#/components/schemas/UserOrgPage"
  #        "400":
  #          description: username is not exist
  /orgs/{org}/invitations:
    post:
      tags:
        - org
      summary: 创建组织邀请
      description: 使用AtomGit用户的ID或电子邮件地址邀请用户加入组织。当前发起操作用户必须是组织所有者。
      operationId: userOrgInvitation
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token
          required: true
        - name: org
          in: path
          description: 组织命名空间
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 操作成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserOrgInvition"
        "400":
          description: 参数有误
        "401":
          description: 操作失败，暂未登录
        "403":
          description: 操作失败，暂无权限
      requestBody:
        content:
          application/json:
            schema:
              type: json
              properties:
                invitee_id:
                  description: 除非您提供电子邮件，否则必填。您邀请的人的AtomGit用户ID。
                  type: string
                email:
                  description: 除非您提供电子邮件，否则必填。您邀请的人的AtomGit用户ID。
                  type: string
                role:
                  description: 新成员的角色:maintainer、developer、guest。
                  type: string
  /orgs/{org}/members:
    get:
      tags:
        - org
      summary: 查询组织成员
      description: 列出组织成员的所有用户
      operationId: orgMembers
      parameters:
        - name: org
          in: path
          description: 组织命名空间
          required: true
          schema:
            type: string
        - name: since
          in: query
          description: 起始页
          required: false
          schema:
            type: integer
        - name: per_page
          in: query
          description: 每页大小，最大限制50
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: 操作成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrgMember"
        "400":
          description: 参数有误，组织不存在
  /orgs/{org}/members/{username}:
    get:
      tags:
        - org
      summary: 验证用户是否是组织成员
      description: 根据用户名验用户是否是组织的成员
      operationId: orgMemberCheck
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token
          required: true
        - name: org
          in: path
          description: 组织命名空间
          required: true
          schema:
            type: string
        - name: username
          in: path
          description:  AtomGit用户的用户名
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 如果请求者是组织成员，并且要查询的用户名是此组织的成员，则响应此状态码
        "401":
          description: 如果请求者不是盖组织成员，则响应此状态码
        "404":
          description: 如果请求者是组织成员而用户而要查询的用户名不是组织的成员，则响应此状态码
    delete:
      tags:
        - org
      summary: 移除组织成员
      description: "根据用户名移除组织成员，当前操作人必须是组织管理员，否则移除失败"
      operationId: orgMemberDelete
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token
          required: true
        - name: org
          in: path
          description: 组织命名空间
          required: true
          schema:
            type: string
        - name: username
          in: path
          description: AtomGit用户的用户名
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 操作成功
        "400":
          description: 操作失败，参数username有误！
        "401":
          description: 操作失败，当前操作者非组织管理员，暂无权限
  /orgs/{org}/memberships/{username}:
    get:
      tags:
        - org
      summary: 根据用户名查询组织中的角色
      description: 根据用户名查询该用户在组织下的角色
      operationId: orgMemberRole
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token
          required: true
        - name: org
          in: path
          description: 组织命名空间
          required: true
          schema:
            type: string
        - name: username
          in: path
          description: 要查询用户的用户名
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 操作成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrgMemberRole"
          "400":
            description: 参数有误
          "401":
            description: 操作失败，暂未登录
          "403":
            description: 操作失败，当前操作人非组织成员
    put:
      tags:
        - org
      summary: 设置组织成员角色
      description: 根据用户名设置该用户在组织下的角色
      operationId: SetOrgMemberRole
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token
          required: true
        - name: org
          in: path
          description: 组织命名空间
          required: true
          schema:
            type: string
        - name: username
          in: path
          description: 要操作的用户的用户名
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 操作成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrgMemberRole"
          "400":
            description: 参数有误
          "401":
            description: 操作失败，暂未登录
          "403":
            description: 操作失败，当前操作人非组织管理员
      requestBody:
        content:
          application/json:
            schema:
              type: json
              properties:
                role:
                  description: 设定用户的角色:maintainer、developer、guest。
                  type: string
  ############ 分支接口（Branches API）############
  # 获取分支信息
  /repos/{owner}/{repo}/branches/{branch}:
    get:
      tags:
        - branches
      summary: 获取分支信息
      description: 获取分支信息
      operationId: getBranch
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token
          required: true
        - name: owner
          in: path
          description: "The account owner of the repository. The name is not case sensitive."
          required: true
        - name: repo
          in: path
          description: "The name of the repository. The name is not case sensitive."
          required: true
        - name: branch
          in: path
          description: "The name of the branch. Cannot contain wildcard characters."
          required: true
      responses:
        404:
          description: Resource not found
        200:
          description: OK
        responseBody:
          content:
            application/json:
              schema:
                type: json
                properties:
                  name:
                    type: string
                    required: true
                  commit:
                    type: object
                    properties:
                      committer:
                        type: object
                        required: true
                        description: "The person that committed the file. Default: the authenticated user."
                        properties:
                          name:
                            type: string
                            required: true
                            description: "The name of the author or committer of the commit. You'll receive a 422 status code if name is omitted."
                          email:
                            type: string
                            required: true
                            description: The email of the author or committer of the commit. You'll receive a 422 status code if email is omitted.
                          date:
                            type: string
                            required: false
                      author:
                        type: object
                        required: true
                        description: "The person that authored the file. Default: the authenticated user."
                        properties:
                          name:
                            type: string
                            required: true
                            description: "The name of the author or committer of the commit. You'll receive a 422 status code if name is omitted."
                          email:
                            type: string
                            required: true
                            description: The email of the author or committer of the commit. You'll receive a 422 status code if email is omitted.
                          date:
                            type: string
                            required: false
                      message:
                        type: string
                        required: true
                      sha:
                        type: string
                        required: true
                      parents:
                        type: array
                        required: true
  # 获取分支列表
  /repos/{owner}/{repo}/branches:
    get:
      tags:
        - branches
      summary: 获取分支列表
      description: 获取分支列表
      operationId: getBranchList
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token
          required: true
        - name: owner
          in: path
          description: "The account owner of the repository. The name is not case sensitive."
          required: true
        - name: repo
          in: path
          description: "The name of the repository. The name is not case sensitive."
          required: true
        - name: per_page
          in: query
          description: "The number of results per page."
          required: false
        - name: page
          in: query
          description: "Page number of the results to fetch."
          required: false
      responses:
        200:
          description: OK
        404:
          description: Resource not found
        responseBody:
          content:
            application/json:
              schema:
                type: array
                properties:
                  name:
                    type: string
                    required: true
                  commit:
                    type: object
                    required: true
                    properties:
                      sha:
                        type: string
                        required: true
                  protected:
                    type: boolean
                    required: true
  ############ 提交接口（Commits API）############
  # 获取分支提交
  /repos/{owner}/{repo}/commits/{ref}:
    get:
      tags:
        - commits
      summary: 获取ref的提交信息
      description: 获取ref的提交信息
      operationId: getRefCommit
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token
          required: true
        - name: owner
          in: path
          description: "The account owner of the repository. The name is not case sensitive."
          required: true
        - name: repo
          in: path
          description: "The name of the repository. The name is not case sensitive."
          required: true
        - name: ref
          in: path
          description: "ref parameter"
          required: true
      responses:
        200:
          description: OK
        404:
          description: Resource not found
        500:
          description: Internal Error
        responseBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    required: true
                  commit:
                    type: object
                    properties:
                      committer:
                        type: object
                        required: true
                        description: "The person that committed the file. Default: the authenticated user."
                        properties:
                          name:
                            type: string
                            required: true
                            description: "The name of the author or committer of the commit. You'll receive a 422 status code if name is omitted."
                          email:
                            type: string
                            required: true
                            description: The email of the author or committer of the commit. You'll receive a 422 status code if email is omitted.
                          date:
                            type: string
                            required: false
                      author:
                        type: object
                        required: true
                        description: "The person that authored the file. Default: the authenticated user."
                        properties:
                          name:
                            type: string
                            required: true
                            description: "The name of the author or committer of the commit. You'll receive a 422 status code if name is omitted."
                          email:
                            type: string
                            required: true
                            description: The email of the author or committer of the commit. You'll receive a 422 status code if email is omitted.
                          date:
                            type: string
                            required: false
                      message:
                        type: string
                        required: true
                  sha:
                    type: string
                    required: true
                  parents:
                    type: array
                    required: true
                  stats:
                    type: object
                    required: true
                    properties:
                      additions:
                        type: integer
                        required: true
                      deletions:
                        type: integer
                        required: true
                      total:
                        type: integer
                        required: true
  # 获取联合提交状态
  /repos/{owner}/{repo}/commits/status/{ref}:
    get:
      tags:
        - commits
      summary: 获取联合提交状态
      description: 获取联合提交状态
      operationId: getCombinedCommitStatuses
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token
          required: true
        - name: owner
          in: path
          description: "The account owner of the repository. The name is not case sensitive."
          required: true
        - name: repo
          in: path
          description: "The name of the repository. The name is not case sensitive."
          required: true
        - name: ref
          in: path
          description: "ref parameter"
          required: true
      responses:
        200:
          description: OK
        404:
          description: Resource not found
        responseBody:
          content:
          application/json:
            schema:
              type: json
              properties:
                state:
                  type: string
                  required: true
                sha:
                  type: string
                  required: true
                total_count:
                  type: integer
                  required: true
                statuses:
                  type: array
                  required: true
                  properties:
                    state:
                      description: |
                        "The state of the status.
                        Can be one of: error, failure, pending, success"
                      type: string
                      required: true
                    target_url:
                      type: string
                      required: false
                      description: |
                        The target URL to associate with this status. This URL will be linked from the UI to allow users to easily see the source of the status.
                        For example, if your continuous integration system is posting build status, you would want to provide the deep link for the build output for this specific SHA:
                        http://ci.example.com/user/repo/build/sha
                    description:
                      type: string
                      required: false
                      description: A short description of the status.
                    context:
                      type: string
                      required: false
                      description: |
                        A string label to differentiate this status from the status of other systems. This field is case-insensitive.
                        Default: default
  # 创建提交状态
  /repos/{owner}/{repo}/statuses/{sha}:
    post:
      tags:
        - commit statuses
      summary: 创建提交状态
      description: 创建提交状态
      operationId: CreateCommitStatues
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token
          required: true
        - name: owner
          in: path
          description: "The account owner of the repository. The name is not case sensitive."
          required: true
        - name: repo
          in: path
          description: "The name of the repository. The name is not case sensitive."
          required: true
        - name: sha
          in: path
          description: ""
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: json
              properties:
                state:
                  description: |
                    "The state of the status.
                    Can be one of: error, failure, pending, success"
                  type: string
                  required: true
                target_url:
                  type: string
                  required: false
                  description: |
                    The target URL to associate with this status. This URL will be linked from the UI to allow users to easily see the source of the status.
                    For example, if your continuous integration system is posting build status, you would want to provide the deep link for the build output for this specific SHA:
                    http://ci.example.com/user/repo/build/sha
                description:
                  type: string
                  required: false
                  description: A short description of the status.
                context:
                  type: string
                  required: false
                  description: |
                    A string label to differentiate this status from the status of other systems. This field is case-insensitive.
                    Default: default
      responses:
        201:
          description: Created
        500:
          description: Internal Error
        responseBody:
          content:
            application/json:
              schema:
                type: json
                properties:
                  context:
                    type: string
                    required: true
                  created_at:
                    type: string
                    required: true
                  description:
                    type: string
                    required: false
                  required:
                    type: boolean
                    required: true
                  id:
                    type: integer
                    required: true
                  state:
                    type: string
                    required: true
                  target_url:
                    type: string
                    required: false
  ############ Check-runs接口 ############
  # 创建自动化检查
  /repos/{owner}/{repo}/check-runs:
    post:
      tags:
        - check-runs
      summary: 创建自动化检查
      description: 创建自动化检查
      operationId: CreateCheckRun
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token
          required: true
        - name: owner
          in: path
          description: "The account owner of the repository. The name is not case sensitive."
          required: true
        - name: repo
          in: path
          description: "The name of the repository. The name is not case sensitive."
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: json
              properties:
                name:
                  description: The name of the check. For example, "code-coverage".
                  type: string
                  required: true
                head_sha:
                  type: string
                  required: true
                  description: The SHA of the commit.
                status:
                  type: string
                  required: false
                  description: |
                    The current status.

                    Default: queued
                    Can be one of: queued, in_progress, completed
                started_at:
                  type: string
                  required: false
                  description: "The time that the check run began. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ."
                conclusion:
                  type: string
                  required: false
                  description: |
                    Required if you provide completed_at or a status of completed. The final conclusion of the check. Note: Providing conclusion will automatically set the status parameter to completed. You cannot change a check run conclusion to stale, only GitHub can set this.
                    Can be one of: action_required, cancelled, failure, neutral, success, skipped, stale, timed_out
                completed_at:
                  type: string
                  required: false
                  description: "The time the check completed. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ."
                action:
                  type: object
                  required: false
                  description: "Check runs can accept a variety of data in the output object, including a title and summary and can optionally provide descriptive details about the run."
                  properties:
                    label:
                      type: string
                      required: true
                      description: "The text to be displayed on a button in the web UI. The maximum size is 20 characters."
                    description:
                      type: string
                      required: true
                      description: "A short explanation of what this action would do. The maximum size is 40 characters."
                    identifier:
                      type: string
                      required: true
                      description: "A reference for the action on the integrator's system. The maximum size is 20 characters."
                output:
                  type: object
                  required: false
                  description: "Check runs can accept a variety of data in the output object, including a title and summary and can optionally provide descriptive details about the run."
                  properties:
                    title:
                      type: string
                      required: true
                      description: "The title of the check run."
                    summary:
                      type: string
                      required: true
                      description: "The summary of the check run. This parameter supports Markdown. Maximum length: 65535 characters."
                    text:
                      type: string
                      required: false
                      description: "The details of the check run. This parameter supports Markdown. Maximum length: 65535 characters."
                    annotations:
                      type: object
                      required: false
                      description: |
                        Adds information from your analysis to specific lines of code.
                        Annotations are visible on GitHub in the Checks and Files changed tab of the pull request.
                        The Checks API limits the number of annotations to a maximum of 50 per API request.
                        To create more than 50 annotations, you have to make multiple requests to the Update a check run endpoint.
                        Each time you update the check run, annotations are appended to the list of annotations that already exist for the check run.
                        GitHub Actions are limited to 10 warning annotations and 10 error annotations per step.
                        For details about how you can view annotations on GitHub, see "About status checks".
                      properties:
                        path:
                          type: string
                          required: true
                          description: "The path of the file to add an annotation to. For example, assets/css/main.css."
                        start_line:
                          type: int
                          required: true
                          description: "The start line of the annotation. Line numbers start at 1."
                        end_line:
                          type: int
                          required: false
                          description: "The end line of the annotation."
                        start_column:
                          type: int
                          required: false
                          description: "The start column of the annotation. Annotations only support start_column and end_column on the same line. Omit this parameter if start_line and end_line have different values. Column numbers start at 1."
                        end_column:
                          type: int
                          required: false
                          description: "The end column of the annotation. Annotations only support start_column and end_column on the same line. Omit this parameter if start_line and end_line have different values."
                        annotation_level:
                          type: string
                          required: true
                          description: |
                            The level of the annotation.

                            Can be one of: notice, warning, failure
                        message:
                          type: string
                          required: true
                          description: "A short description of the feedback for these lines of code. The maximum size is 64 KB."
                        title:
                          type: string
                          required: false
                          description: "The title that represents the annotation. The maximum size is 255 characters."
                        raw_details:
                          type: string
                          required: false
                          description: "Details about this annotation. The maximum size is 64 KB."
                    images:
                      type: object
                      required: false
                      description: "Adds images to the output displayed in the GitHub pull request UI."
                      properties:
                        alt:
                          type: string
                          required: true
                          description: "The alternative text for the image."
                        image_url:
                          type: string
                          required: true
                          description: "The full URL of the image."
                        caption:
                          type: string
                          required: false
                          description: "A short image description."
      responses:
        201:
          description: Created
        500:
          description: Internal Error
        responseBody:
          content:
          application/json:
            schema:
              type: json
              properties:
                id:
                  type: integer
                  required: true
                head_sha:
                  type: string
                  required: true
                external_id:
                  type: integer
                  required: true
                status:
                  type: string
                  required: true
                conclusion:
                  type: string
                  required: false
                started_at:
                  type: string
                  required: true
                completed_at:
                  type: string
                  required: false
                name:
                  type: string
                  required: true
                app:
                  type: object
                  properties:
                    id:
                      type: integer
                      required: true
                    slug:
                      type: string
                      required: true
                    name:
                      type: string
                      required: true
                    description:
                      type: string
                      required: true
  # 更新自动化检查
  /repos/{owner}/{repo}/check-runs/{check_run_id}:
    get:
      tags:
        - check-runs
      summary: 查询自动化检查
      description: 查询自动化检查
      operationId: CreateCheckRun
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token
          required: true
        - name: owner
          in: path
          description: "The account owner of the repository. The name is not case sensitive."
          required: true
        - name: repo
          in: path
          description: "The name of the repository. The name is not case sensitive."
          required: true
        - name: check_run_id
          in: path
          description: The unique identifier of the check run.
      responses:
        200:
          description: Created
    patch:
      tags:
        - check-runs
      summary: 创建自动化检查
      description: 创建自动化检查
      operationId: CreateCheckRun
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token
          required: true
        - name: owner
          in: path
          description: "The account owner of the repository. The name is not case sensitive."
          required: true
        - name: repo
          in: path
          description: "The name of the repository. The name is not case sensitive."
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: json
              properties:
                name:
                  description: The name of the check. For example, "code-coverage".
                  type: string
                  required: true
                head_sha:
                  type: string
                  required: true
                  description: The SHA of the commit.
                status:
                  type: string
                  required: false
                  description: |
                    The current status.

                    Default: queued
                    Can be one of: queued, in_progress, completed
                started_at:
                  type: string
                  required: false
                  description: "The time that the check run began. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ."
                conclusion:
                  type: string
                  required: false
                  description: |
                    Required if you provide completed_at or a status of completed. The final conclusion of the check. Note: Providing conclusion will automatically set the status parameter to completed. You cannot change a check run conclusion to stale, only GitHub can set this.
                    Can be one of: action_required, cancelled, failure, neutral, success, skipped, stale, timed_out
                completed_at:
                  type: string
                  required: false
                  description: "The time the check completed. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ."
                action:
                  type: object
                  required: false
                  description: "Check runs can accept a variety of data in the output object, including a title and summary and can optionally provide descriptive details about the run."
                  properties:
                    label:
                      type: string
                      required: true
                      description: "The text to be displayed on a button in the web UI. The maximum size is 20 characters."
                    description:
                      type: string
                      required: true
                      description: "A short explanation of what this action would do. The maximum size is 40 characters."
                    identifier:
                      type: string
                      required: true
                      description: "A reference for the action on the integrator's system. The maximum size is 20 characters."
                output:
                  type: object
                  required: false
                  description: "Check runs can accept a variety of data in the output object, including a title and summary and can optionally provide descriptive details about the run."
                  properties:
                    title:
                      type: string
                      required: true
                      description: "The title of the check run."
                    summary:
                      type: string
                      required: true
                      description: "The summary of the check run. This parameter supports Markdown. Maximum length: 65535 characters."
                    text:
                      type: string
                      required: false
                      description: "The details of the check run. This parameter supports Markdown. Maximum length: 65535 characters."
                    annotations:
                      type: object
                      required: false
                      description: |
                        Adds information from your analysis to specific lines of code.
                        Annotations are visible on GitHub in the Checks and Files changed tab of the pull request.
                        The Checks API limits the number of annotations to a maximum of 50 per API request.
                        To create more than 50 annotations, you have to make multiple requests to the Update a check run endpoint.
                        Each time you update the check run, annotations are appended to the list of annotations that already exist for the check run.
                        GitHub Actions are limited to 10 warning annotations and 10 error annotations per step.
                        For details about how you can view annotations on GitHub, see "About status checks".
                      properties:
                        path:
                          type: string
                          required: true
                          description: "The path of the file to add an annotation to. For example, assets/css/main.css."
                        start_line:
                          type: int
                          required: true
                          description: "The start line of the annotation. Line numbers start at 1."
                        end_line:
                          type: int
                          required: false
                          description: "The end line of the annotation."
                        start_column:
                          type: int
                          required: false
                          description: "The start column of the annotation. Annotations only support start_column and end_column on the same line. Omit this parameter if start_line and end_line have different values. Column numbers start at 1."
                        end_column:
                          type: int
                          required: false
                          description: "The end column of the annotation. Annotations only support start_column and end_column on the same line. Omit this parameter if start_line and end_line have different values."
                        annotation_level:
                          type: string
                          required: true
                          description: |
                            The level of the annotation.

                            Can be one of: notice, warning, failure
                        message:
                          type: string
                          required: true
                          description: "A short description of the feedback for these lines of code. The maximum size is 64 KB."
                        title:
                          type: string
                          required: false
                          description: "The title that represents the annotation. The maximum size is 255 characters."
                        raw_details:
                          type: string
                          required: false
                          description: "Details about this annotation. The maximum size is 64 KB."
                    images:
                      type: object
                      required: false
                      description: "Adds images to the output displayed in the GitHub pull request UI."
                      properties:
                        alt:
                          type: string
                          required: true
                          description: "The alternative text for the image."
                        image_url:
                          type: string
                          required: true
                          description: "The full URL of the image."
                        caption:
                          type: string
                          required: false
                          description: "A short image description."
      responses:
        200:
          description: OK
        500:
          description: Internal Error
        responseBody:
          content:
          application/json:
            schema:
              type: json
              properties:
                id:
                  type: integer
                  required: true
                head_sha:
                  type: string
                  required: true
                external_id:
                  type: integer
                  required: true
                status:
                  type: string
                  required: true
                conclusion:
                  type: string
                  required: false
                started_at:
                  type: string
                  required: true
                completed_at:
                  type: string
                  required: false
                name:
                  type: string
                  required: true
                app:
                  type: object
                  properties:
                    id:
                      type: integer
                      required: true
                    slug:
                      type: string
                      required: true
                    name:
                      type: string
                      required: true
                    description:
                      type: string
                      required: true
  # 获取仓库content
  /repos/{owner}/{repo}/contents/{path}:
    get:
      tags:
        - contents
      summary: 获取仓库content
      description: 获取仓库content
      operationId: GetRepoConent
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token
          required: true
        - name: owner
          in: path
          description: "The account owner of the repository. The name is not case sensitive."
          required: true
        - name: repo
          in: path
          description: "The name of the repository. The name is not case sensitive."
          required: true
        - name: path
          in: path
          description: path parameter.
      responses:
        200:
          description: OK
        403:
          description: Forbidden
        404:
          description: Resource not found
        responseBody:
          content:
            application/json:
              schema:
                type: json
                properties:
                  encoding:
                    type: string
                    required: true
                  name:
                    type: string
                    required: true
                  path:
                    type: string
                    required: true
                  sha:
                    type: string
                    required: true
                  size:
                    type: integer
                    required: true
                  type:
                    type: string
                    required: true
                  entries:
                    type: array
                    required: false
                    properties:
                      encoding:
                        type: string
                        required: true
                      name:
                        type: string
                        required: true
                      path:
                        type: string
                        required: true
                      sha:
                        type: string
                        required: true
                      size:
                        type: integer
                        required: true
                      type:
                       type: string
                       required: true
    # 创建或更新content
    put:
      tags:
        - "contents"
      summary: 创建或更新仓库content
      description: 创建或更新仓库content
      operationId: SaveRepoConent
      parameter:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token
          required: true
        - name: owner
          in: path
          description: "The account owner of the repository. The name is not case sensitive."
          required: true
        - name: repo
          in: path
          description: "The name of the repository. The name is not case sensitive."
          required: true
        - name: path
          in: path
          description: path parameter.
      requestBody:
        content:
          application/json:
            schema:
              type: json
              properties:
                message:
                  type: string
                  required: true
                  description: The commit message.
                content:
                  type: string
                  required: true
                  description: The new file content, using Base64 encoding.
                sha:
                  type: string
                  required: false
                  description: Required if you are updating a file. The blob SHA of the file being replaced.
                branch:
                  type: string
                  required: false
                  description: "The branch name. Default: the repository’s default branch."
                committer:
                  type: object
                  required: false
                  description: "The person that committed the file. Default: the authenticated user."
                  properties:
                    name:
                      type: string
                      required: true
                      description: "The name of the author or committer of the commit. You'll receive a 422 status code if name is omitted."
                    email:
                      type: string
                      required: true
                      description: The email of the author or committer of the commit. You'll receive a 422 status code if email is omitted.
                    date:
                      type: string
                      required: false
                author:
                  type: object
                  required: false
                  description: "The person that committed the file. Default: the authenticated user."
                  properties:
                    name:
                      type: string
                      required: true
                      description: "The name of the author or committer of the commit. You'll receive a 422 status code if name is omitted."
                    email:
                      type: string
                      required: true
                      description: The email of the author or committer of the commit. You'll receive a 422 status code if email is omitted.
                    date:
                      type: string
                      required: false
      responses:
        200:
          description: OK
        201:
          description: Created
        403:
          description: Forbidden
        409:
          description: Conflict
        404:
          description: Resource not found
        responseBody:
          content:
            application/json:
              schema:
                type: json
                properties:
                  content:
                    type: object
                    properties:
                      encoding:
                        type: string
                        required: true
                      name:
                        type: string
                        required: true
                      path:
                        type: string
                        required: true
                      sha:
                        type: string
                        required: true
                      size:
                        type: integer
                        required: true
                      type:
                        type: string
                        required: true
                      entries:
                        type: array
                        required: false
                        properties:
                          encoding:
                            type: string
                            required: true
                          name:
                            type: string
                            required: true
                          path:
                            type: string
                            required: true
                          sha:
                            type: string
                            required: true
                          size:
                            type: integer
                            required: true
                          type:
                           type: string
                           required: true
                  commit:
                      type: object
                      properties:
                        committer:
                          type: object
                          required: true
                          description: "The person that committed the file. Default: the authenticated user."
                          properties:
                            name:
                              type: string
                              required: true
                              description: "The name of the author or committer of the commit. You'll receive a 422 status code if name is omitted."
                            email:
                              type: string
                              required: true
                              description: The email of the author or committer of the commit. You'll receive a 422 status code if email is omitted.
                            date:
                              type: string
                              required: false
                        author:
                          type: object
                          required: true
                          description: "The person that authored the file. Default: the authenticated user."
                          properties:
                            name:
                              type: string
                              required: true
                              description: "The name of the author or committer of the commit. You'll receive a 422 status code if name is omitted."
                            email:
                              type: string
                              required: true
                              description: The email of the author or committer of the commit. You'll receive a 422 status code if email is omitted.
                            date:
                              type: string
                              required: false
                        message:
                          type: string
                          required: true
                        sha:
                          type: string
                          required: true
                        parents:
                          type: array
                          required: true
    # 删除content
    delete:
      tags:
        - "contents"
      summary: 删除仓库content
      description: 删除仓库content
      operationId: DeleteRepoConent
      parameter:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token
          required: true
        - name: owner
          in: path
          description: "The account owner of the repository. The name is not case sensitive."
          required: true
        - name: repo
          in: path
          description: "The name of the repository. The name is not case sensitive."
          required: true
        - name: path
          in: path
          description: path parameter.
      requestBody:
        content:
          application/json:
            schema:
              type: json
              properties:
                message:
                  type: string
                  required: true
                  description: The commit message.
                content:
                  type: string
                  required: true
                  description: The new file content, using Base64 encoding.
                sha:
                  type: string
                  required: true
                  description: Required if you are updating a file. The blob SHA of the file being replaced.
                branch:
                  type: string
                  required: false
                  description: "The branch name. Default: the repository’s default branch."
                committer:
                  type: object
                  required: false
                  description: "The person that committed the file. Default: the authenticated user."
                  properties:
                    name:
                      type: string
                      required: true
                      description: "The name of the author or committer of the commit. You'll receive a 422 status code if name is omitted."
                    email:
                      type: string
                      required: true
                      description: The email of the author or committer of the commit. You'll receive a 422 status code if email is omitted.
                    date:
                      type: string
                      required: false
                author:
                  type: object
                  required: false
                  description: "The person that committed the file. Default: the authenticated user."
                  properties:
                    name:
                      type: string
                      required: true
                      description: "The name of the author or committer of the commit. You'll receive a 422 status code if name is omitted."
                    email:
                      type: string
                      required: true
                      description: The email of the author or committer of the commit. You'll receive a 422 status code if email is omitted.
                    date:
                      type: string
                      required: false
      responses:
        200:
          description: OK
        403:
          description: Forbidden
        409:
          description: Conflict
        404:
          description: Resource not found
        responseBody:
          content:
            application/json:
              schema:
                type: json
                properties:
                  content:
                    type: object
                    properties:
                      encoding:
                        type: string
                        required: true
                      name:
                        type: string
                        required: true
                      path:
                        type: string
                        required: true
                      sha:
                        type: string
                        required: true
                      size:
                        type: integer
                        required: true
                      type:
                        type: string
                        required: true
                      entries:
                        type: array
                        required: false
                        properties:
                          encoding:
                            type: string
                            required: true
                          name:
                            type: string
                            required: true
                          path:
                            type: string
                            required: true
                          sha:
                            type: string
                            required: true
                          size:
                            type: integer
                            required: true
                          type:
                           type: string
                           required: true
                  commit:
                      type: object
                      properties:
                        committer:
                          type: object
                          required: true
                          description: "The person that committed the file. Default: the authenticated user."
                          properties:
                            name:
                              type: string
                              required: true
                              description: "The name of the author or committer of the commit. You'll receive a 422 status code if name is omitted."
                            email:
                              type: string
                              required: true
                              description: The email of the author or committer of the commit. You'll receive a 422 status code if email is omitted.
                            date:
                                type: string
                                required: false
                        author:
                          type: object
                          required: true
                          description: "The person that authored the file. Default: the authenticated user."
                          properties:
                            name:
                              type: string
                              required: true
                              description: "The name of the author or committer of the commit. You'll receive a 422 status code if name is omitted."
                            email:
                              type: string
                              required: true
                              description: The email of the author or committer of the commit. You'll receive a 422 status code if email is omitted.
                            date:
                                type: string
                                required: false
                        message:
                          type: string
                          required: true
                        sha:
                          type: string
                          required: true
                        parents:
                          type: array
                          required: true
                          properties:
                            sha:
                              type: string
                              required: true
components:
  schemas:
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
    Id:
      type: integer
      format: int64
      readOnly: true
    Tag:
      type: object
      properties:
        id:
          description: Tag ID
          allOf:
            - $ref: "#/components/schemas/Id"
        name:
          description: Tag name
          type: string
          minLength: 1
      xml:
        name: Tag
    ParamterError:
      type: object
      properties:
        cause:
          description: error cause
          type: string
          example: MESSAGE.PARAMETER_ERROR
        error_code:
          description: PARAMETER_ERROR
          type: string
          example: error code
        error_message:
          description: PARAMETER_ERROR
          type: string
          example: 用户昵称不合法（长度不能小于1且不能大于20个字符）
        trace_id:
          description:  trace id
          type: string
          example: trace_id
        code:
          description: response code
          type: Integer
          example: 1000
    InvalidToken:
      type: object
      properties:
        error:
          description: 错误名称
          type: string
          example: invalid_token
        error_description:
          description: 错误描述
          type: string
          example: Invalid token, please provide correct token
    UpdateAuthenticatedUserDTO:
      type: object
      properties:
        name:
          description: The current user's nickname is between 1 and 20 characters in length
          type: string
          example: 这就是我的昵称
        blog:
          description: The blog address of the current user is between 1 and 100 characters
          type: string
          example: https://youboke.com
        company:
          description: The company name of the current user is between 1 and 50 characters
          type: string
          example: atom
        location:
          description: The current user's location is between 1 and 20 characters
          type: string
          example: beijing
        bio:
          description: The current user's profile is between 1 and 200 characters
          type: string
          example: hello i am putianyang
    UserEmailVO:
      type: object
      properties:
        email:
          description: 邮箱
          type: string
          example: 2xas@qq.com
        verified:
          description: 是否经过验证
          type: boolean
          example: false
        visibility:
          description: 邮箱是否公开(public为公开、 private为私有)
          type: string
          example: public
    User:
      type: object
      properties:
        login:
          description: 用户名
          type: string
          example: mrpuatomgit
        id:
          description: 用户id
          type: string
          example: 63db126c0566d2f7d2c9498c
        url:
          description: 根据获取用户名获取用户信息的接口路径
          type: string
          example: https://test-api.atomgit.com/users/mrpuatomgit
        name:
          description: 昵称
          type: string
          example: 这就是我的昵称
        company:
          description: 公司
          type: string
          example: atom
        blog:
          description: 博客
          type: string
          example: https://youboke.com
        location:
          description: 地址
          type: string
          example: beijing
        email:
          description: 邮箱
          type: string
          example: 2214882769@qq.com
        bio:
          description: 简介
          type: string
          example: hello i am putianyang
        avatar_url:
          description: 头像
          type: string
          example: https://atomgit.oss-cn-beijing.aliyuncs.com/uploads/user/1656318880150_5104.png
        html_url:
          description: 主页地址
          type: string
          example: https://test.atomgit.com/mrpuatomgit
        public_repos:
          description: 公开仓库数量
          type: Integer
          example: 3
        total_private_repos:
          description: 私有仓库总数量
          type: Integer
          example: 2
        owned_private_repos:
          description: 本人创建的私有仓库数量
          type: Integer
          example: 1
        created_at:
          description: 注册时间
          type: string
          example: '2023-02-02 09:31:24'
        updated_at:
          description: 更新时间
          example: '2023-02-02 09:31:24'
    AuthenticatedUserListVO:
      type: object
      properties:
        login:
          description: 用户名
          type: string
          example: mrpuatomgit
        id:
          description: 用户id
          type: string
          example: 63db126c0566d2f7d2c9498c
        avatar_url:
          description: 头像
          type: string
          example: https://atomgit.oss-cn-beijing.aliyuncs.com/uploads/user/1656318880150_5104.png
        url:
          description: 根据获取用户名获取用户信息的接口路径
          type: string
          example: https://test-api.atomgit.com/users/mrpuatomgit
        html_url:
          description: 主页地址
          type: string
          example: https://test.atomgit.com/mrpuatomgit
        organizations_url:
          description: 组织url
          type: string
          example: https://test.atomgit.com/users/zhangzhe/starred
        repos_url:
          description: 仓库url
          type: string
          example: https://test.atomgit.com/users/zhangzhe/projects
    SSHKeyVO:
      type: object
      properties:
        key:
          description: 公钥
          type: string
          example: ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIPE6tiarA4AR0asd33dklfjf87R6TE9BJAfkdBpqHi9zWfRhloJ 323467712@qq.com
        id:
          description: 公钥id
          type: string
          example: 207003
        title:
          description: 公钥名称
          type: string
          example: ssh-1
        createdAt:
          description: 创建时间
          type: string
          example: "2023-02-24T04:31:36.000+00:00"
        readOnly:
          description: 是否只读
          type: boolean
          example: false
    AddSSHKeyDTO:
      type: object
      properties:
        title:
          description: 标题
          type: string
          example: 标题
        key:
          description: ssh公钥
          type: string
          example: ssh公钥
    OrgPage:
      type: object
      properties:
        login:
          description: 组织名称
          type: string
          example: csdn
        id:
          description: 组织id
          type: string
          example: 62b59720cbcaeffdff0148ce
        url:
          description: 组织的OepnApi地址
          type: string
          example: https://api.atomgit.com/orgs/csdn
        repos_url:
          description: 组织的repos地址
          type: string
          example: https://api.atomgit.com/orgs/csdn/repos
        events_url:
          description: 组织的event地址
          type: string
          example: https://api.atomgit.com/orgs/csdn/events
        hooks_url:
          description: 组织的hooks地址
          type: string
          example:  https://api.atomgit.com/orgs/csdn/hooks
        issues_url:
          description: 组织的issue地址
          type: string
          example: https://test-api.atomgit.com/orgs/csdn_test2/issues
        members_url:
          description: 组织的members地址
          type: string
          example: https://api.atomgit.com/orgs/csdn/members/{/member}
        public_members_url:
          description: 组织的public members地址
          type: string
          example: https://api.atomgit.com/orgs/csdn/public_members/{/member}
        avatar_url:
          description: 组织头像地址
          type: string
          example: https://atomgit.oss-cn-beijing.aliyuncs.com/uploads/org/1656042927816_7741.png
        description:
          description: 组织的描述
          type: string
          example: csdn is a goog website
    OrgDetail:
      type: object
      properties:
        login:
          description: 组织名称
          type: string
          example: csdn
        id:
          description: 组织id
          type: string
          example: 62b59720cbcaeffdff0148ce
        url:
          description: 组织的OepnApi地址
          type: string
          example: https://api.atomgit.com/orgs/csdn
        repos_url:
          description: 组织的repos地址
          type: string
          example: https://api.atomgit.com/orgs/csdn/repos
        events_url:
          description: 组织的event地址
          type: string
          example: https://api.atomgit.com/orgs/csdn/events
        hooks_url:
          description: 组织的hooks地址
          type: string
          example: https://api.atomgit.com/orgs/csdn/hooks
        issues_url:
          description: 组织的issue地址
          type: string
          example: https://test-api.atomgit.com/orgs/csdn_test2/issues
        members_url:
          description: 组织的members地址
          type: string
          example: https://api.atomgit.com/orgs/csdn/members/{/member}
        public_members_url:
          description: 组织的public members地址
          type: string
          example: https://api.atomgit.com/orgs/csdn/public_members/{/member}
        avatar_url:
          description: 组织头像地址
          type: string
          example: https://atomgit.oss-cn-beijing.aliyuncs.com/uploads/org/1656042927816_7741.png
        description:
          description: 组织的描述
          type: string
          example: csdn is a goog website
        name:
          description: the organization's name
          type: string
          example: 创新乐知
        company:
          description: 组织官网
          type: string
          example: http://www.csdn.net
        blog:
          description: 组织的blog
          type: string
          example: http://www.csdn.net
        location:
          description: 组织位置
          type: string
          example: 北京市朝阳区
        public_repos:
          description: 组织的公共仓库数量
          type: Integer
          example: 1
        followers:
          description: 组织的粉丝数量
          type: Integer
          example: 10
        following:
          description: 组织的关注人数量
          type: Integer
          example: 0
        email:
          description: 组织的电子邮箱
          type: string
          example: admin@csdn.net
        html_url:
          description: 组织的url
          type: string
          example: https://atomgit.com/csdn
        created_at:
          description: 组织的创建时间
          type: string
          example: 2022-12-21T15:45:17+08:00
        updated_at:
          description: 组织的更新时间
          type: string
          example: 2022-12-21T15:45:17+08:00
        type:
          description: 组织的类型
          type: string
          example: Organization
    UpdateOrg:
      type: object
      properties:
        description:
          description: 组织的描述
          type: string
          example: csdn is a goog website
        name:
          description: 组织的名称
          type: string
          example: 创新乐知
        company:
          description: 组织官网
          type: string
          example: http://www.csdn.net
        location:
          description: 组织位置
          type: string
          example: 北京市朝阳区
    UserOrgPage:
      type: object
      properties:
        login:
          description: 组织名称
          type: string
          example: csdn
        id:
          description: 组织id
          type: string
          example: 62b59720cbcaeffdff0148ce
        url:
          description: 组织的OepnApi地址
          type: string
          example: https://api.atomgit.com/orgs/csdn
        repos_url:
          description: 组织的repos地址
          type: string
          example: https://api.atomgit.com/orgs/csdn/repos
        events_url:
          description: 组织的event地址
          type: string
          example: https://api.atomgit.com/orgs/csdn/events
        hooks_url:
          description: 组织的hooks地址
          type: string
          example: https://api.atomgit.com/orgs/csdn/hooks
        issues_url:
          description: 组织的issue地址
          type: string
          example: https://test-api.atomgit.com/orgs/csdn_test2/issues
        members_url:
          description: 组织的members地址
          type: string
          example: https://api.atomgit.com/orgs/csdn/members/{/member}
        public_members_url:
          description: 组织的public members地址
          type: string
          example: https://api.atomgit.com/orgs/csdn/public_members/{/member}
        avatar_url:
          description: 组织头像地址
          type: string
          example: https://atomgit.oss-cn-beijing.aliyuncs.com/uploads/org/1656042927816_7741.png
        description:
          description: 组织的描述
          type: string
          example: csdn is a goog website
    UserOrgInvition:
      type: object
      properties:
        login:
          description: 被邀请人用户名
          type: string
          example: csdn
        id:
          description: 被邀请人用户id
          type: string
          example: 62b59720cbcaeffdff0148ce
        role:
          description:  被邀请人用户角色
          type: string
          example: maintainer
        email:
          description:  被邀请人的电子邮箱
          type: string
          example: admin@csdn.net
        created_at:
          description: 操作时间
          type: string
          example: 2022-12-21T15:45:17+08:00
        inviter:
          description: 邀请人信息
          type: object
          properties:
            login:
              description: 邀请人用户名
              type: string
              example: mrpuatomgit
            id:
              description: 邀请人用户id
              type: string
              example: 63db126c0566d2f7d2c9498c
            avatar_url:
              description: 邀请人用户头像
              type: string
              example: https://atomgit.oss-cn-beijing.aliyuncs.com/uploads/user/1656318880150_5104.png
            url:
              description: 邀请人信息api地址
              type: string
              example: https://test-api.atomgit.com/users/leige
            html_url:
              description: 邀请人主页地址
              type: string
              example: https://test.atomgit.com/mrpuatomgit
            followers_url:
              description: 邀请人的followers url
              type: string
              example:
            followering_url:
              description: 邀请人的followering url
              type: string
              example:
            gists_url:
              description: 邀请人的 gists url
              type: string
              example:
            starred_url:
              description: 邀请人的 starred url
              type: string
              example:
            subscriptions_url:
              description: 邀请人的 subscriptions url
              type: string
              example:
            organizations_url:
              description: 邀请人的 organizations url
              type: string
              example:
            repos_url:
              description: 邀请人的 repos url
              type: string
              example:
            events_url:
              description: 邀请人的 events url
              type: string
              example:
            received_events_url:
              description: 邀请人的 received events url
              type: string
              example:
            type:
              description: 邀请人的 user type
              type: string
              example: user
            site_admin:
              description: 邀请人的是否是管理员
              type: string
              example: false
    OrgMember:
      type: object
      properties:
        login:
          description: 组织成员的用户名
          type: string
          example: mrpuatomgit
        id:
          description: 组织成员的用户id
          type: string
          example: 63db126c0566d2f7d2c9498c
        avatar_url:
          description: 组织成员的头像
          type: string
          example: https://atomgit.oss-cn-beijing.aliyuncs.com/uploads/user/1656318880150_5104.png
        url:
          description: 组织成员的详细信息url
          type: string
          example: https://test-api.atomgit.com/users/leige
        html_url:
          description: 组织成员的主页url
          type: string
          example: https://test.atomgit.com/mrpuatomgit
        followers_url:
          description: 组织成员的 followers url
          type: string
          example:
        followering_url:
          description: 组织成员的 followering url
          type: string
          example:
        gists_url:
          description: 组织成员的 gists url
          type: string
          example:
        starred_url:
          description: 组织成员的 starred url
          type: string
          example:
        subscriptions_url:
          description: 组织成员的 subscriptions url
          type: string
          example:
        organizations_url:
          description: 组织成员的 organizations url
          type: string
          example:
        repos_url:
          description: 组织成员的 repos url
          type: string
          example:
        events_url:
          description: 组织成员的 events url
          type: string
          example:
        received_events_url:
          description: 组织成员的 received events url
          type: string
          example:
        type:
          description: 类型
          type: string
          example: user
        site_admin:
          description: 组织成员是否是管理员
          type: string
          example: false
    OrgMemberRole:
      type: object
      properties:
        url:
          description: 组织成员详细信息的openApi地址
          type: string
          example: https://api.atomgit.com/orgs/csdn
        state:
          description: 组织状态
          type: string
          example: active
        role:
          description: 要查询组织成员角色
          type: string
          example: maintainer
        organization_url:
          description: 组织详细信息的openApi地址
          type: string
          example: https://api.atomgit.com/orgs/csdn
        user:
          description: 被查询用户名详细信息
          type: object
          properties:
            login:
              description: 被查询的用户名
              type: string
              example: mrpuatomgit
            id:
              description: 被查询的用户id
              type: string
              example: 63db126c0566d2f7d2c9498c
            avatar_url:
              description: 被查询的用户头像
              type: string
              example: https://atomgit.oss-cn-beijing.aliyuncs.com/uploads/user/1656318880150_5104.png
            url:
              description: 被查询的用户详细信息的openApi地址
              type: string
              example: https://test-api.atomgit.com/users/leige
            html_url:
              description: 被查询的用户在atomgit访问地址
              type: string
              example: https://test.atomgit.com/mrpuatomgit
            followers_url:
              description: 被查询的用户followers地址
              type: string
              example:
            followering_url:
              description: 被查询的用户followering地址
              type: string
              example:
            gists_url:
              description: 被查询的用户gists地址
              type: string
              example:
            starred_url:
              description: 被查询的用户starred地址
              type: string
              example:
            subscriptions_url:
              description: 被查询的用户subscriptions地址
              type: string
              example:
            organizations_url:
              description: 被查询的用户organizations地址
              type: string
              example:
            repos_url:
              description: 被查询的用户repos地址
              type: string
              example:
            events_url:
              description: 被查询的用户events地址
              type: string
              example:
            received_events_url:
              description: 被查询的用户received events地址
              type: string
              example:
            type:
              description: 被查询的用户类型
              type: string
              example: user
            site_admin:
              description: 被查询的用户是管理员
              type: string
              example: false
        organization:
          description: 当前操作的组织信息
          type: object
          properties:
            login:
              description: 组织名称
              type: string
              example: csdn
            id:
              description: 组织id
              type: string
              example: 62b59720cbcaeffdff0148ce
            url:
              description: 组织的OepnApi地址
              type: string
              example: https://api.atomgit.com/orgs/csdn
            repos_url:
              description: 组织的repos地址
              type: string
              example: https://api.atomgit.com/orgs/csdn/repos
            events_url:
              description: 组织的event地址
              type: string
              example: https://api.atomgit.com/orgs/csdn/events
            hooks_url:
              description: 组织的hooks地址
              type: string
              example: https://api.atomgit.com/orgs/csdn/hooks
            issues_url:
              description: 组织的issue地址
              type: string
              example: https://test-api.atomgit.com/orgs/csdn_test2/issues
            members_url:
              description: 组织的members地址
              type: string
              example: https://api.atomgit.com/orgs/csdn/members/{/member}
            public_members_url:
              description: 组织的public members地址
              type: string
              example: https://api.atomgit.com/orgs/csdn/public_members/{/member}
            avatar_url:
              description: 组织头像地址
              type: string
              example: https://atomgit.oss-cn-beijing.aliyuncs.com/uploads/org/1656042927816_7741.png
            description:
              description: 组织的描述
              type: string
              example: csdn is a goog website
  requestBodies:
    UserArray:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/User"
      description: List of user object
      required: true
  examples:
    Order:
      value:
        quantity: 1
        shipDate: "2018-10-19T16:46:45Z"
        status: placed
        complete: false



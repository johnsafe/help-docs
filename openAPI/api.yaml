openapi: 3.0.0
servers:
  - url: https://api.atomgit.com
    description: prod
  - url: https://test-api.atomgit.com
    description: test
info:
  description: |
    AtomGit 提供了REST API,您可以使用 Git CLI、curl、官方 Octokit 库和第三方库与此API进行交互。

    ## API 版本

    每当您向 REST API 发出请求时，您都必须指定要使用的 REST API 版本，您应该使用X-Api-Version标头来指定 API 版本。例如：

    ```bash
    $ curl --header "X-Api-Version:2023-02-21" https://api.atomgit.com/user/info
    ```
    没有标头的请求X-Api-Version将默认使用该2023-02-21版本。

    如果您指定不再受支持的 API 版本，您将收到400错误消息。

    ## token 验证

    AtomGit提供的REST API支持Oauth2令牌和私人令牌两种验证方式：

    1. OAuth2令牌（在标头中发送）

    ```bash
      $ curl -H "Authorization: Bearer OAUTH-TOKEN" https://api.atomgit.com
    ```

    2. 私人令牌令牌 （在标头中发送）

    ```bash
      $ curl -H "Authorization: Bearer PERSONAL-TOKEN" https://api.atomgit.com
    ```
    ## 联系我们
    - 联系人： API技术支持
    - 邮箱： lish#csdn.net (请将 # 换成 @)
    - Issue 反馈地址： https://atomgit.com/OpenAtomFoundation/AtomGit-Docs/issues

  version: 2023-02-21
  title: "关于AtomGit OpenAPI"
tags:
  - name: user
    description: Operations about user
    x-displayName: 用户账号
  - name: org
    description: Operations about org
    x-displayName: 组织相关
x-tagGroups:
  - name: User Management
    tags:
      - user
  - name: Org Management
    tags:
      - org
paths:
  # /user:
  #   post:
  #     tags:
  #       - user
  #     summary: Create user
  #     description: This can only be done by the logged in user.
  #     operationId: createUser
  #     responses:
  #       default:
  #         description: successful operation
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: "#/components/schemas/User"
  #       description: Created user object
  #       required: true
  # 获取用户个人信息
  /user/info:
    get:
      tags:
        - user
      summary: 获取用户个人信息
      description: 获取用户个人信息
      operationId: getTheAuthenticatedUser
      parameters:
        - name: Authorization
          in: header
          description: "Oauth2 token"
          required: true
      responses:
        401:
          description: 'token不合法、请检查token是否正确'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
            application/xml:
              schema:
                $ref: "#/components/schemas/User"
  # 更新用户个人信息
  # /user:
  #   patch:
  #     tags:
  #       - user
  #     summary: Update the authenticated user
  #     description: This can only be done by the logged in userinfo.
  #     operationId: updateTheAuthenticatedUser
  #     parameters:
  #       - name: Authorization
  #         in: header
  #         description: "The Oauth2 token"
  #         required: true
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: "#/components/schemas/UpdateAuthenticatedUserDTO"
  #       description: update user object
  #       required: true
  #     responses:
  #       401:
  #         description: 'Invalid token, please provide correct token'
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/InvalidToken"
  #           application/xml:
  #             schema:
  #               $ref: "#/components/schemas/InvalidToken"
  #       200:
  #         description: successful operation
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/User"
  #           application/xml:
  #             schema:
  #               $ref: "#/components/schemas/User"
  #       400:
  #         description: paramter error
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/ParamterError"
  #           application/xml:
  #             schema:
  #               $ref: "#/components/schemas/ParamterError"
  # 根据用户名查询用户信息
  /users/{username}:
    get:
      tags:
        - user
      summary: 根据用户名查询用户信息
      description: 根据用户名查询用户信息
      operationId: getUserByUsername
      parameters:
        - name: Authorization
          in: header
          description: "Oauth2 token"
          required: true
        - name: username
          in: path
          description: "用户名"
          required: true
      responses:
        401:
          description: 'token不合法、请检查token是否正确'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
            application/xml:
              schema:
                $ref: "#/components/schemas/User"
 # 获取当前用户的邮箱列表
  /user/emails:
    get:
      tags:
        - user
      summary: 获取当前用户的邮箱列表
      description: 获取当前用户的邮箱列表
      operationId: listEmail
      parameters:
        - name: Authorization
          in: header
          description: "Oauth2 token"
          required: true
      responses:
        401:
          description: 'token不合法、请检查token是否正确'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserEmailVO"
            application/xml:
              schema:
                $ref: "#/components/schemas/UserEmailVO"
#  # 获取当前用户的粉丝列表
#   /user/followers:
#     get:
#       tags:
#         - user
#       summary: List email addresses for the authenticated user
#       description: List email addresses for the authenticated user
#       operationId: listEmail
#       parameters:
#         - name: page
#           in: param
#           description: "the page number(default 1)"
#           required: false
#       parameters:
#         - name: per_page
#           in: param
#           description: "the page number(default 30,max 100)"
#           required: false
#       responses:
#         401:
#           description: 'Invalid token, please provide correct token'
#           content:
#             application/json:
#               schema:
#                 $ref: "#/components/schemas/InvalidToken"
#             application/xml:
#               schema:
#                 $ref: "#/components/schemas/InvalidToken"
#         200:
#           description: successful operation
#           content:
#             application/json:
#               schema:
#                 $ref: "#/components/schemas/UserEmailVO"
#             application/xml:
#               schema:
#                 $ref: "#/components/schemas/UserEmailVO"
  /organizations:
    get:
      tags:
        - org
      summary: Lists all organizations
      description: "Lists all organizations, in the order that they were created on AtomGit."
      operationId: orgPageList
      parameters:
        - name: since
          in: query
          description: The number of results page num
          required: false
          schema:
            type: integer
        - name: per_page
          in: query
          description: The number of results per page (max 50).
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrgPage"
  "/orgs/{org}":
    get:
      tags:
        - org
      summary: organization detail
      description: "To get the organization detail info"
      operationId: orgDetail
      parameters:
        - name: org
          in: path
          description: "组织名称. The name is case sensitive. "
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrgDetail"
        "404":
          description: org not found
    patch:
      tags:
        - org
      summary: update organization
      description: Enables an authenticated organization owner with the admin:org scope to update the organization's info.
      operationId: updateOrg
      parameters:
        - name: Authorization
          in: header
          description: "The Oauth2 Token or Personal Token"
          required: true
        - name: org
          in: path
          description: "组织名称. The name is case sensitive. "
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrgDetail"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden,OAuth requests with insufficient scope receive a 403 Forbidden response.
        "404":
          description: org not found
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateOrg"
        description: Update org request body
        required: true
  /user/orgs:
    get:
      tags:
        - org
      summary: list organizations of user
      description: "List organizations for the authenticated user,this API requires at least user or read:org scope. OAuth requests with insufficient scope receive a 403 Forbidden response."
      operationId: userOrgPageList
      parameters:
        - name: Authorization
          in: header
          description: "The Oauth2 Token or Personal Token"
          required: true
        - name: since
          in: query
          description: The number of results page num
          required: false
          schema:
            type: integer
        - name: per_page
          in: query
          description: The number of results per page (max 50).
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserOrgPage"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden,OAuth requests with insufficient scope receive a 403 Forbidden response.
  #  /users/{username}/orgs:
  #    get:
  #    tags:
  #        - org
  #      summary: list organizations by username
  #      description: "List public organization memberships for the specified user."
  #      operationId: userOrgByUserNamePageList
  #      parameters:
  #        - name: since
  #          in: query
  #          description: The number of results page num
  #          required: false
  #          schema:
  #            type: integer
  #        - name: per_page
  #          in: query
  #          description: The number of results per page (max 50).
  #          required: false
  #          schema:
  #            type: integer
  #      responses:
  #        "200":
  #          description: successful operation
  #          content:
  #            application/json:
  #              schema:
  #                type: array
  #                items:
  #                  $ref: "#/components/schemas/UserOrgPage"
  #        "400":
  #          description: username is not exist
  /orgs/{org}/invitations:
    post:
      tags:
        - org
      summary: Create an organization invitation
      description: "Invite people to an organization by using their AtomGit user ID or their email address. In order to create invitations in an organization, the authenticated user must be an organization owner."
      operationId: userOrgInvitation
      parameters:
        - name: Authorization
          in: header
          description: "The Oauth2 Token or Personal Token"
          required: true
        - name: org
          in: path
          description: "组织名称. The name is case sensitive. "
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserOrgInvition"
        "400":
          description: parameter is error
        "401":
          description: Unauthorized
        "403":
          description: Forbidden,the authenticated user is not organization owner.
      requestBody:
        content:
          application/json:
            schema:
              type: json
              properties:
                invitee_id:
                  description: Required unless you provide email. GitHub user ID for the person you are inviting.
                  type: string
                email:
                  description: Required unless you provide email. GitHub user ID for the person you are inviting.
                  type: string
                role:
                  description: The role for the new member:maintainer、developer、guest.
                  type: string
  /orgs/{org}/members:
    get:
      tags:
        - org
      summary: List organization members
      description: "List all users who are members of an organization."
      operationId: orgMembers
      parameters:
        - name: org
          in: path
          description: "组织名称. The name is case sensitive. "
          required: true
          schema:
            type: string
        - name: since
          in: query
          description: The number of results page num
          required: false
          schema:
            type: integer
        - name: per_page
          in: query
          description: The number of results per page (max 50).
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrgMember"
        "400":
          description: org is not exist
  /orgs/{org}/members/{username}:
    get:
      tags:
        - org
      summary: Check organization membership for a user
      description: "Check if a user is a member of the organization."
      operationId: orgMemberCheck
      parameters:
        - name: Authorization
          in: header
          description: "The Oauth2 Token or Personal Token"
          required: true
        - name: org
          in: path
          description: "组织名称. The name is case sensitive. "
          required: true
          schema:
            type: string
        - name: username
          in: path
          description: The handle for the AtomGit user account.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Response if requester is an organization member and user is a member
        "401":
          description: Response if requester is not an organization member
        "404":
          description: Not Found if requester is an organization member and user is not a member
    delete:
      tags:
        - org
      summary: 移除组织成员
      description: "根据用户名移除组织成员，当前操作人必须是组织管理员，否则移除失败"
      operationId: orgMemberDelete
      parameters:
        - name: Authorization
          in: header
          description: "The Oauth2 Token or Personal Token"
          required: true
        - name: org
          in: path
          description: "组织名称. The name is case sensitive. "
          required: true
          schema:
            type: string
        - name: username
          in: path
          description: The handle for the AtomGit user account.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 操作成功
        "400":
          description: 操作失败，参数username有误！
        "401":
          description: 操作失败，当前操作者非组织管理员，暂无权限
  /orgs/{org}/memberships/{username}:
    get:
      tags:
        - org
      summary: 查询组织成员角色信息
      description: "根据用户名查询该用户在组织下的角色信息"
      operationId: orgMemberRole
      parameters:
        - name: Authorization
          in: header
          description: "Oauth2 Token or Personal Token"
          required: true
        - name: org
          in: path
          description: "组织命名空间 "
          required: true
          schema:
            type: string
        - name: username
          in: path
          description: "要查询用户的用户名"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrgMemberRole"
          "400":
            description: parameter is error
          "401":
            description: Unauthorized
          "403":
            description: Forbidden,the authenticated user is not organization owner.
components:
  schemas:
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
    Id:
      type: integer
      format: int64
      readOnly: true
    Tag:
      type: object
      properties:
        id:
          description: Tag ID
          allOf:
            - $ref: "#/components/schemas/Id"
        name:
          description: Tag name
          type: string
          minLength: 1
      xml:
        name: Tag
    ParamterError:
      type: object
      properties:
        cause:
          description: error cause
          type: string
          example: MESSAGE.PARAMETER_ERROR
        error_code:
          description: PARAMETER_ERROR
          type: string
          example: error code
        error_message:
          description: PARAMETER_ERROR
          type: string
          example: 用户昵称不合法（长度不能小于1且不能大于20个字符）
        trace_id:
          description:  trace id
          type: string
          example: trace_id
        code:
          description: response code
          type: Integer
          example: 1000
    InvalidToken:
      type: object
      properties:
        error:
          description: 错误名称
          type: string
          example: invalid_token
        error_description:
          description: 错误描述
          type: string
          example: Invalid token, please provide correct token
    UpdateAuthenticatedUserDTO:
      type: object
      properties:
        name:
          description: The current user's nickname is between 1 and 20 characters in length
          type: string
          example: 这就是我的昵称
        blog:
          description: The blog address of the current user is between 1 and 100 characters
          type: string
          example: https://youboke.com
        company:
          description: The company name of the current user is between 1 and 50 characters
          type: string
          example: atom
        location:
          description: The current user's location is between 1 and 20 characters
          type: string
          example: beijing
        bio:
          description: The current user's profile is between 1 and 200 characters
          type: string
          example: hello i am putianyang
    UserEmailVO:
      type: object
      properties:
        email:
          description: 邮箱
          type: string
          example: 2xas@qq.com
        verified:
          description: 是否经过验证
          type: boolean
          example: false
        visibility:
          description: 邮箱是否公开(public为公开、 private为私有)
          type: string
          example: public
    User:
      type: object
      properties:
        login:
          description: 用户名
          type: string
          example: mrpuatomgit
        id:
          description: 用户id
          type: string
          example: 63db126c0566d2f7d2c9498c
        url:
          description: 根据获取用户名获取用户信息的接口路径
          type: string
          example: https://test-api.atomgit.com/users/mrpuatomgit
        name:
          description: 昵称
          type: string
          example: 这就是我的昵称
        company:
          description: 公司
          type: string
          example: atom
        blog:
          description: 博客
          type: string
          example: https://youboke.com
        location:
          description: 地址
          type: string
          example: beijing
        email:
          description: 邮箱
          type: string
          example: 2214882769@qq.com
        bio:
          description: 简介
          type: string
          example: hello i am putianyang
        avatar_url:
          description: 头像
          type: string
          example: https://atomgit.oss-cn-beijing.aliyuncs.com/uploads/user/1656318880150_5104.png
        html_url:
          description: 主页地址
          type: string
          example: https://test.atomgit.com/mrpuatomgit
        public_repos:
          description: 公开仓库数量
          type: Integer
          example: 3
        total_private_repos:
          description: 私有仓库总数量
          type: Integer
          example: 2
        owned_private_repos:
          description: 本人创建的私有仓库数量
          type: Integer
          example: 1
        created_at:
          description: 注册时间
          type: string
          example: '2023-02-02 09:31:24'
        updated_at:
          description: 更新时间
          example: '2023-02-02 09:31:24'
    OrgPage:
      type: object
      properties:
        login:
          description: 组织名称
          type: string
          example: csdn
        id:
          description: 组织id
          type: string
          example: 62b59720cbcaeffdff0148ce
        url:
          description: 组织的OepnApi地址
          type: string
          example: https://api.atomgit.com/orgs/csdn
        repos_url:
          description: 组织的repos地址
          type: string
          example: https://api.atomgit.com/orgs/csdn/repos
        events_url:
          description: 组织的event地址
          type: string
          example: https://api.atomgit.com/orgs/csdn/events
        hooks_url:
          description: 组织的hooks地址
          type: string
          example:  https://api.atomgit.com/orgs/csdn/hooks
        issues_url:
          description: 组织的issue地址
          type: string
          example: https://test-api.atomgit.com/orgs/csdn_test2/issues
        members_url:
          description: 组织的members地址
          type: string
          example: https://api.atomgit.com/orgs/csdn/members/{/member}
        public_members_url:
          description: 组织的public members地址
          type: string
          example: https://api.atomgit.com/orgs/csdn/public_members/{/member}
        avatar_url:
          description: 组织头像地址
          type: string
          example: https://atomgit.oss-cn-beijing.aliyuncs.com/uploads/org/1656042927816_7741.png
        description:
          description: 组织的描述
          type: string
          example: csdn is a goog website
    OrgDetail:
      type: object
      properties:
        login:
          description: 组织名称
          type: string
          example: csdn
        id:
          description: 组织id
          type: string
          example: 62b59720cbcaeffdff0148ce
        url:
          description: 组织的OepnApi地址
          type: string
          example: https://api.atomgit.com/orgs/csdn
        repos_url:
          description: 组织的repos地址
          type: string
          example: https://api.atomgit.com/orgs/csdn/repos
        events_url:
          description: 组织的event地址
          type: string
          example: https://api.atomgit.com/orgs/csdn/events
        hooks_url:
          description: 组织的hooks地址
          type: string
          example: https://api.atomgit.com/orgs/csdn/hooks
        issues_url:
          description: 组织的issue地址
          type: string
          example: https://test-api.atomgit.com/orgs/csdn_test2/issues
        members_url:
          description: 组织的members地址
          type: string
          example: https://api.atomgit.com/orgs/csdn/members/{/member}
        public_members_url:
          description: 组织的public members地址
          type: string
          example: https://api.atomgit.com/orgs/csdn/public_members/{/member}
        avatar_url:
          description: 组织头像地址
          type: string
          example: https://atomgit.oss-cn-beijing.aliyuncs.com/uploads/org/1656042927816_7741.png
        description:
          description: 组织的描述
          type: string
          example: csdn is a goog website
        name:
          description: the organization's name
          type: string
          example: 创新乐知
        company:
          description: the organization's website
          type: string
          example: http://www.csdn.net
        blog:
          description: the organization's blog
          type: string
          example: http://www.csdn.net
        location:
          description: the organization's location
          type: string
          example: 北京市朝阳区
        public_repos:
          description: the organization's public repos count
          type: Integer
          example: 1
        followers:
          description: the organization's followers
          type: Integer
          example: 10
        following:
          description: the organization's following
          type: Integer
          example: 0
        email:
          description: the organization's email
          type: string
          example: admin@csdn.net
        html_url:
          description: the organization's url on atomgit
          type: string
          example: https://atomgit.com/csdn
        created_at:
          description: the organization's created time
          type: string
          example: 2022-12-21T15:45:17+08:00
        updated_at:
          description: the organization's updated time
          type: string
          example: 2022-12-21T15:45:17+08:00
        type:
          description: the organization's type
          type: string
          example: Organization
    UpdateOrg:
      type: object
      properties:
        description:
          description: 组织的描述
          type: string
          example: csdn is a goog website
        name:
          description: the organization's name
          type: string
          example: 创新乐知
        company:
          description: the organization's website
          type: string
          example: http://www.csdn.net
        location:
          description: the organization's location
          type: string
          example: 北京市朝阳区
    UserOrgPage:
      type: object
      properties:
        login:
          description: 组织名称
          type: string
          example: csdn
        id:
          description: 组织id
          type: string
          example: 62b59720cbcaeffdff0148ce
        url:
          description: 组织的OepnApi地址
          type: string
          example: https://api.atomgit.com/orgs/csdn
        repos_url:
          description: 组织的repos地址
          type: string
          example: https://api.atomgit.com/orgs/csdn/repos
        events_url:
          description: 组织的event地址
          type: string
          example: https://api.atomgit.com/orgs/csdn/events
        hooks_url:
          description: 组织的hooks地址
          type: string
          example: https://api.atomgit.com/orgs/csdn/hooks
        issues_url:
          description: 组织的issue地址
          type: string
          example: https://test-api.atomgit.com/orgs/csdn_test2/issues
        members_url:
          description: 组织的members地址
          type: string
          example: https://api.atomgit.com/orgs/csdn/members/{/member}
        public_members_url:
          description: 组织的public members地址
          type: string
          example: https://api.atomgit.com/orgs/csdn/public_members/{/member}
        avatar_url:
          description: 组织头像地址
          type: string
          example: https://atomgit.oss-cn-beijing.aliyuncs.com/uploads/org/1656042927816_7741.png
        description:
          description: 组织的描述
          type: string
          example: csdn is a goog website
    UserOrgInvition:
      type: object
      properties:
        login:
          description: The authenticated user's username
          type: string
          example: csdn
        id:
          description: The authenticated user's id
          type: string
          example: 62b59720cbcaeffdff0148ce
        role:
          description:  The authenticated user's role
          type: string
          example: maintainer
        email:
          description:  The authenticated user's email
          type: string
          example: admin@csdn.net
        created_at:
          description: The authenticated user's created time
          type: string
          example: 2022-12-21T15:45:17+08:00
        inviter:
          description: The inviter's info
          type: object
          properties:
            login:
              description: inviter's username
              type: string
              example: mrpuatomgit
            id:
              description: inviter's id
              type: string
              example: 63db126c0566d2f7d2c9498c
            avatar_url:
              description: inviter's avatar
              type: string
              example: https://atomgit.oss-cn-beijing.aliyuncs.com/uploads/user/1656318880150_5104.png
            url:
              description: the inviter's url
              type: string
              example: https://test-api.atomgit.com/users/leige
            html_url:
              description: User's personal homepage
              type: string
              example: https://test.atomgit.com/mrpuatomgit
            followers_url:
              description: the inviter's followers url
              type: string
              example:
            followering_url:
              description: the inviter's followering url
              type: string
              example:
            gists_url:
              description: the inviter's gists url
              type: string
              example:
            starred_url:
              description: the inviter's starred url
              type: string
              example:
            subscriptions_url:
              description: the inviter's subscriptions url
              type: string
              example:
            organizations_url:
              description: the inviter's organizations url
              type: string
              example:
            repos_url:
              description: the inviter's repos url
              type: string
              example:
            events_url:
              description: the inviter's events url
              type: string
              example:
            received_events_url:
              description: the inviter's received events url
              type: string
              example:
            type:
              description: the inviter's user type
              type: string
              example: user
            site_admin:
              description: the inviter is a site_admin
              type: string
              example: false
    OrgMember:
      type: object
      properties:
        login:
          description: Org Member's username
          type: string
          example: mrpuatomgit
        id:
          description: Org Member's id
          type: string
          example: 63db126c0566d2f7d2c9498c
        avatar_url:
          description: Org Member's avatar
          type: string
          example: https://atomgit.oss-cn-beijing.aliyuncs.com/uploads/user/1656318880150_5104.png
        url:
          description: the org member's url
          type: string
          example: https://test-api.atomgit.com/users/leige
        html_url:
          description: Org Member's personal homepage
          type: string
          example: https://test.atomgit.com/mrpuatomgit
        followers_url:
          description: the org member's followers url
          type: string
          example:
        followering_url:
          description: the org member's followering url
          type: string
          example:
        gists_url:
          description: the org member's gists url
          type: string
          example:
        starred_url:
          description: the org member's starred url
          type: string
          example:
        subscriptions_url:
          description: the org member's subscriptions url
          type: string
          example:
        organizations_url:
          description: the org member's organizations url
          type: string
          example:
        repos_url:
          description: the org member's repos url
          type: string
          example:
        events_url:
          description: the org member's events url
          type: string
          example:
        received_events_url:
          description: the org member's received events url
          type: string
          example:
        type:
          description: the org member's user type
          type: string
          example: user
        site_admin:
          description: the org member's is a site_admin
          type: string
          example: false
    OrgMemberRole:
      type: object
      properties:
        url:
          description: 组织成员详细信息的openApi地址
          type: string
          example: https://api.atomgit.com/orgs/csdn
        state:
          description: 组织状态
          type: string
          example: active
        role:
          description: 要查询组织成员角色
          type: string
          example: maintainer
        organization_url:
          description: 组织详细信息的openApi地址
          type: string
          example: https://api.atomgit.com/orgs/csdn
        user:
          description: 被查询用户名详细信息
          type: object
          properties:
            login:
              description: 被查询的用户名
              type: string
              example: mrpuatomgit
            id:
              description: 被查询的用户id
              type: string
              example: 63db126c0566d2f7d2c9498c
            avatar_url:
              description: 被查询的用户头像
              type: string
              example: https://atomgit.oss-cn-beijing.aliyuncs.com/uploads/user/1656318880150_5104.png
            url:
              description: 被查询的用户详细信息的openApi地址
              type: string
              example: https://test-api.atomgit.com/users/leige
            html_url:
              description: 被查询的用户在atomgit访问地址
              type: string
              example: https://test.atomgit.com/mrpuatomgit
            followers_url:
              description: 被查询的用户followers地址
              type: string
              example:
            followering_url:
              description: 被查询的用户followering地址
              type: string
              example:
            gists_url:
              description: 被查询的用户gists地址
              type: string
              example:
            starred_url:
              description: 被查询的用户starred地址
              type: string
              example:
            subscriptions_url:
              description: 被查询的用户subscriptions地址
              type: string
              example:
            organizations_url:
              description: 被查询的用户organizations地址
              type: string
              example:
            repos_url:
              description: 被查询的用户repos地址
              type: string
              example:
            events_url:
              description: 被查询的用户events地址
              type: string
              example:
            received_events_url:
              description: 被查询的用户received events地址
              type: string
              example:
            type:
              description: 被查询的用户类型
              type: string
              example: user
            site_admin:
              description: 被查询的用户是管理员
              type: string
              example: false
        organization:
          description: 当前操作的组织信息
          type: object
          properties:
            login:
              description: 组织名称
              type: string
              example: csdn
            id:
              description: 组织id
              type: string
              example: 62b59720cbcaeffdff0148ce
            url:
              description: 组织的OepnApi地址
              type: string
              example: https://api.atomgit.com/orgs/csdn
            repos_url:
              description: 组织的repos地址
              type: string
              example: https://api.atomgit.com/orgs/csdn/repos
            events_url:
              description: 组织的event地址
              type: string
              example: https://api.atomgit.com/orgs/csdn/events
            hooks_url:
              description: 组织的hooks地址
              type: string
              example: https://api.atomgit.com/orgs/csdn/hooks
            issues_url:
              description: 组织的issue地址
              type: string
              example: https://test-api.atomgit.com/orgs/csdn_test2/issues
            members_url:
              description: 组织的members地址
              type: string
              example: https://api.atomgit.com/orgs/csdn/members/{/member}
            public_members_url:
              description: 组织的public members地址
              type: string
              example: https://api.atomgit.com/orgs/csdn/public_members/{/member}
            avatar_url:
              description: 组织头像地址
              type: string
              example: https://atomgit.oss-cn-beijing.aliyuncs.com/uploads/org/1656042927816_7741.png
            description:
              description: 组织的描述
              type: string
              example: csdn is a goog website
  requestBodies:
    UserArray:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/User"
      description: List of user object
      required: true
  examples:
    Order:
      value:
        quantity: 1
        shipDate: "2018-10-19T16:46:45Z"
        status: placed
        complete: false



openapi: 3.0.0
servers:
  - url: https://api.atomgit.com
    description: prod
  - url: https://api.atomgit.com
    description: test
info:
  description: |
    AtomGit 提供了REST API,您可以使用 Git CLI、curl、官方 Octokit 库和第三方库与此API进行交互。

    ## API 版本

    每当您向 REST API 发出请求时，您都必须指定要使用的 REST API 版本，您应该使用X-Api-Version标头来指定 API 版本。例如：

    ```bash
    $ curl --header "X-Api-Version:2023-02-21" https://api.atomgit.com/user/info
    ```
    没有标头的请求X-Api-Version将默认使用该2023-02-21版本。

    如果您指定不再受支持的 API 版本，您将收到400错误消息。

    ## token 验证

    AtomGit提供的REST API支持Oauth2令牌和私人令牌两种验证方式：

    1. OAuth2令牌（在标头中发送）

    ```bash
      $ curl -H "Authorization: Bearer OAUTH-TOKEN" https://api.atomgit.com
    ```

    2. 私人令牌令牌 （在标头中发送）

    ```bash
      $ curl -H "Authorization: Bearer PERSONAL-TOKEN" https://api.atomgit.com
    ```

    ## 访问限制

    1.针对不同的授权,限流配置信息

    | 授权类型 | 每秒限制 | 每小时限制 |
    | -------- | -------- | ---------- |
    | 未授权   | 2        | 600        |
    | 普通用户 | 10       | 5000       |
    | APP      | 10       | 5000       |

    2.限流信息响应头说明：

    对于每个请求，都会响应以下以x-ratelimit开头的响应头描述当前接口限流的状态：eg

    ```shell
    $ curl -i https://api.github.com/users/octocat
    > HTTP/2 200
    > x-ratelimit-limit: 60
    > x-ratelimit-remaining: 56
    > x-ratelimit-used: 4
    > x-ratelimit-reset: 1372700873
    ```

    | Header name             | Description                                                  |
    | :---------------------- | :----------------------------------------------------------- |
    | `x-ratelimit-limit`     | 每小时请求最大的限制                                         |
    | `x-ratelimit-remaining` | 在当前时间窗口剩余的请求次数                                 |
    | `x-ratelimit-used`      | 在当前时间窗口已经发出的请求次数                             |
    | `x-ratelimit-reset`     | 当前时间窗口重置的 [UTC epoch seconds](http://en.wikipedia.org/wiki/Unix_time)。 |

    3.当请求超过限流限制，会根据授权的情况的不同，返回以下信息：

    如果您当前未登录，则影响的http status：403，并且响应头里的x-ratelimit-remaining将为0；

    ```
    > HTTP/2 403
    > Date: Tue, 20 Aug 2013 14:50:41 GMT
    > x-ratelimit-limit: 60
    > x-ratelimit-remaining: 0
    > x-ratelimit-used: 60
    > x-ratelimit-reset: 1377013266
    
    > {
    >    "message": "API rate limit exceeded for xxx.xxx.xxx.xxx. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.) , documentation_url": "https://docs.atomgit.com"
    > }
    ```

    ## 联系我们
    - 联系人： API技术支持
    - 邮箱： lish#csdn.net (请将 # 换成 @)
    - Issue 反馈地址： https://atomgit.com/OpenAtomFoundation/AtomGit-Docs/issues

  version: 2023-02-21
  title: "关于AtomGit OpenAPI"
tags:
  - name: user
    description: Operations about user
    x-displayName: 用户账号
  - name: org
    description: Operations about org
    x-displayName: 组织相关
  - name: branches
    description: Operations about branches
    x-displayName: 分支相关
  - name: commits
    description: Operations about commits
    x-displayName: 提交相关
  - name: commit statuses
    description: Operations about commit statuses
    x-displayName: 提交状态相关
  - name: repositories
    description: Operations about repositories
    x-displayName: 仓库数据相关
  - name: repository contents
    description: Operations about repository contents
    x-displayName: 仓库文本相关
  - name: change requests
    description: Operations about change requests
    x-displayName: 变更请求相关
  - name: check-runs
    description: Operations about check-runs
    x-displayName: 变更请求-自动化检查相关
x-tagGroups:
  - name: User Management
    tags:
      - user
  - name: Org Management
    tags:
      - org
  - name: branches
    tags:
      - branches
  - name: commits
    tags:
      - commits
  - name: commit statuses
    tags:
      - commits statuses
  - name: repositories
    tags:
      - repositories
  - name: repository contents
    tags:
      - repository contents
  - name: check-runs
    tags:
      - check-runs
  - name: change requests
    tags:
      - change requests
paths:
  # 获取用户个人信息
  /user/info:
    get:
      tags:
        - user
      summary: 获取用户个人信息
      description: 获取用户个人信息
      operationId: getTheAuthenticatedUser
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token（需以Bearer加空格开头）
          required: true
      responses:
        401:
          description: 'token不合法、请检查token是否正确'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        200:
          description: 操作成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
            application/xml:
              schema:
                $ref: "#/components/schemas/User"

  # 根据用户名查询用户信息
  /users/{username}:
    get:
      tags:
        - user
      summary: 根据用户名查询用户信息
      description: 根据用户名查询用户信息
      operationId: getUserByUsername
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token（需以Bearer加空格开头）
          required: true
        - name: username
          in: path
          description: "用户名"
          required: true
      responses:
        401:
          description: 'token不合法、请检查token是否正确'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        200:
          description: 操作成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
            application/xml:
              schema:
                $ref: "#/components/schemas/User"
 # 获取当前用户的邮箱列表
  /user/emails:
    get:
      tags:
        - user
      summary: 获取当前用户的邮箱列表
      description: 获取当前用户的邮箱列表
      operationId: listEmail
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token（需以Bearer加空格开头）
          required: true
      responses:
        401:
          description: 'token不合法、请检查token是否正确'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        200:
          description: 操作成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserEmailVO"
            application/xml:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserEmailVO"
 # 获取当前用户的粉丝列表
  /user/followers:
    get:
      tags:
        - user
      summary: 获取当前用户的粉丝列表
      description: 获取当前用户的粉丝列表
      operationId: getUserFollowers
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token（需以Bearer加空格开头）
          required: true
        - name: page
          in: query
          description: "页码(默认为1)"
          required: false
        - name: per_page
          in: query
          description: "页面大小(默认 30,最大 100)"
          required: false
      responses:
        401:
          description: token无效
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        200:
          description: 操作成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AuthenticatedUserListVO"
            application/xml:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AuthenticatedUserListVO"
 # 获取指定用户的粉丝列表
  /users/{username}/followers:
    get:
      tags:
        - user
      summary: 获取指定用户的粉丝列表
      description: 获取指定用户的粉丝列表
      operationId: getUserFollowersByUsername
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token（需以Bearer加空格开头）
          required: true
        - name: username
          in: path
          description: "需要获取粉丝列表的指定用户名"
          required: true
        - name: page
          in: query
          description: "页码(默认为1)"
          required: false
        - name: per_page
          in: query
          description: "页面大小(默认 30,最大 100)"
          required: false
      responses:
        401:
          description: token无效
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        200:
          description: 操作成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AuthenticatedUserListVO"
            application/xml:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AuthenticatedUserListVO"
 # 列出当前用户的关注列表
  /user/following:
    get:
      tags:
        - user
      summary: 列出当前用户的关注列表
      description: 列出当前用户的关注列表
      operationId: getUserFollowing
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token（需以Bearer加空格开头）
          required: true
        - name: page
          in: query
          description: "页码(默认为1)"
          required: false
        - name: per_page
          in: query
          description: "页面大小(默认 30,最大 100)"
          required: false
      responses:
        401:
          description: token无效
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        200:
          description: 操作成功
          content:
            application/json:
                type: array
                items:
                  $ref: "#/components/schemas/AuthenticatedUserListVO"
            application/xml:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AuthenticatedUserListVO"
 # 获取指定用户的关注列表
  /users/{username}/following:
    get:
      tags:
        - user
      summary: 获取指定用户的关注列表
      description: 获取指定用户的关注列表
      operationId: getTheFollowing
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token（需以Bearer加空格开头）
          required: true
        - name: username
          in: path
          description: "需要获取粉丝列表的指定用户名"
          required: true
        - name: page
          in: query
          description: "页码(默认为1)"
          required: false
        - name: per_page
          in: query
          description: "页面大小(默认 30,最大 100)"
          required: false
      responses:
        401:
          description: token无效
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        200:
          description: 操作成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AuthenticatedUserListVO"
            application/xml:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AuthenticatedUserListVO"
 # 关注指定用户
  /user/following/{username}:
    put:
      tags:
        - user
      summary: 关注指定用户
      description: 关注指定用户
      operationId: addFans
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token（需以Bearer加空格开头）
          required: true
        - name: username
          in: path
          description: "关注的用户名"
          required: true
      responses:
        401:
          description: token无效
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        200:
          description: 操作成功
        400:
          description: 不能重复关注
 # 移除某个已关注用户
    delete:
      tags:
        - user
      summary: 移除某个已关注用户
      description: 移除某个已关注用户
      operationId: delFans
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token（需以Bearer加空格开头）
          required: true
        - name: username
          in: path
          description: "被移除用户的用户名"
          required: true
      responses:
        401:
          description: token无效
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        200:
          description: 操作成功
 # 检查当前用户是否关注了某个用户
    get:
      tags:
        - user
      summary: 检查当前用户是否关注了某个用户
      description: 检查当前用户是否关注了某个用户
      operationId: hasThisFans
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token（需以Bearer加空格开头）
          required: true
        - name: username
          in: path
          description: "判断是否关注的用户名"
          required: true
      responses:
        401:
          description: token无效
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        200:
          description: 返回true或false，true为关注，false为未关注

 # 检查用户是否关注了指定用户
  /users/{username}/following/{targetUsername}:
    get:
      tags:
        - user
      summary: 检查用户是否关注了指定用户
      description: 检查用户是否关注了指定用户
      operationId: hasTheFans
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token（需以Bearer加空格开头）
          required: true
        - name: username
          in: path
          description: "关注的用户名"
          required: true
        - name: targetUsername
          in: path
          description: "被关注的用户名"
          required: true
      responses:
        401:
          description: token无效
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        200:
          description: 操作成功
        400:
          description: 不能重复关注
 # 获取当前登录用户的 SSH 公钥列表
  /user/keys:
    get:
      tags:
        - user
      summary: 获取当前登录用户的 SSH 公钥列表
      description: 获取当前登录用户的 SSH 公钥列表
      operationId: listKey
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token（需以Bearer加空格开头）
          required: true
        - name: page
          in: query
          description: "页码(默认为1)"
          required: false
        - name: per_page
          in: query
          description: "页面大小(默认 30,最大 100)"
          required: false
      responses:
        401:
          description: token无效
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        200:
          description: 操作成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SSHKeyVO"
            application/xml:
              schema:
                $ref: "#/components/schemas/SSHKeyVO"
  #为当前登录用户创建一个新的 SSH 公钥（注：勾选写权限会默认选中读权限）
    post:
      tags:
        - user
      summary: 为当前登录用户创建一个新的 SSH 公钥
      description: 为当前登录用户创建一个新的 SSH 公钥
      operationId: addKey
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token（需以Bearer加空格开头）
          required: true
      responses:
        401:
          description: token无效
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        200:
          description: 操作成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SSHKeyVO"
            application/xml:
              schema:
                $ref: "#/components/schemas/SSHKeyVO"
        400:
          description: 标题不能为空/SSH Key格式错误/该密钥已被添加为用户密钥或部署密钥，添加失败
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddSSHKeyDTO"
        description: add ssh key request body
        required: true
 # 移除指定的 SSH 公钥
  /user/keys/{keyId}:
    delete:
      tags:
        - user
      summary: 移除指定的 SSH 公钥
      description: 移除指定的 SSH 公钥
      operationId: delKey
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token（需以Bearer加空格开头）
          required: true
        - name: keyId
          in: path
          description: "指定SSH公钥id"
          required: true
      responses:
        401:
          description: token无效
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        200:
          description: 操作成功

  /organizations:
    get:
      tags:
        - org
      summary: 列出所有组织
      description: 按照创建日期，分页列出所有在AtomGit上组织。
      operationId: orgPageList
      parameters:
        - name: since
          in: query
          description: 起始页
          required: false
          schema:
            type: integer
        - name: per_page
          in: query
          description: 每页最大数量，最大限制为50
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: 操作成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrgPage"
  /orgs/{org}:
    get:
      tags:
        - org
      summary: 查询组织详情
      description: 根据组织命名空间查询组织详细信息
      operationId: orgDetail
      parameters:
        - name: org
          in: path
          description: 组织命名空间
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 操作成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrgDetail"
        "404":
          description: 组织不存在
    patch:
      tags:
        - org
      summary: 更新组织基本信息
      description: 更新组织的基本信息，当前操作人必须是组织管理员。
      operationId: updateOrg
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token（需以Bearer加空格开头）
          required: true
        - name: org
          in: path
          description: 组织命名空间
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 操作成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrgDetail"
        "401":
          description: 操作失败，暂未登录
        "403":
          description: 暂无权限，操作失败
        "404":
          description: 组织不存在
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateOrg"
        description: Update org request body
        required: true
  /user/orgs:
    get:
      tags:
        - org
      summary: 列出当前用户加入的组织
      description: 列出当前用户所有组织，此接口必须有user 或者 read:org 的scope权限，否则返回403
      operationId: userOrgPageList
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token（需以Bearer加空格开头）
          required: true
        - name: since
          in: query
          description: 起始页
          required: false
          schema:
            type: integer
        - name: per_page
          in: query
          description: 每页大小，最大限制50
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: 操作成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserOrgPage"
        "401":
          description: 操作失败，暂未登录
        "403":
          description: 操作失败，暂无权限
  #  /users/{username}/orgs:
  #    get:
  #    tags:
  #        - org
  #      summary: list organizations by username
  #      description: "List public organization memberships for the specified user."
  #      operationId: userOrgByUserNamePageList
  #      parameters:
  #        - name: since
  #          in: query
  #          description: 起始页
  #          required: false
  #          schema:
  #            type: integer
  #        - name: per_page
  #          in: query
  #          description: 每页大小，最大限制50
  #          required: false
  #          schema:
  #            type: integer
  #      responses:
  #        "200":
  #          description: 操作成功
  #          content:
  #            application/json:
  #              schema:
  #                type: array
  #                items:
  #                  $ref: "#/components/schemas/UserOrgPage"
  #        "400":
  #          description: username is not exist
  /orgs/{org}/invitations:
    post:
      tags:
        - org
      summary: 创建组织邀请
      description: 使用AtomGit用户的ID或电子邮件地址邀请用户加入组织。当前发起操作用户必须是组织所有者。
      operationId: userOrgInvitation
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token（需以Bearer加空格开头）
          required: true
        - name: org
          in: path
          description: 组织命名空间
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 操作成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserOrgInvition"
        "400":
          description: 参数有误
        "401":
          description: 操作失败，暂未登录
        "403":
          description: 操作失败，暂无权限
      requestBody:
        content:
          application/json:
            schema:
              type: json
              properties:
                invitee_id:
                  description: 除非您提供电子邮件，否则必填。您邀请的人的AtomGit用户ID。
                  type: string
                email:
                  description: 除非您提供电子邮件，否则必填。您邀请的人的AtomGit用户ID。
                  type: string
                role:
                  description: 新成员的角色:maintainer、developer、guest。
                  type: string
  /orgs/{org}/members:
    get:
      tags:
        - org
      summary: 查询组织成员
      description: 列出组织成员的所有用户
      operationId: orgMembers
      parameters:
        - name: org
          in: path
          description: 组织命名空间
          required: true
          schema:
            type: string
        - name: since
          in: query
          description: 起始页
          required: false
          schema:
            type: integer
        - name: per_page
          in: query
          description: 每页大小，最大限制50
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: 操作成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrgMember"
        "400":
          description: 参数有误，组织不存在
  /orgs/{org}/members/{username}:
    get:
      tags:
        - org
      summary: 验证用户是否是组织成员
      description: 根据用户名验用户是否是组织的成员
      operationId: orgMemberCheck
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token（需以Bearer加空格开头）
          required: true
        - name: org
          in: path
          description: 组织命名空间
          required: true
          schema:
            type: string
        - name: username
          in: path
          description:  AtomGit用户的用户名
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 如果请求者是组织成员，并且要查询的用户名是此组织的成员，则响应此状态码
        "401":
          description: 如果请求者不是盖组织成员，则响应此状态码
        "404":
          description: 如果请求者是组织成员而用户而要查询的用户名不是组织的成员，则响应此状态码
    delete:
      tags:
        - org
      summary: 移除组织成员
      description: "根据用户名移除组织成员，当前操作人必须是组织管理员，否则移除失败"
      operationId: orgMemberDelete
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token（需以Bearer加空格开头）
          required: true
        - name: org
          in: path
          description: 组织命名空间
          required: true
          schema:
            type: string
        - name: username
          in: path
          description: AtomGit用户的用户名
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 操作成功
        "400":
          description: 操作失败，参数username有误！
        "401":
          description: 操作失败，当前操作者非组织管理员，暂无权限
  /orgs/{org}/memberships/{username}:
    get:
      tags:
        - org
      summary: 根据用户名查询组织中的角色
      description: 根据用户名查询该用户在组织下的角色
      operationId: orgMemberRole
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token（需以Bearer加空格开头）
          required: true
        - name: org
          in: path
          description: 组织命名空间
          required: true
          schema:
            type: string
        - name: username
          in: path
          description: 要查询用户的用户名
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 操作成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrgMemberRole"
          "400":
            description: 参数有误
          "401":
            description: 操作失败，暂未登录
          "403":
            description: 操作失败，当前操作人非组织成员
    put:
      tags:
        - org
      summary: 设置组织成员角色
      description: 根据用户名设置该用户在组织下的角色
      operationId: SetOrgMemberRole
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token（需以Bearer加空格开头）
          required: true
        - name: org
          in: path
          description: 组织命名空间
          required: true
          schema:
            type: string
        - name: username
          in: path
          description: 要操作的用户的用户名
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 操作成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrgMemberRole"
          "400":
            description: 参数有误
          "401":
            description: 操作失败，暂未登录
          "403":
            description: 操作失败，当前操作人非组织管理员
      requestBody:
        content:
          application/json:
            schema:
              type: json
              properties:
                role:
                  description: 设定用户的角色:maintainer、developer、guest。
                  type: string 
  ############ 分支接口（Branches API）############
  # 获取分支信息
  /repos/{owner}/{repo}/branches/{branch}:
    get:
      tags:
        - branches
      summary: 获取分支信息
      description: 获取分支信息
      operationId: getBranch
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token（需以Bearer加空格开头）
          required: true
        - name: owner
          in: path
          description: 代码仓库的所有者，一般称之为"用户名（username）"。该名称不区分大小写。
          required: true
        - name: repo
          in: path
          description: "代码仓库名称。该名称不区分大小写。"
          required: true
        - name: branch
          in: path
          description: "分支名称，不能包含通配符。"
          required: true
      responses:
        404:
          description: 资源未找到
        200:
          description: 成功
        responseBody:
          content:
            application/json:
              schema:
                type: json
                properties:
                  name:
                    type: string
                    required: true
                    description: 分支名称.
                  commit:
                    type: object
                    description: 提交ID
                    properties:
                      committer:
                        type: object
                        required: true
                        description: 提交者。默认值：当前认证的用户。
                        properties:
                          name:
                            type: string
                            required: true
                            description: 提交者的名称。如果省略该字段，您将收到 422 状态码。
                          email:
                            type: string
                            required: true
                            description: 提交者的电子邮件。如果省略电子邮件，您将收到422状态码。
                          date:
                            type: string
                            required: false
                      author:
                        type: object
                        required: true
                        description: "提交作者。默认值：当前认证的用户。"
                        properties:
                          name:
                            type: string
                            required: true
                            description: "提交作者的名称。如果省略该字段，您将收到 422 状态码。"
                          email:
                            type: string
                            required: true
                            description: 提交作者的电子邮件。如果省略电子邮件，您将收到422状态码。
                          date:
                            type: string
                            required: false
                      message:
                        type: string
                        required: true
                        description: 提交信息
                      sha:
                        type: string
                        required: true
                        description: 提交 SHA 值.
                      parents:
                        type: array
                        required: true
                        items:
                          type: object
                          properties:
                            sha:
                              type: string
                              required: true
                              description: 提交 SHA 值.
  # 获取分支列表
  /repos/{owner}/{repo}/branches:
    get:
      tags:
        - branches
      summary: 获取分支列表
      description: 获取分支列表
      operationId: getBranchList
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token（需以Bearer加空格开头）
          required: true
        - name: owner
          in: path
          description: 代码仓库的所有者，一般称之为"用户名（username）"。该名称不区分大小写。
          required: true
        - name: repo
          in: path
          description: 代码仓库名称。该名称不区分大小写。
          required: true
        - name: per_page
          in: query
          description: 分页结果数
          required: false
        - name: page
          in: query
          description: 分页页码
          required: false
      responses:
        200:
          description: 成功
        404:
          description: 资源未找到
        responseBody:
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      required: true
                      description: 分支名称，不能包含通配符
                    commit:
                      type: object
                      required: true
                      description: 提交ID
                      properties:
                        sha:
                          type: string
                          required: true
                          description: 提交 SHA 值
                    protected:
                      type: boolean
                      required: true
                      description: 是否为保护分支。
  # ############ 提交接口（Commits API）############
  # # 获取分支提交
  /repos/{owner}/{repo}/commits/{ref}:
    get:
      tags:
        - commits
      summary: 获取提交信息
      description: 获取提交信息
      operationId: getRefCommit
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token（需以Bearer加空格开头）
          required: true
        - name: owner
          in: path
          description: 代码仓库的所有者，一般称之为"用户名（username）"。该名称不区分大小写。
          required: true
        - name: repo
          in: path
          description: "代码仓库名称。该名称不区分大小写。"
          required: true
        - name: ref
          in: path
          description: "引用"
          required: true
      responses:
        200:
          description: 成功
        404:
          description: 资源未找到
        500:
          description: 内部错误
        responseBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    required: true
                    description: 引用名称。
                  commit:
                    type: object
                    properties:
                      committer:
                        type: object
                        required: true
                        description: 提交者。默认值：当前认证的用户。
                        properties:
                          name:
                            type: string
                            required: true
                            description: 提交者的名称。如果省略该字段，您将收到 422 状态码。
                          email:
                            type: string
                            required: true
                            description: 提交者的电子邮件。如果省略电子邮件，您将收到422状态码。
                          date:
                            type: string
                            required: false
                      author:
                        type: object
                        required: true
                        description: "提交作者。默认值：当前认证的用户。"
                        properties:
                          name:
                            type: string
                            required: true
                            description: 提交作者的名称。如果省略该字段，您将收到 422 状态码。
                          email:
                            type: string
                            required: true
                            description: 提交作者的电子邮件。如果省略电子邮件，您将收到422状态码。
                          date:
                            type: string
                            required: false
                      message:
                        type: string
                        required: true
                        description: 提交信息。
                  sha:
                    type: string
                    required: true
                    description: 提交 SHA 值
                  parents:
                    type: array
                    items:
                      type: object
                      properties:
                        sha:
                          type: string
                          required: true
                          description: 提交 SHA 值
                    required: true
                  stats:
                    type: object
                    required: true
                    properties:
                      additions:
                        type: integer
                        required: true
                      deletions:
                        type: integer
                        required: true
                      total:
                        type: integer
                        required: true
  # # 获取联合提交状态
  /repos/{owner}/{repo}/commits/status/{ref}:
    get:
      tags:
        - commit statuses
      summary: 获取联合提交状态
      description: 获取联合提交状态
      operationId: getCombinedCommitStatuses
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token（需以Bearer加空格开头）
          required: true
        - name: owner
          in: path
          description: 代码仓库的所有者，一般称之为"用户名（username）"。该名称不区分大小写。
          required: true
        - name: repo
          in: path
          description: 代码仓库名称。该名称不区分大小写。
          required: true
        - name: ref
          in: path
          description: 引用
          required: true
      responses:
        200:
          description: 成功
        404:
          description: 资源未找到
        responseBody:
          content:
            application/json:
              schema:
                type: json
                properties:
                  state:
                    type: string
                    required: true
                    description: "状态枚举，枚举值为: error, failure, pending, success"
                  sha:
                    type: string
                    required: true
                    description: 提交 SHA 值。
                  total_count:
                    type: integer
                    required: true
                  statuses:
                    type: array
                    required: true
                    items:
                      type: object
                      properties:
                        state:
                          description: "状态枚举，枚举值为: error, failure, pending, success"
                          type: string
                          required: true
                        target_url:
                          type: string
                          required: false
                          description: |
                            与此状态关联的目标URL， 以允许用户轻松地查看状态的来源。
                            例如，如果你的持续集成系统正在发布构建状态，你会想要为这个特定 SHA 的构建输出一个类似格式的链接地址: http://ci.example.com/user/repo/build/sha
                        description:
                          type: string
                          required: false
                          description: 状态的简短描述。
                        context:
                          type: string
                          required: false
                          description: 一个字符串类型的标记，用于将此状态与其他系统(用户或者应用)的状态区分开来。该字段不区分大小写。 默认值：default
  # # 创建提交状态
  /repos/{owner}/{repo}/statuses/{sha}:
    post:
      tags:
        - commit statuses
      summary: 创建提交状态
      description: 创建提交状态
      operationId: CreateCommitStatuses
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token（需以Bearer加空格开头）
          required: true
        - name: owner
          in: path
          description: 代码仓库的所有者，一般称之为"用户名（username）"。该名称不区分大小写。
          required: true
        - name: repo
          in: path
          description: 代码仓库名称。该名称不区分大小写。
          required: true
        - name: sha
          in: path
          description: 提交 SHA 值
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: json
              properties:
                state:
                  description: "状态枚举，枚举值为: error, failure, pending, success"
                  type: string
                  required: true
                target_url:
                  type: string
                  required: false
                  description: |
                            与此状态关联的目标URL， 以允许用户轻松地查看状态的来源。
                            例如，如果你的持续集成系统正在发布构建状态，你会想要为这个特定 SHA 的构建输出一个类似格式的链接地址: http://ci.example.com/user/repo/build/sha
                description:
                  type: string
                  required: false
                  description: 状态的简短描述。
                context:
                  type: string
                  required: false
                  description: 一个字符串类型的标记，用于将此状态与其他系统(用户或者应用)的状态区分开来。该字段不区分大小写。 默认值：default
      responses:
        201:
          description: Created
        500:
          description: Internal Error
        responseBody:
          content:
            application/json:
              schema:
                type: json
                properties:
                  context:
                    type: string
                    required: true
                    description: 一个字符串类型的标记，用于将此状态与其他系统(用户或者应用)的状态区分开来。该字段不区分大小写。 默认值：default
                  created_at:
                    type: string
                    required: true
                    description: "创建时间. 遵循 ISO 8601 时间格式: YYYY-MM-DDTHH:MM:SSZ"
                  description:
                    type: string
                    required: false
                    description: 状态的简短描述。
                  required:
                    type: boolean
                    required: true
                  id:
                    type: integer
                    required: true
                  state:
                    type: string
                    required: true
                    description: "状态枚举，枚举值为: error, failure, pending, success"
                  target_url:
                    type: string
                    required: false
                    description: |
                            与此状态关联的目标URL， 以允许用户轻松地查看状态的来源。
                            例如，如果你的持续集成系统正在发布构建状态，你会想要为这个特定 SHA 的构建输出一个类似格式的链接地址: http://ci.example.com/user/repo/build/sha
  # ############ Check-runs接口 ############
  # # 创建自动化检查
  /repos/{owner}/{repo}/check-runs:
    post:
      tags:
        - check-runs
      summary: 创建自动化检查
      description: 创建自动化检查
      operationId: CreateCheckRun
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token（需以Bearer加空格开头）
          required: true
        - name: owner
          in: path
          description: 代码仓库的所有者，一般称之为"用户名（username）"。该名称不区分大小写。
          required: true
        - name: repo
          in: path
          description: 代码仓库名称。该名称不区分大小写。
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: json
              properties:
                name:
                  description: 自动化检查的名称. 例如, "code-coverage"。
                  type: string
                  required: true
                head_sha:
                  type: string
                  required: true
                  description: 提交 SHA 值
                status:
                  type: string
                  required: false
                  description: |
                    状态枚举，枚举值为：queued, in_progress, completed。默认值: queued
                started_at:
                  type: string
                  required: false
                  description: "检查开始时间。 遵循 ISO 8601 时间格式: YYYY-MM-DDTHH:MM:SSZ"
                conclusion:
                  type: string
                  required: false
                  description: |
                    如果您传递了 "completed_at" 字段或将 "status" 字段设置为 "completed"，则该字段为必传。该字段表达自动化检查的最终结果。、
                    注:提供 "conclusion" 字段将自动设置状态参数为 "completed"。同时将不能将 "conclusion" 更改为 "stale"，只有平台可以设置为此值。
                    枚举值: action_required, cancelled, failure, neutral, success, skip, stale, timed_out
                completed_at:
                  type: string
                  required: false
                  description: "检查结束时间。 遵循 ISO 8601 时间格式: YYYY-MM-DDTHH:MM:SSZ"
                action:
                  type: object
                  required: false
                  description: 自动化检查可以接受 "output" 中的各类数据，包括标题和摘要，并且可以选择性地提供有关运行的描述性详细信息。
                  properties:
                    label:
                      type: string
                      required: true
                      description: "在web UI的按钮上显示的文本。最大长度为 20 个字符。"
                    description:
                      type: string
                      required: true
                      description: "关于 action 用途的简短解释。最大长度为 40 个字符。"
                    identifier:
                      type: string
                      required: true
                      description: "集成系统上对于 action 的一个对照标识。最大长度为 20 字符."
                output:
                  type: object
                  required: false
                  description: 自动化检查可以接受 "output" 中的各类数据，包括标题和摘要，并且可以选择性地提供有关运行的描述性详细信息。
                  properties:
                    title:
                      type: string
                      required: true
                      description: "标题"
                    summary:
                      type: string
                      required: true
                      description: "摘要，支持Markdown格式. 最大长度为 65535 字符。"
                    text:
                      type: string
                      required: false
                      description: "详情，最大长度为 65535 字符。"
                    annotations:
                      type: object
                      required: false
                      description: |
                        将您分析出的信息附加到特定的代码行。
                        后续在平台上的更改请求的检查和文件更改选项卡中可以看到对应注释（annotations）。
                        自动化检查的 API 将请求的注释数量限制为最多 50 个。
                        如果要创建多于 50 个，可以多次发送请求， 从而将注释添加到已存在的注释列表中。
                      properties:
                        path:
                          type: string
                          required: true
                          description: "要添加注释的文件的路径。例如:assets/css/main.css。"
                        start_line:
                          type: int
                          required: true
                          description: "注释的起始行。行号从 1 开始。"
                        end_line:
                          type: int
                          required: false
                          description: "注释的结束行。"
                        start_column:
                          type: int
                          required: false
                          description: "注释的开始列。注释只支持同一行上的 start_column 和 end_column。如果 start_line 和 end_line 的值不同，则省略此参数。列号从 1 开始。"
                        end_column:
                          type: int
                          required: false
                          description: "注释的结束列。注释只支持同一行上的start_column和end_column。如果start_line和end_line的值不同，则省略此参数。"
                        annotation_level:
                          type: string
                          required: true
                          description: |
                            注释的级别， 枚举值为：notice, warning, failure
                        message:
                          type: string
                          required: true
                          description: "代码行信息的简短描述。最大为 64kb。"
                        title:
                          type: string
                          required: false
                          description: 注释的标题。最大长度为 255 个字符。
                        raw_details:
                          type: string
                          required: false
                          description: "注释的详细信息。最大为 64kb。"
                    images:
                      type: object
                      required: false
                      description: "在CR UI中添加图像。"
                      properties:
                        alt:
                          type: string
                          required: true
                          description: "图像的替代文本。"
                        image_url:
                          type: string
                          required: true
                          description: "图像的完整URL。"
                        caption:
                          type: string
                          required: false
                          description: "简短的图像描述。"
      responses:
        201:
          description: 已创建
        500:
          description: 内部错误
        responseBody:
          content:
            application/json:
              schema:
                type: json
                properties:
                  id:
                    type: integer
                    required: true
                  head_sha:
                    type: string
                    required: true
                  external_id:
                    type: integer
                    required: true
                  status:
                    type: string
                    required: true
                  conclusion:
                    type: string
                    required: false
                  started_at:
                    type: string
                    required: true
                    description: "检查开始时间。 遵循 ISO 8601 时间格式: YYYY-MM-DDTHH:MM:SSZ"
                  completed_at:
                    type: string
                    required: false
                    description: "检查结束时间。 遵循 ISO 8601 时间格式: YYYY-MM-DDTHH:MM:SSZ"
                  name:
                    type: string
                    required: true
                  app:
                    type: object
                    properties:
                      id:
                        type: integer
                        required: true
                      slug:
                        type: string
                        required: true
                      name:
                        type: string
                        required: true
                      description:
                        type: string
                        required: true
  # # 更新自动化检查
  /repos/{owner}/{repo}/check-runs/{check_run_id}:
    get:
      tags:
        - check-runs
      summary: 查询自动化检查
      description: 查询自动化检查
      operationId: CreateCheckRun
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token（需以Bearer加空格开头）
          required: true
        - name: owner
          in: path
          description: "The account owner of the repository. The name is not case sensitive."
          required: true
        - name: repo
          in: path
          description: "The name of the repository. The name is not case sensitive."
          required: true
        - name: check_run_id
          in: path
          description: The unique identifier of the check run.
      responses:
        200:
          description: Created
    patch:
      tags:
        - check-runs
      summary: 更新自动化检查
      description: 更新自动化检查
      operationId: CreateCheckRun
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token（需以Bearer加空格开头）
          required: true
        - name: owner
          in: path
          description: 代码仓库的所有者，一般称之为"用户名（username）。该名称不区分大小写。
          required: true
        - name: repo
          in: path
          description: 代码仓库名称。该名称不区分大小写。
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: json
              properties:
                name:
                  description: 自动化检查的名称. 例如, "code-coverage"。
                  type: string
                  required: true
                head_sha:
                  type: string
                  required: true
                  description: 提交 SHA 值
                status:
                  type: string
                  required: false
                  description:  |
                    状态枚举，枚举值为：queued, in_progress, completed。默认值: queued
                started_at:
                  type: string
                  required: false
                  description: |
                    检查开始时间。 遵循 ISO 8601 时间格式: YYYY-MM-DDTHH:MM:SSZ
                conclusion:
                  type: string
                  required: false
                  description: |
                    如果您传递了 "completed_at" 字段或将 "status" 字段设置为 "completed"，则该字段为必传。该字段表达自动化检查的最终结果。、
                    注:提供 "conclusion" 字段将自动设置状态参数为 "completed"。同时将不能将 "conclusion" 更改为 "stale"，只有平台可以设置为此值。
                    枚举值: action_required, cancelled, failure, neutral, success, skip, stale, timed_out
                completed_at:
                  type: string
                  required: false
                  description: "检查结束时间。 遵循 ISO 8601 时间格式: YYYY-MM-DDTHH:MM:SSZ"
                action:
                  type: object
                  required: false
                  description:  自动化检查可以接受 "output" 中的各类数据，包括标题和摘要，并且可以选择性地提供有关运行的描述性详细信息。
                  properties:
                    label:
                      type: string
                      required: true
                      description: "在web UI的按钮上显示的文本。最大长度为 20 个字符。"
                    description:
                      type: string
                      required: true
                      description: "关于 action 用途的简短解释。最大长度为 40 个字符。"
                    identifier:
                      type: string
                      required: true
                      description: "集成系统上对于 action 的一个对照标识。最大长度为 20 字符."
                output:
                  type: object
                  required: false
                  description: 自动化检查可以接受 "output" 中的各类数据，包括标题和摘要，并且可以选择性地提供有关运行的描述性详细信息。
                  properties:
                    title:
                      type: string
                      required: true
                      description: "标题"
                    summary:
                      type: string
                      required: true
                      description: "摘要，支持Markdown格式. 最大长度为 65535 字符。"
                    text:
                      type: string
                      required: false
                      description: "详情，最大长度为 65535 字符。"
                    annotations:
                      type: object
                      required: false
                      description: |
                        将您分析出的信息附加到特定的代码行。
                        后续在平台上的更改请求的检查和文件更改选项卡中可以看到对应注释（annotations）。
                        自动化检查的 API 将请求的注释数量限制为最多 50 个。
                        如果要创建多于 50 个，可以多次发送请求， 从而将注释添加到已存在的注释列表中。
                      properties:
                        path:
                          type: string
                          required: true
                          description: "要添加注释的文件的路径。例如:assets/css/main.css。"
                        start_line:
                          type: int
                          required: true
                          description: "注释的起始行。行号从 1 开始。"
                        end_line:
                          type: int
                          required: false
                          description: "注释的结束行。"
                        start_column:
                          type: int
                          required: false
                          description: "注释的开始列。注释只支持同一行上的 start_column 和 end_column。如果 start_line 和 end_line 的值不同，则省略此参数。列号从 1 开始。"
                        end_column:
                          type: int
                          required: false
                          description: "注释的结束列。注释只支持同一行上的start_column和end_column。如果start_line和end_line的值不同，则省略此参数。"
                        annotation_level:
                          type: string
                          required: true
                          description: |
                            注释的级别， 枚举值为：notice, warning, failure
                        message:
                          type: string
                          required: true
                          description: "代码行信息的简短描述。最大为 64kb。"
                        title:
                          type: string
                          required: false
                          description: "注释的标题。最大长度为 255 个字符。"
                        raw_details:
                          type: string
                          required: false
                          description: "注释的详细信息。最大为 64kb。"
                    images:
                      type: object
                      required: false
                      description: "在CR UI中添加图像。"
                      properties:
                        alt:
                          type: string
                          required: true
                          description: "图像的替代文本。"
                        image_url:
                          type: string
                          required: true
                          description: "图像的完整URL。"
                        caption:
                          type: string
                          required: false
                          description: "简短的图像描述。"
      responses:
        200:
          description: 成功
        500:
          description: 内部错误
        responseBody:
          content:
            application/json:
              schema:
                type: json
                properties:
                  id:
                    type: integer
                    required: true
                  head_sha:
                    type: string
                    required: true
                    description: 提交 SHA值
                  external_id:
                    type: integer
                    required: true
                    description: 在外部集成系统中的唯一标识.
                  status:
                    type: string
                    required: true
                    description: |
                      状态枚举，枚举值为：queued, in_progress, completed。默认值: queued
                  conclusion:
                    type: string
                    required: false
                  description: |
                    如果您传递了 "completed_at" 字段或将 "status" 字段设置为 "completed"，则该字段为必传。该字段表达自动化检查的最终结果。、
                    注:提供 "conclusion" 字段将自动设置状态参数为 "completed"。同时将不能将 "conclusion" 更改为 "stale"，只有平台可以设置为此值。
                    枚举值: action_required, cancelled, failure, neutral, success, skip, stale, timed_out
                  started_at:
                    type: string
                    required: true
                    description: "检查开始时间。 遵循 ISO 8601 时间格式: YYYY-MM-DDTHH:MM:SSZ"
                  completed_at:
                    type: string
                    required: false
                    description: "检查结束时间。 遵循 ISO 8601 时间格式: YYYY-MM-DDTHH:MM:SSZ"
                  name:
                    type: string
                    required: true
                    description: 自动化检查的名称. 例如, "code-coverage"。
                  app:
                    type: object
                    properties:
                      id:
                        type: integer
                        required: true
                        description: Atomgit App 的 ID
                      slug:
                        type: string
                        required: true
                        description: Atomgit App 的 slug
                      name:
                        type: string
                        required: true
                        description: Atomgit App 的名称
                      description: 
                        type: string
                        required: true
  # # 获取仓库content
  /repos/{owner}/{repo}/contents/{path}:
    get:
      tags:
        - repository contents
      summary: 获取仓库content
      description: 获取仓库content
      operationId: GetRepoConent
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token（需以Bearer加空格开头）
          required: true
        - name: owner
          in: path
          description: 代码仓库的所有者，一般称之为"用户名（username）"。该名称不区分大小写。
          required: true
        - name: repo
          in: path
          description: 代码仓库名称。该名称不区分大小写。
          required: true
        - name: path
          in: path
          description: 文件路径。
      responses:
        200:
          description: 成功
        403:
          description: 禁止访问
        404:
          description: 资源未找到
        responseBody:
          content:
            application/json:
              schema:
                type: json
                properties:
                  encoding:
                    type: string
                    required: true
                    description: "编码类型。默认值：base64"
                  name:
                    type: string
                    required: true
                    description: "文件名称"
                  path:
                    type: string
                    required: true
                    description: "文件路径"
                  sha:
                    type: string
                    required: true
                    description: "对应提交 SHA 值"
                  size:
                    type: integer
                    required: true
                    description: 文件大小，如果 "type" 是 "dir" 或 "submodule" 则为 0
                  type:
                    type: string
                    required: true
                    description: "文件类型，枚举值：file, dir, symlink, submodule"
                  entries:
                    type: array
                    required: false
                    description: |
                      如果 "type" 是 "dir"，则返回该目录下的文件和子目录。
                      如果 "type" 是 "file"，则返回空数组。
                      如果 "type" 是 "symlink"，则返回符号链接的信息。
                      如果 "type" 是 "submodule"，则返回子模块的信息。
                    items:
                      type: object
                      properties:
                        encoding:
                          type: string
                          required: true
                          description: "编码类型。默认值：base64"
                        name:
                          type: string
                          required: true
                          description: "文件名称"
                        path:
                          type: string
                          required: true
                          description: "文件路径"
                        sha:
                          type: string
                          required: true
                          description: "对应提交 SHA 值"
                        size:
                          type: integer
                          required: true
                          description: 文件大小，如果 "type" 是 "dir" 或 "submodule" 则为 0
                        type:
                          type: string
                          required: true
                          description: "文件类型，枚举值：file, dir, symlink, submodule"
# 创建或更新content
    put:
      tags:
        - repository contents
      summary: 创建或更新仓库content
      description: 创建或更新仓库content
      operationId: SaveRepoConent
      parameter:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token（需以Bearer加空格开头）
          required: true
        - name: owner
          in: path
          description: 代码仓库的所有者，一般称之为"用户名（username）"。该名称不区分大小写。
          required: true
        - name: repo
          in: path
          description: 代码仓库名称。该名称不区分大小写。
          required: true
        - name: path
          in: path
          description: 文件路径。
      requestBody:
        content:
          application/json:
            schema:
              type: json
              properties:
                message:
                  type: string
                  required: true
                  description: 提交信息
                content:
                  type: string
                  required: true
                  description: 文件内容，使用Base64编码。
                sha:
                  type: string
                  required: false
                  description: 如果是更新文件，则改字段为必填。就提交的 SHA 值。
                branch:
                  type: string
                  required: false
                  description: "分支名称。Default：代码仓库的默认分支。"
                committer:
                  type: object
                  required: false
                  description: 提交者。默认值：当前认证的用户。"
                  properties:
                    name:
                      type: string
                      required: true
                      description: "提交者的名称。如果省略该字段，您将收到 422 状态码。"
                    email:
                      type: string
                      required: true
                      description: 提交者的电子邮件。如果省略电子邮件，您将收到422状态码。
                    date:
                      type: string
                      required: false
                author:
                  type: object
                  required: false
                  description: "提交作者。默认值：当前认证的用户。"
                  properties:
                    name:
                      type: string
                      required: true
                      description: "提交作者的名称。如果省略该字段，您将收到 422 状态码。"
                    email:
                      type: string
                      required: true
                      description: 提交作者的电子邮件。如果省略电子邮件，您将收到422状态码。
                    date:
                      type: string
                      required: false
      responses:
        200:
          description: 成功
        201:
          description: 已创建
        403:
          description: 禁止访问
        409:
          description: 冲突（有人先一步更新了文件）
        404:
          description: 资源未找到
        responseBody:
          content:
            application/json:
              schema:
                type: json
                properties:
                  content:
                    type: object
                    properties:
                      encoding:
                        type: string
                        required: true
                        description: "编码类型。默认值：base64"
                      name:
                        type: string
                        required: true
                        description: "文件名称"
                      path:
                        type: string
                        required: true
                        description: "文件路径"
                      sha:
                        type: string
                        required: true
                        description: "对应提交 SHA 值"
                      size:
                        type: integer
                        required: true
                        description: 文件大小，如果 "type" 是 "dir" 或 "submodule" 则为 0
                      type:
                        type: string
                        required: true
                        description: "文件类型，枚举值：file, dir, symlink, submodule"
                      entries:
                        type: array
                        required: false
                        description: |
                          如果 "type" 是 "dir"，则返回该目录下的文件和子目录。
                          如果 "type" 是 "file"，则返回空数组。
                          如果 "type" 是 "symlink"，则返回符号链接的信息。
                          如果 "type" 是 "submodule"，则返回子模块的信息。
                        items:
                          type: object
                          properties:
                            encoding:
                              type: string
                              required: true
                              description: "编码类型。默认值：base64"
                            name:
                              type: string
                              required: true
                              description: "文件名称"
                            path:
                              type: string
                              required: true
                              description: "文件路径"
                            sha:
                              type: string
                              required: true
                              description: "对应提交 SHA 值"
                            size:
                              type: integer
                              required: true
                              description: 文件大小，如果 "type" 是 "dir" 或 "submodule" 则为 0
                            type:
                              type: string
                              required: true
                              description: "文件类型，枚举值：file, dir, symlink, submodule"
                  commit:
                      type: object
                      properties:
                        committer:
                          type: object
                          required: true
                          description: "提交者。默认值：当前认证的用户。"
                          properties:
                            name:
                              type: string
                              required: true
                              description: "提交者的名称。如果省略该字段，您将收到 422 状态码。"
                            email:
                              type: string
                              required: true
                              description: 提交者的电子邮件。如果省略电子邮件，您将收到422状态码。
                            date:
                              type: string
                              required: false
                        author:
                          type: object
                          required: true
                          description: "提交作者。默认值：当前认证的用户。"
                          properties:
                            name:
                              type: string
                              required: true
                              description: "提交作者的名称。如果省略该字段，您将收到 422 状态码。"
                            email:
                              type: string
                              required: true
                              description: 提交作者的电子邮件。如果省略电子邮件，您将收到422状态码。
                            date:
                              type: string
                              required: false
                        message:
                          type: string
                          required: true
                          description: 提交信息
                        sha:
                          type: string
                          required: true
                          description: "提交 SHA 值"
                        parents:
                          type: array
                          required: true
                          description: "父提交"
                          items:
                            type: object
                            properties:
                              sha:
                                type: string
                                required: true
                                description: "父提交 SHA 值"
    # 删除content
    delete:
      tags:
        - repository contents
      summary: 删除仓库content
      description: 删除仓库content
      operationId: DeleteRepoConent
      parameter:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token（需以Bearer加空格开头）
          required: true
        - name: owner
          in: path
          description: 代码仓库的所有者，一般称之为"用户名（username）"。该名称不区分大小写。
          required: true
        - name: repo
          in: path
          description: 代码仓库名称。该名称不区分大小写。
          required: true
        - name: path
          in: path
          description: 要删除的文件路径。
      requestBody:
        content:
          application/json:
            schema:
              type: json
              properties:
                message:
                  type: string
                  required: true
                  description: 提交信息
                sha:
                  type: string
                  required: true
                  description: "要删除的文件 SHA 值"
                branch:
                  type: string
                  required: false
                  description: "分支名称。默认值：仓库的默认分支。"
                committer:
                  type: object
                  required: false
                  description: 提交者。默认值：当前认证的用户。
                  properties:
                    name:
                      type: string
                      required: true
                      description: 提交者的名称。如果省略该字段，您将收到 422 状态码。
                    email:
                      type: string
                      required: true
                      description: 提交者的电子邮件。如果省略电子邮件，您将收到422状态码。
                    date:
                      type: string
                      required: false
                author:
                  type: object
                  required: false
                  description: 提交作者。默认值：当前认证的用户。
                  properties:
                    name:
                      type: string
                      required: true
                      description: 提交作者的名称。如果省略该字段，您将收到 422 状态码。
                    email:
                      type: string
                      required: true
                      description: 提交作者的电子邮件。如果省略电子邮件，您将收到422状态码。
                    date:
                      type: string
                      required: false
      responses:
        200:
          description: OK
        403:
          description: Forbidden
        409:
          description: Conflict
        404:
          description: Resource not found
        responseBody:
          content:
            application/json:
              schema:
                type: json
                properties:
                  content:
                    type: object
                    properties:
                      encoding:
                        type: string
                        required: true
                        description: "编码类型。默认值：base64"
                      name:
                        type: string
                        required: true
                        description: "文件名称"
                      path:
                        type: string
                        required: true
                        description: "文件路径"
                      sha:
                        type: string
                        required: true
                        description: "对应提交 SHA 值"
                      size:
                        type: integer
                        required: true
                        description: 文件大小，如果 "type" 是 "dir" 或 "submodule" 则为 0
                      type:
                        type: string
                        required: true
                        description: "文件类型，枚举值：file, dir, symlink, submodule"
                      entries:
                        type: array
                        required: false
                        description: |
                          如果 "type" 是 "dir"，则返回该目录下的文件和子目录。
                          如果 "type" 是 "file"，则返回空数组。
                          如果 "type" 是 "symlink"，则返回符号链接的信息。
                          如果 "type" 是 "submodule"，则返回子模块的信息。
                        items:
                          type: object
                          properties:
                            encoding:
                              type: string
                              required: true
                              description: "编码类型。默认值：base64"
                            name:
                              type: string
                              required: true
                              description: "文件名称"
                            path:
                              type: string
                              required: true
                              description: "文件路径"
                            sha:
                              type: string
                              required: true
                              description: "对应提交 SHA 值"
                            size:
                              type: integer
                              required: true
                              description:  文件大小，如果 "type" 是 "dir" 或 "submodule" 则为 0
                            type:
                              type: string
                              required: true
                              description: "文件类型，枚举值：file, dir, symlink, submodule"
                  commit:
                      type: object
                      properties:
                        committer:
                          type: object
                          required: true
                          description: "The person that committed the file. Default: the authenticated user."
                          properties:
                            name:
                              type: string
                              required: true
                              description: "The name of the author or committer of the commit. You'll receive a 422 status code if name is omitted."
                            email:
                              type: string
                              required: true
                              description: The email of the author or committer of the commit. You'll receive a 422 status code if email is omitted.
                            date:
                                type: string
                                required: false
                        author:
                          type: object
                          required: true
                          description: 提交者。默认值：当前认证的用户。
                          properties:
                            name:
                              type: string
                              required: true
                              description: 提交者的名称。如果省略该字段，您将收到 422 状态码。
                            email:
                              type: string
                              required: true
                              description: 提交者的电子邮件。如果省略电子邮件，您将收到422状态码。
                            date:
                                type: string
                                required: false
                        message:
                          type: string
                          required: true
                          description: 提交信息
                        sha:
                          type: string
                          required: true
                          description: 提交 SHA 值
                        parents:
                          type: array
                          required: true
                          description: 父提交 SHA 值
                          properties:
                            sha:
                              type: string
                              required: true
                              description: 父提交 SHA 值
############ 变更请求接口（Change Requests API）############
# 创建变更请求
  /repos/{owner}/{repo}/pulls:
    post:
      tags:
        - change requests
      summary: 创建变更请求
      description: 创建变更请求
      operationId: CreateChangeRequest
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token（需以Bearer加空格开头）
          required: true
        - name: owner
          in: path
          description: 代码仓库的所有者，一般称之为"用户名（username）"。该名称不区分大小写。
          required: true
        - name: repo
          in: path
          description: 代码仓库名称。该名称不区分大小写。
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: json
              properties:
                title:
                  type: string
                  required: false
                  description: 变更请求标题。
                body:
                  type: string
                  required: false
                  description: 变更请求描述。
                head:
                  type: string
                  required: true
                  description: 来源分支，创建跨库CR时格式为："[<src_org>|<src_username>]:<src_branch>"， 如创建同库的变更请求，只传递 <src_branch> 即可。
                base:
                  type: string
                  required: true
                  description: 目标分支，格式："<dst_branch>"。
                draft:
                  type: boolean
                  required: false
                  description: "true 表示创建草稿（工作中）变更请求，false 表示创建已发布的变更请求。默认值：false"
      responses:
        201:
          description: 已创建
        403:
          description: 禁止访问
        404:
          description: 资源未找到
        409:
          description: 冲突。还有类似的变更请求正在评审中。
        responseBody:
          content:
            application/json:
              schema:
                type: json
                properties:
                  id:
                    type: string
                    required: true
                    description: 变更请求的业务ID。
                  number:
                    type: integer
                    required: true
                    description: 变更请求的编号（仓库内部的短ID）。
                  state:
                    type: string
                    required: true
                    description: 变更请求的状态，枚举值：open, closed。
                  title:
                    type: string
                    required: true
                    description: 变更请求标题。
                  body:
                    type: string
                    required: true
                    description: 变更请求描述。
                  created_at:
                    type: string
                    required: true
                    description: |
                      变更请求创建时间。遵循 ISO 8601 时间格式: YYYY-MM-DDTHH:MM:SSZ"
                  updated_at:
                    type: string
                    required: true
                    description: |
                      变更请求更新时间。遵循 ISO 8601 时间格式: YYYY-MM-DDTHH:MM:SSZ"
                  draft:
                    type: boolean
                    required: true
                    description: "true 表示创建草稿（工作中）变更请求，false 表示创建已发布的变更请求。默认值：false"
# 查询变更请求详情
  /repos/{owner}/{repo}/pulls/{pull_number}:
    get:
      tags:
        - change requests
      summary: 查询变更请求详情
      description: 创建变更请求详情
      operationId: GetChangeRequest
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token（需以Bearer加空格开头）
          required: true
        - name: owner
          in: path
          description: 代码仓库的所有者，一般称之为"用户名（username）"。该名称不区分大小写。
          required: true
        - name: repo
          in: path
          description: 代码仓库名称。该名称不区分大小写。
          required: true
        - name: pull_number
          in: path
          description: 变更请求的编号（仓库内部的短ID）。
      responses:
        200:
          description: 成功
        403:
          description: 已禁止
        404:
          description: 资源未找到
        responseBody:
          content:
            application/json:
              schema:
                type: json
                properties:
                  id:
                    type: string
                    required: true
                    description: 变更请求的业务ID。
                  number:
                    type: integer
                    required: true
                    description: 变更请求的编号（仓库内部的短ID）。
                  state:
                    type: string
                    required: true
                    description: 变更请求的状态，枚举值：open, closed。
                  title:
                    type: string
                    required: true
                    description: 变更请求标题。
                  body:
                    type: string
                    required: true
                    description: 变更请求描述。
                  created_at:
                    type: string
                    required: true
                    description: |
                      变更请求创建时间。遵循 ISO 8601 时间格式: YYYY-MM-DDTHH:MM:SSZ"
                  updated_at:
                    type: string
                    required: true
                    description: |
                      变更请求更新时间。遵循 ISO 8601 时间格式: YYYY-MM-DDTHH:MM:SSZ"
                  in_reply_to:
                    type: string
                    required: false
                    description: |
                      变更请求回复的评论业务ID。
# 创建评论
  /repos/{owner}/{repo}/pulls/comments:
    post:
      tags:
        - change requests
      summary: 创建评论
      description: 创建评论
      operationId: CreateChangeRequestComment
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token（需以Bearer加空格开头）
          required: true
        - name: owner
          in: path
          description: 代码仓库的所有者，一般称之为"用户名（username）"。该名称不区分大小写。
          required: true
        - name: repo
          in: path
          description: 代码仓库名称。该名称不区分大小写。
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: json
              properties:
                body:
                  type: string
                  required: false
                  description: 评论的内容。
                commit_id:
                  type: string
                  required: true
                  description: |
                    要评论文件的对应提交 SHA值，提交对应的patchset。
                path:
                  type: string
                  required: false
                  description: |
                    要评论的文件的相对路径（如果是全局评论，则省略值）。
                line:
                  type: integer
                  required: false
                  description: |
                    要评论的文件的相对路径（如果是全局评论，则省略值）。
      responses:
        201:
          description: 已创建
        403:
          description: 禁止访问
        404:
          description: 资源未找到
        responseBody:
          content:
            application/json:
              schema:
                type: json
                properties:
                  id:
                    type: string
                    required: true
                    description: 评论的业务ID。
                  pull_request_review_id:
                    type: string
                    required: true
                    description: |
                      评论所属的变更请求的业务ID。
                  path:
                    type: string
                    required: false
                    description: |
                      评论所属的变更请求的业务ID。
                  commit_id:
                    type: string
                    required: false
                    description: |
                      评论所属的变更请求的业务ID。
                  in_reply_to_id:
                    type: string
                    required: false
                    description: |
                      评论所属的变更请求的业务ID。
                  body:
                    type: string
                    required: true
                    description:  评论的内容。
                  line:
                    type: integer
                    required: false
                    description: 评论对应文件的行号。
                  created_at:
                    type: string
                    required: true
                    description: |
                      创建时间。遵循 ISO 8601 时间格式: YYYY-MM-DDTHH:MM:SSZ"
                  updated_at:
                    type: string
                    required: true
                    description: |
                      更新时间。遵循 ISO 8601 时间格式: YYYY-MM-DDTHH:MM:SSZ"
# 创建回复
  /repos/{owner}/{repo}/pulls/comments/{comment_id}/replies:
    post:
      tags:
        - change requests
      summary: 创建回复
      description: 创建回复
      operationId: CreateChangeRequestReply
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token（需以Bearer加空格开头）
          required: true
        - name: owner
          in: path
          description: 代码仓库的所有者，一般称之为"用户名（username）"。该名称不区分大小写。
          required: true
        - name: repo
          in: path
          description: 代码仓库名称。该名称不区分大小写。
          required: true
        - name: comment_id
          in: path
          description: 评论的业务ID。
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: json
              properties:
                body:
                  type: string
                  required: false
                  description: 回复的内容。
      responses:
        201:
          description: 已创建
        403:
          description: 禁止访问
        404:
          description: 资源未找到
        responseBody:
          content:
            application/json:
              schema:
                type: json
                properties:
                  id:
                    type: string
                    required: true
                    description: 回复的业务ID。
                  pull_request_review_id:
                    type: string
                    required: true
                    description: |
                      回复所属的评论的业务ID。
                  path:
                    type: string
                    required: false
                    description: 评论对应的文件路径
                  commit_id:
                    type: string
                    required: false
                    description: 要评论文件的对应提交 SHA 值，提交对应于的patchset。
                  in_reply_to_id:
                    type: string
                    required: false
                    description: |
                      回复所属的评论的业务ID。
                  body:
                    type: string
                    required: true
                    description: 回复的内容。
                  line:
                    type: integer
                    required: false
                    description: 回复对应文件的行号。
                  created_at:
                    type: string
                    required: true
                    description: |
                      创建时间。遵循 ISO 8601 时间格式: YYYY-MM-DDTHH:MM:SSZ"
                  updated_at:
                    type: string
                    required: true
                    description: |
                      更新时间。遵循 ISO 8601 时间格式: YYYY-MM-DDTHH:MM:SSZ"
# 查询评论详情
  /repos/{owner}/{repo}/pulls/comments/{comment_id}:
    get:
      tags:
        - change requests
      summary: 查询变更请求评论
      description: 查询变更请求评论
      operationId: GetChangeRequestComment
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token（需以Bearer加空格开头）
          required: true
        - name: owner
          in: path
          description: 代码仓库的所有者，一般称之为"用户名（username）"。该名称不区分大小写。
          required: true
        - name: repo
          in: path
          description: 代码仓库名称。该名称不区分大小写。
          required: true
        - name: pull_number
          in: path
          description: 变更请求的编号（仓库内部的短ID）。
      responses:
        200:
          description: 成功
        403:
          description: 禁止访问
        404:
          description: 资源未找到
        responseBody:
          content:
            application/json:
              schema:
                type: json
                properties:
                  id:
                    type: string
                    required: true
                    description: 评论的业务ID。
                  pull_request_review_id:
                    type: string
                    required: true
                    description: |
                      评论所属的变更请求的业务ID。
                  path:
                    type: string
                    required: false
                    description: 评论对应的文件路径
                  commit_id:
                    type: string
                    required: false
                    description: 要评论文件的对应提交 SHA 值，提交对应于的patchset。
                  in_reply_to_id:
                    type: string
                    required: false
                    description: 回复的评论的业务ID。
                  body:
                    type: string
                    required: true
                    description: 评论的内容。
                  line:
                    type: integer
                    required: false
                    description: 评论对应文件的行号。
                  created_at:
                    type: string
                    required: true
                    description: |
                      创建时间。遵循 ISO 8601 时间格式: YYYY-MM-DDTHH:MM:SSZ"
                  updated_at:
                    type: string
                    required: true
                    description: |
                      更新时间。遵循 ISO 8601 时间格式: YYYY-MM-DDTHH:MM:SSZ"
# 查询评论列表
  /repos/{owner}/{repo}/pulls/{pull_number}/comments:
    get:
      tags:
        - change requests
      summary: 查询评论列表
      description: 查询评论列表
      operationId: GetChangeRequesCommentList
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token或者私人token（需以Bearer加空格开头）
          required: true
        - name: owner
          in: path
          description: 代码仓库的所有者，一般称之为"用户名（username）"。该名称不区分大小写。
          required: true
        - name: repo
          in: path
          description: 代码仓库名称。该名称不区分大小写。
          required: true
        - name: pull_number
          in: path
          description: 变更请求的编号（仓库内部的短ID）。
          required: true
        - name: page
          in: query
          description: "页码(默认为1)"
          required: false
        - name: per_page
          in: query
          description: "页面大小(默认 30,最大 100)"
          required: false
      responses:
        200:
          description: 成功
        403:
          description: 进展访问
        404:
          description: 资源未找到
        responseBody:
          content:
            application/json:
              schema:
                type: array
                required: true
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      required: true
                      description: 评论的业务ID。
                    pull_request_review_id:
                      type: string
                      required: true
                      description: |
                        评论所属的变更请求的业务ID。
                    path:
                      type: string
                      required: false
                      description: 评论对应的文件路径
                    commit_id:
                      type: string
                      required: false
                      description: 要评论文件的对应提交 SHA 值，提交对应于的patchset。
                    in_reply_to_id:
                      type: string
                      required: false
                      description: 回复的评论的业务ID。
                    body:
                      type: string
                      required: true
                      description: 评论的内容。
                    line:
                      type: integer
                      required: false
                      description: 评论对应文件的行号。
                    created_at:
                      type: string
                      required: true
                      description: |
                        创建时间。遵循 ISO 8601 时间格式: YYYY-MM-DDTHH:MM:SSZ"
                    updated_at:
                      type: string
                      required: true
                      description: |
                        更新时间。遵循 ISO 8601 时间格式: YYYY-MM-DDTHH:MM:SSZ"
components:
  schemas:
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
    Id:
      type: integer
      format: int64
      readOnly: true
    Tag:
      type: object
      properties:
        id:
          description: Tag ID
          allOf:
            - $ref: "#/components/schemas/Id"
        name:
          description: Tag name
          type: string
          minLength: 1
      xml:
        name: Tag
    ParamterError:
      type: object
      properties:
        cause:
          description: error cause
          type: string
          example: MESSAGE.PARAMETER_ERROR
        error_code:
          description: PARAMETER_ERROR
          type: string
          example: error code
        error_message:
          description: PARAMETER_ERROR
          type: string
          example: 用户昵称不合法（长度不能小于1且不能大于20个字符）
        trace_id:
          description:  trace id
          type: string
          example: trace_id
        code:
          description: response code
          type: Integer
          example: 1000
    InvalidToken:
      type: object
      properties:
        error:
          description: 错误名称
          type: string
          example: invalid_token
        error_description:
          description: 错误描述
          type: string
          example: Invalid token, please provide correct token
    UpdateAuthenticatedUserDTO:
      type: object
      properties:
        name:
          description: The current user's nickname is between 1 and 20 characters in length
          type: string
          example: 这就是我的昵称
        blog:
          description: The blog address of the current user is between 1 and 100 characters
          type: string
          example: https://youboke.com
        company:
          description: The company name of the current user is between 1 and 50 characters
          type: string
          example: atom
        location:
          description: The current user's location is between 1 and 20 characters
          type: string
          example: beijing
        bio:
          description: The current user's profile is between 1 and 200 characters
          type: string
          example: hello i am putianyang
    UserEmailVO:
      type: object
      properties:
        email:
          description: 邮箱
          type: string
          example: 2xas@qq.com
        verified:
          description: 是否经过验证
          type: boolean
          example: false
        visibility:
          description: 邮箱是否公开(public为公开、 private为私有)
          type: string
          example: public
    User:
      type: object
      properties:
        login:
          description: 用户名
          type: string
          example: mrpuatomgit
        id:
          description: 用户id
          type: string
          example: 63db126c0566d2f7d2c9498c
        url:
          description: 根据获取用户名获取用户信息的接口路径
          type: string
          example: https://api.atomgit.com/users/mrpuatomgit
        name:
          description: 昵称
          type: string
          example: 这就是我的昵称
        company:
          description: 公司
          type: string
          example: atom
        blog:
          description: 博客
          type: string
          example: https://youboke.com
        location:
          description: 地址
          type: string
          example: beijing
        email:
          description: 邮箱
          type: string
          example: example@atomgit.com
        bio:
          description: 简介
          type: string
          example: hello i am putianyang
        avatar_url:
          description: 头像
          type: string
          example: https://img-host/uploads/user/1656318880150_5104.png
        html_url:
          description: 主页地址
          type: string
          example: https://atomgit.com/mrpuatomgit
        public_repos:
          description: 公开仓库数量
          type: Integer
          example: 3
        total_private_repos:
          description: 私有仓库总数量
          type: Integer
          example: 2
        owned_private_repos:
          description: 本人创建的私有仓库数量
          type: Integer
          example: 1
        created_at:
          description: 注册时间
          type: string
          example: '2023-02-02 09:31:24'
        updated_at:
          description: 更新时间
          example: '2023-02-02 09:31:24'
    AuthenticatedUserListVO:
      type: object
      properties:
        login:
          description: 用户名
          type: string
          example: mrpuatomgit
        id:
          description: 用户id
          type: string
          example: 63db126c0566d2f7d2c9498c
        avatar_url:
          description: 头像
          type: string
          example: https://img-host/uploads/user/1656318880150_5104.png
        url:
          description: 根据获取用户名获取用户信息的接口路径
          type: string
          example: https://api.atomgit.com/users/mrpuatomgit
        html_url:
          description: 主页地址
          type: string
          example: https://atomgit.com/mrpuatomgit
        organizations_url:
          description: 组织url
          type: string
          example: https://atomgit.com/users/zhangzhe/starred
        repos_url:
          description: 仓库url
          type: string
          example: https://atomgit.com/users/zhangzhe/projects
    SSHKeyVO:
      type: object
      properties:
        key:
          description: 公钥
          type: string
          example: ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIPE6tiarA4AR0asd33dklfjf87R6TE9BJAfkdBpqHi9zWfRhloJ 323467712@qq.com
        id:
          description: 公钥id
          type: string
          example: 207003
        title:
          description: 公钥名称
          type: string
          example: ssh-1
        createdAt:
          description: 创建时间
          type: string
          example: "2023-02-24T04:31:36.000+00:00"
        readOnly:
          description: 是否只读
          type: boolean
          example: false
    AddSSHKeyDTO:
      type: object
      properties:
        title:
          description: 标题
          type: string
          example: 标题
        key:
          description: ssh公钥
          type: string
          example: ssh公钥
    OrgPage:
      type: object
      properties:
        login:
          description: 组织名称
          type: string
          example: csdn
        id:
          description: 组织id
          type: string
          example: 62b59720cbcaeffdff0148ce
        url:
          description: 组织的OepnApi地址
          type: string
          example: https://api.atomgit.com/orgs/csdn
        repos_url:
          description: 组织的repos地址
          type: string
          example: https://api.atomgit.com/orgs/csdn/repos
        events_url:
          description: 组织的event地址
          type: string
          example: https://api.atomgit.com/orgs/csdn/events
        hooks_url:
          description: 组织的hooks地址
          type: string
          example:  https://api.atomgit.com/orgs/csdn/hooks
        issues_url:
          description: 组织的issue地址
          type: string
          example: https://api.atomgit.com/orgs/csdn_test2/issues
        members_url:
          description: 组织的members地址
          type: string
          example: https://api.atomgit.com/orgs/csdn/members/{/member}
        public_members_url:
          description: 组织的public members地址
          type: string
          example: https://api.atomgit.com/orgs/csdn/public_members/{/member}
        avatar_url:
          description: 组织头像地址
          type: string
          example: https://img-host/uploads/org/1656042927816_7741.png
        description:
          description: 组织的描述
          type: string
          example: csdn is a goog website
    OrgDetail:
      type: object
      properties:
        login:
          description: 组织名称
          type: string
          example: csdn
        id:
          description: 组织id
          type: string
          example: 62b59720cbcaeffdff0148ce
        url:
          description: 组织的OepnApi地址
          type: string
          example: https://api.atomgit.com/orgs/csdn
        repos_url:
          description: 组织的repos地址
          type: string
          example: https://api.atomgit.com/orgs/csdn/repos
        events_url:
          description: 组织的event地址
          type: string
          example: https://api.atomgit.com/orgs/csdn/events
        hooks_url:
          description: 组织的hooks地址
          type: string
          example: https://api.atomgit.com/orgs/csdn/hooks
        issues_url:
          description: 组织的issue地址
          type: string
          example: https://api.atomgit.com/orgs/csdn_test2/issues
        members_url:
          description: 组织的members地址
          type: string
          example: https://api.atomgit.com/orgs/csdn/members/{/member}
        public_members_url:
          description: 组织的public members地址
          type: string
          example: https://api.atomgit.com/orgs/csdn/public_members/{/member}
        avatar_url:
          description: 组织头像地址
          type: string
          example: https://img-host/uploads/org/1656042927816_7741.png
        description:
          description: 组织的描述
          type: string
          example: csdn is a goog website
        name:
          description: the organization's name
          type: string
          example: 测试组织
        company:
          description: 组织官网
          type: string
          example: http://www.csdn.net
        blog:
          description: 组织的blog
          type: string
          example: http://www.csdn.net
        location:
          description: 组织位置
          type: string
          example: 北京市朝阳区
        public_repos:
          description: 组织的公共仓库数量
          type: Integer
          example: 1
        followers:
          description: 组织的粉丝数量
          type: Integer
          example: 10
        following:
          description: 组织的关注人数量
          type: Integer
          example: 0
        email:
          description: 组织的电子邮箱
          type: string
          example: admin@csdn.net
        html_url:
          description: 组织的url
          type: string
          example: https://atomgit.com/csdn
        created_at:
          description: 组织的创建时间
          type: string
          example: 2022-12-21T15:45:17+08:00
        updated_at:
          description: 组织的更新时间
          type: string
          example: 2022-12-21T15:45:17+08:00
        type:
          description: 组织的类型
          type: string
          example: Organization
    UpdateOrg:
      type: object
      properties:
        description:
          description: 组织的描述
          type: string
          example: csdn is a goog website
        name:
          description: 组织的名称
          type: string
          example: 测试组织
        company:
          description: 组织官网
          type: string
          example: http://www.csdn.net
        location:
          description: 组织位置
          type: string
          example: 北京市朝阳区
    UserOrgPage:
      type: object
      properties:
        login:
          description: 组织名称
          type: string
          example: csdn
        id:
          description: 组织id
          type: string
          example: 62b59720cbcaeffdff0148ce
        url:
          description: 组织的OepnApi地址
          type: string
          example: https://api.atomgit.com/orgs/csdn
        repos_url:
          description: 组织的repos地址
          type: string
          example: https://api.atomgit.com/orgs/csdn/repos
        events_url:
          description: 组织的event地址
          type: string
          example: https://api.atomgit.com/orgs/csdn/events
        hooks_url:
          description: 组织的hooks地址
          type: string
          example: https://api.atomgit.com/orgs/csdn/hooks
        issues_url:
          description: 组织的issue地址
          type: string
          example: https://api.atomgit.com/orgs/csdn_test2/issues
        members_url:
          description: 组织的members地址
          type: string
          example: https://api.atomgit.com/orgs/csdn/members/{/member}
        public_members_url:
          description: 组织的public members地址
          type: string
          example: https://api.atomgit.com/orgs/csdn/public_members/{/member}
        avatar_url:
          description: 组织头像地址
          type: string
          example: https://img-host/uploads/org/1656042927816_7741.png
        description:
          description: 组织的描述
          type: string
          example: csdn is a goog website
    UserOrgInvition:
      type: object
      properties:
        login:
          description: 被邀请人用户名
          type: string
          example: csdn
        id:
          description: 被邀请人用户id
          type: string
          example: 62b59720cbcaeffdff0148ce
        role:
          description:  被邀请人用户角色
          type: string
          example: maintainer
        email:
          description:  被邀请人的电子邮箱
          type: string
          example: admin@csdn.net
        created_at:
          description: 操作时间
          type: string
          example: 2022-12-21T15:45:17+08:00
        inviter:
          description: 邀请人信息
          type: object
          properties:
            login:
              description: 邀请人用户名
              type: string
              example: mrpuatomgit
            id:
              description: 邀请人用户id
              type: string
              example: 63db126c0566d2f7d2c9498c
            avatar_url:
              description: 邀请人用户头像
              type: string
              example: https://img-host/uploads/user/1656318880150_5104.png
            url:
              description: 邀请人信息api地址
              type: string
              example: https://api.atomgit.com/users/leige
            html_url:
              description: 邀请人主页地址
              type: string
              example: https://atomgit.com/mrpuatomgit
            followers_url:
              description: 邀请人的followers url
              type: string
              example:
            followering_url:
              description: 邀请人的followering url
              type: string
              example:
            gists_url:
              description: 邀请人的 gists url
              type: string
              example:
            starred_url:
              description: 邀请人的 starred url
              type: string
              example:
            subscriptions_url:
              description: 邀请人的 subscriptions url
              type: string
              example:
            organizations_url:
              description: 邀请人的 organizations url
              type: string
              example:
            repos_url:
              description: 邀请人的 repos url
              type: string
              example:
            events_url:
              description: 邀请人的 events url
              type: string
              example:
            received_events_url:
              description: 邀请人的 received events url
              type: string
              example:
            type:
              description: 邀请人的 user type
              type: string
              example: user
            site_admin:
              description: 邀请人的是否是管理员
              type: string
              example: false
    OrgMember:
      type: object
      properties:
        login:
          description: 组织成员的用户名
          type: string
          example: mrpuatomgit
        id:
          description: 组织成员的用户id
          type: string
          example: 63db126c0566d2f7d2c9498c
        avatar_url:
          description: 组织成员的头像
          type: string
          example: https://img-host/uploads/user/1656318880150_5104.png
        url:
          description: 组织成员的详细信息url
          type: string
          example: https://api.atomgit.com/users/leige
        html_url:
          description: 组织成员的主页url
          type: string
          example: https://atomgit.com/mrpuatomgit
        followers_url:
          description: 组织成员的 followers url
          type: string
          example:
        followering_url:
          description: 组织成员的 followering url
          type: string
          example:
        gists_url:
          description: 组织成员的 gists url
          type: string
          example:
        starred_url:
          description: 组织成员的 starred url
          type: string
          example:
        subscriptions_url:
          description: 组织成员的 subscriptions url
          type: string
          example:
        organizations_url:
          description: 组织成员的 organizations url
          type: string
          example:
        repos_url:
          description: 组织成员的 repos url
          type: string
          example:
        events_url:
          description: 组织成员的 events url
          type: string
          example:
        received_events_url:
          description: 组织成员的 received events url
          type: string
          example:
        type:
          description: 类型
          type: string
          example: user
        site_admin:
          description: 组织成员是否是管理员
          type: string
          example: false
    OrgMemberRole:
      type: object
      properties:
        url:
          description: 组织成员详细信息的openApi地址
          type: string
          example: https://api.atomgit.com/orgs/csdn
        state:
          description: 组织状态
          type: string
          example: active
        role:
          description: 要查询组织成员角色
          type: string
          example: maintainer
        organization_url:
          description: 组织详细信息的openApi地址
          type: string
          example: https://api.atomgit.com/orgs/csdn
        user:
          description: 被查询用户名详细信息
          type: object
          properties:
            login:
              description: 被查询的用户名
              type: string
              example: mrpuatomgit
            id:
              description: 被查询的用户id
              type: string
              example: 63db126c0566d2f7d2c9498c
            avatar_url:
              description: 被查询的用户头像
              type: string
              example: https://img-host/uploads/user/1656318880150_5104.png
            url:
              description: 被查询的用户详细信息的openApi地址
              type: string
              example: https://api.atomgit.com/users/leige
            html_url:
              description: 被查询的用户在atomgit访问地址
              type: string
              example: https://atomgit.com/mrpuatomgit
            followers_url:
              description: 被查询的用户followers地址
              type: string
              example:
            followering_url:
              description: 被查询的用户followering地址
              type: string
              example:
            gists_url:
              description: 被查询的用户gists地址
              type: string
              example:
            starred_url:
              description: 被查询的用户starred地址
              type: string
              example:
            subscriptions_url:
              description: 被查询的用户subscriptions地址
              type: string
              example:
            organizations_url:
              description: 被查询的用户organizations地址
              type: string
              example:
            repos_url:
              description: 被查询的用户repos地址
              type: string
              example:
            events_url:
              description: 被查询的用户events地址
              type: string
              example:
            received_events_url:
              description: 被查询的用户received events地址
              type: string
              example:
            type:
              description: 被查询的用户类型
              type: string
              example: user
            site_admin:
              description: 被查询的用户是管理员
              type: string
              example: false
        organization:
          description: 当前操作的组织信息
          type: object
          properties:
            login:
              description: 组织名称
              type: string
              example: csdn
            id:
              description: 组织id
              type: string
              example: 62b59720cbcaeffdff0148ce
            url:
              description: 组织的OepnApi地址
              type: string
              example: https://api.atomgit.com/orgs/csdn
            repos_url:
              description: 组织的repos地址
              type: string
              example: https://api.atomgit.com/orgs/csdn/repos
            events_url:
              description: 组织的event地址
              type: string
              example: https://api.atomgit.com/orgs/csdn/events
            hooks_url:
              description: 组织的hooks地址
              type: string
              example: https://api.atomgit.com/orgs/csdn/hooks
            issues_url:
              description: 组织的issue地址
              type: string
              example: https://api.atomgit.com/orgs/csdn_test2/issues
            members_url:
              description: 组织的members地址
              type: string
              example: https://api.atomgit.com/orgs/csdn/members/{/member}
            public_members_url:
              description: 组织的public members地址
              type: string
              example: https://api.atomgit.com/orgs/csdn/public_members/{/member}
            avatar_url:
              description: 组织头像地址
              type: string
              example: https://img-host/uploads/org/1656042927816_7741.png
            description:
              description: 组织的描述
              type: string
              example: csdn is a goog website
  requestBodies:
    UserArray:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/User"
      description: List of user object
      required: true
  examples:
    Order:
      value:
        quantity: 1
        shipDate: "2018-10-19T16:46:45Z"
        status: placed
        complete: false



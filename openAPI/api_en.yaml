openapi: 3.0.0
servers:
  - url: https://api.atomgit.com
    description: prod
  - url: https://test-api.atomgit.com
    description: test
info:
  description: |
    AtomGit provides a REST API that you can use Git CLI, curl, the official Octokit library, and third-party libraries to interact with this API.

    ## API version

    Whenever you make a request to a REST API, you must specify the REST API version to use. You should use the X-Api-Version header to specify the API version. For example:

    ```bash
    $ curl --header "X-Api-Version:2023-02-21" https://api.atomgit.com/user/info
    ```
    Requests without the X-Api-Version header will default to that 2023-02-21 version.

    If you specify an API version that is no longer supported, you will receive a 400 error message.

    ## token verification

    The REST API provided by AtomGit supports two verification methods: Oauth2 token and private token:

    1. OAuth2 token (sent in header)

    ```bash
      $ curl -H "Authorization: Bearer OAUTH-TOKEN" https://api.atomgit.com
    ```

    2.Private token token (sent in header)

    ```bash
      $ curl -H "Authorization: Bearer PERSONAL-TOKEN" https://api.atomgit.com
    ```

    ## restriction of visit

    1. For different authorizations, current limiting configuration information

    | auth type | limit per second |  limit per hour |
    | -------- | -------- | ---------- |
    | unauthorized   | 2        | 600        |
    | general user | 10       | 5000       |
    | APP      | 10       | 5000       |

    2.Current limiting information response header description：

    For each request, the following response header starting with x-ratelimit will be responded to describe the current interface current limiting status.：eg

    ```shell
    $ curl -i https://api.github.com/users/octocat
    > HTTP/2 200
    > x-ratelimit-limit: 60
    > x-ratelimit-remaining: 56
    > x-ratelimit-used: 4
    > x-ratelimit-reset: 1372700873
    ```

    | Header name             | Description                                                  |
    | :---------------------- | :----------------------------------------------------------- |
    | `x-ratelimit-limit`     | Maximum request limit per hour                                         |
    | `x-ratelimit-remaining` | Number of requests remaining in the current time window                                 |
    | `x-ratelimit-used`      | The number of requests that have been issued in the current time window                             |
    | `x-ratelimit-reset`     | The current time window is reset [UTC epoch seconds](http://en.wikipedia.org/wiki/Unix_time)。 |

    3.When the request exceeds the current limit, the following information will be returned depending on the authorization situation:

    If you are not currently logged in, the affected http status: 403, and the x-ratelimit-remaining in the response header will be 0;

    ```
    > HTTP/2 403
    > Date: Tue, 20 Aug 2013 14:50:41 GMT
    > x-ratelimit-limit: 60
    > x-ratelimit-remaining: 0
    > x-ratelimit-used: 60
    > x-ratelimit-reset: 1377013266

    > {
    >    "message": "API rate limit exceeded for xxx.xxx.xxx.xxx. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.) , documentation_url": "https://docs.atomgit.com"
    > }
    ```

    ## Contact Us
    - Contact: API Technical Support
    - Email: lish#csdn.net (Please replace # with @)
    - Issue Feedback address： https://atomgit.com/OpenAtomFoundation/AtomGit-Docs/issues

  version: 2023-02-21
  title: "AtomGit OpenAPI"
tags:
  - name: user
    description: Operations about user
    x-displayName: User Account
  - name: activity
    description: Activity and notify
    x-displayName: Activity and notify
  - name: org
    description: Operations about org
    x-displayName: Organization
  - name: apps
    description: Operations about apps
    x-displayName: Apps
  - name: branches
    description: Operations about branches
    x-displayName: Branch
  - name: tags
    description: Operations about tags
    x-displayName: Tags
  - name: commits
    description: Operations about commits
    x-displayName: Commits
  - name: commit statuses
    description: Operations about commit statuses
    x-displayName: Commit Status
  - name: repositories
    description: Operations about repositories
    x-displayName: Repository Data
  - name: repository contents
    description: Operations about repository contents
    x-displayName: Repository Content
  - name: change requests
    description: Operations about change requests
    x-displayName: Change Request
  - name: check-runs
    description: Operations about check-runs
    x-displayName: Change Request-Automated Inspection
  - name: issues
    description: Operations about issue
    x-displayName: Issues
  - name: issues comment
    description: Operations about issue comment
    x-displayName: Issues comment
  - name: security
    description: Operations about security
    x-displayName: Security
x-tagGroups:
  - name: User Management
    tags:
      - user
  - name: Activity Management
    tags:
      - activity
  - name: Org Management
    tags:
      - org
  - name: apps
    tags:
      - apps
  - name: branches
    tags:
      - branches
  - name: tags
    tags:
      - tags
  - name: commits
    tags:
      - commits
  - name: commit statuses
    tags:
      - commits statuses
  - name: repositories
    tags:
      - repositories
  - name: repository contents
    tags:
      - repository contents
  - name: check-runs
    tags:
      - check-runs
  - name: change requests
    tags:
      - change requests
  - name: issues
    tags:
      - issues
  - name: issues comment
    tags:
      - issues comment
  - name: security
    tags:
      - security
paths:
  # 获取用户个人信息
  /user/info:
    get:
      tags:
        - user
      summary: getTheAuthenticatedUser
      description: Get user personal information
      operationId: getTheAuthenticatedUser
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token or private token (needs to start with Bearer plus a space)
          required: true
      responses:
        401:
          description: "The token is invalid, please check whether the token is correct."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
            application/xml:
              schema:
                $ref: "#/components/schemas/User"

  # 根据用户名查询用户信息
  /users/{username}:
    get:
      tags:
        - user
      summary: getUserByUsername
      description: Query user information based on user name
      operationId: getUserByUsername
      parameters:
        - name: Authorization
          in: header
          description: "Oauth2 token or private token (needs to start with Bearer plus a space)"
          required: true
        - name: username
          in: path
          description: "username"
          required: true
      responses:
        401:
          description: "The token is invalid, please check whether the token is correct."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
            application/xml:
              schema:
                $ref: "#/components/schemas/User"
  # 获取当前用户的邮箱列表
  /user/emails:
    get:
      tags:
        - user
      summary: listEmail
      description: Get the current user's email list
      operationId: listEmail
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token or private token (needs to start with Bearer plus a space)
          required: true
      responses:
        401:
          description: "Invalid token, please check if the token is correct."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserEmailVO"
            application/xml:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserEmailVO"
  # 获取当前用户的粉丝列表
  /user/followers:
    get:
      tags:
        - user
      summary: getUserFollowers
      description: Get the current user's fan list
      operationId: getUserFollowers
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token or private token (needs to start with Bearer plus a space)
          required: true
        - name: page
          in: query
          description: "Page num (default is 1)"
          required: false
        - name: per_page
          in: query
          description: "Page size (default 30, max 100)"
          required: false
      responses:
        401:
          description: invalid token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AuthenticatedUserListVO"
            application/xml:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AuthenticatedUserListVO"
  # 获取指定用户的粉丝列表
  /users/{username}/followers:
    get:
      tags:
        - user
      summary: getUserFollowersByUsername
      description: Get the fan list of a specified user
      operationId: getUserFollowersByUsername
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token or private token (needs to start with Bearer plus a space)
          required: true
        - name: username
          in: path
          description: "The specified username that needs to be obtained from the fan list"
          required: true
        - name: page
          in: query
          description: "Page num (default is 1)"
          required: false
        - name: per_page
          in: query
          description: "Page size (default 30, max 100)"
          required: false
      responses:
        401:
          description: invalid token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AuthenticatedUserListVO"
            application/xml:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AuthenticatedUserListVO"
  # 列出当前用户的关注列表
  /user/following:
    get:
      tags:
        - user
      summary: getUserFollowing
      description: List the current user's starred list
      operationId: getUserFollowing
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token or private token (needs to start with Bearer plus a space)
          required: true
        - name: page
          in: query
          description: "Page num (default is 1)"
          required: false
        - name: per_page
          in: query
          description: "Page size (default 30, max 100)"
          required: false
      responses:
        401:
          description: invalid token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        200:
          description: Success
          content:
            application/json:
              type: array
              items:
                $ref: "#/components/schemas/AuthenticatedUserListVO"
            application/xml:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AuthenticatedUserListVO"
  # 获取指定用户的关注列表
  /users/{username}/following:
    get:
      tags:
        - user
      summary: getTheFollowing
      description: Get the starred list of a specified user
      operationId: getTheFollowing
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token or private token (needs to start with Bearer plus a space)
          required: true
        - name: username
          in: path
          description: "The specified username that needs to be obtained from the fan list"
          required: true
        - name: page
          in: query
          description: "Page num (default is 1)"
          required: false
        - name: per_page
          in: query
          description: "Page size (default 30, max 100)"
          required: false
      responses:
        401:
          description: invalid token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AuthenticatedUserListVO"
            application/xml:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AuthenticatedUserListVO"
  # 关注指定用户
  /user/following/{username}:
    put:
      tags:
        - user
      summary: addFans
      description: Follow specified user
      operationId: addFans
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token or private token (needs to start with Bearer plus a space)
          required: true
        - name: username
          in: path
          description: "followed user's username"
          required: true
      responses:
        401:
          description: invalid token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        200:
          description: Success
        400:
          description: Cannot follow repeatedly
    # 移除某个已关注用户
    delete:
      tags:
        - user
      summary: delFans
      description: Remove a followed user
      operationId: delFans
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token or private token (needs to start with Bearer plus a space)
          required: true
        - name: username
          in: path
          description: "The username of the removed user"
          required: true
      responses:
        401:
          description: invalid token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        200:
          description: Success
    # 检查当前用户是否关注了某个用户
    get:
      tags:
        - user
      summary: hasThisFans
      description: Check if the current user follows a user
      operationId: hasThisFans
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token or private token (needs to start with Bearer plus a space)
          required: true
        - name: username
          in: path
          description: "Determine whether to follow the user name"
          required: true
      responses:
        401:
          description: invalid token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        200:
          description: true-follow,false-unfollow

  # 检查用户是否关注了指定用户
  /users/{username}/following/{targetUsername}:
    get:
      tags:
        - user
      summary: hasTheFans
      description: Check whether the user follows the specified user
      operationId: hasTheFans
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token or private token (needs to start with Bearer plus a space)
          required: true
        - name: username
          in: path
          description: "current usernames"
          required: true
        - name: targetUsername
          in: path
          description: "Followed username"
          required: true
      responses:
        401:
          description: invalid token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        200:
          description: Success
        400:
          description: Cannot follow repeatedly
  # 获取当前登录用户的 SSH 公钥列表
  /user/keys:
    get:
      tags:
        - user
      summary: listKey
      description: Get the SSH public key list of the currently logged in user
      operationId: listKey
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token or private token (needs to start with Bearer plus a space)
          required: true
        - name: page
          in: query
          description: "Page num (default is 1)"
          required: false
        - name: per_page
          in: query
          description: "Page size (default 30, max 100)"
          required: false
      responses:
        401:
          description: invalid token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SSHKeyVO"
            application/xml:
              schema:
                $ref: "#/components/schemas/SSHKeyVO"
    #为当前登录用户创建一个新的 SSH 公钥（注：勾选写权限会默认选中读权限）
    post:
      tags:
        - user
      summary: addKey
      description: Create a new SSH public key for the currently logged in user
      operationId: addKey
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token or private token (needs to start with Bearer plus a space)
          required: true
      responses:
        401:
          description: invalid token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SSHKeyVO"
            application/xml:
              schema:
                $ref: "#/components/schemas/SSHKeyVO"
        400:
          description: The title cannot be empty/SSH Key format error/The key has been added as a user key or deployment key, and the addition failed
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddSSHKeyDTO"
        description: add ssh key request body
        required: true
  # 移除指定的 SSH 公钥
  /user/keys/{keyId}:
    delete:
      tags:
        - user
      summary: delKey
      description: Remove the specified SSH public key
      operationId: delKey
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token or private token (needs to start with Bearer plus a space)
          required: true
        - name: keyId
          in: path
          description: "Specify SSH public key id"
          required: true
      responses:
        401:
          description: invalid token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        200:
          description: Success
  /notifications/threads:
    get:
      tags:
        - activity
      summary: List all notifications for authorized users
      description: Query the relevant notification records of users on AtomGit based on the filtering criteria and in pages
      operationId: remindPageList
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token or private token（need Bearer+" " begin）
          required: true
        - name: unread
          in: query
          description: Whether to only obtain unread messages, default：false
          required: false
          schema:
            type: boolean
        - name: type
          in: query
          description: Filter notifications of specified type，all：all notifications，event：event notifications，referer：referer notifications,default all
          required: false
          schema:
            type: string
        - name: since
          in: query
          description: Only retrieve messages updated after the given time. The required time format is： ISO 8601
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: current page index
          required: false
          schema:
            type: integer
        - name: per_page
          in: query
          description: per page size，max size is 100
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RemindPage"
        "401":
          description: fail，need login or invalid token
        "403":
          description: forbid, no permission
  /notifications/threads/{id}:
    get:
      tags:
        - activity
      summary: Get a notification from the user
      description: Get the user's notifications based on the notification ID
      operationId: remindById
      parameters:
        - name: id
          in: path
          description: notifications id
          required: true
        - name: Authorization
          in: header
          description: Oauth2 token or private token（need Bearer+" " begin）
          required: true
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RemindDetail"
        "400":
          description: Parameters id is error
        "401":
          description: fail，need login or invalid token
        "403":
          description: forbid, no permission
  /notifications/messages:
    get:
      tags:
        - activity
      summary: List all private message for authorized users
      description: Query the relevant private message records of users on AtomGit based on the filtering criteria and in pages
      operationId: privatePageList
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token or private token（need Bearer+" " begin）
          required: true
        - name: unread
          in: query
          description: Whether to only obtain unread messages, default：false
          required: false
          schema:
            type: boolean
        - name: since
          in: query
          description: Only retrieve messages updated after the given time. The required time format is： ISO 8601
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: current page index
          required: false
          schema:
            type: integer
        - name: per_page
          in: query
          description: per page size，max size is 100
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PrivatePage"
        "401":
          description: fail，need login or invalid token
        "403":
          description: forbid, no permission
  /notifications/messages/{id}:
    get:
      tags:
        - activity
      summary: Get a private message from the user
      description: Get the user's private message based on the private message id
      operationId: privateById
      parameters:
        - name: id
          in: path
          description: private message id
          required: true
        - name: Authorization
          in: header
          description: Oauth2 token or private token（need Bearer+" " begin）
          required: true
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PrivateDetail"
        "400":
          description: Parameters id is error
        "401":
          description: fail，need login or invalid token
        "403":
          description: forbid, no permission
  /users/{username}/events:
    get:
      tags:
        - activity
      summary: List the user's activities.
      description: List the user's activities.
      operationId: user_event
      parameters:
        - name: username
          in: path
          description: "username"
          required: true
        - name: Authorization
          in: header
          description: Oauth2 token or private token (must be prefixed with 'Bearer' followed by a space).
          required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserActivity"
        "404":
          description: User is not exist
        "401":
          description: Fail，need login or invalid token
        "403":
          description: No permission, operation failed.
  /users/{username}/received_events:
    get:
      tags:
        - activity
      summary: List the activities received by a user.
      description: List the activities received by a user.
      operationId: user_receive_event
      parameters:
        - name: username
          in: path
          description: "username"
          required: true
        - name: Authorization
          in: header
          description: Oauth2 token or private token (must be prefixed with 'Bearer' followed by a space).
          required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserActivity"
        "404":
          description: User is not exist
        "401":
          description: Fail，need login or invalid token
        "403":
          description: No permission, operation failed.
  /organizations:
    get:
      tags:
        - org
      summary: orgPageList
      description: Paginated list of all organizations on AtomGit by creation date.
      operationId: orgPageList
      parameters:
        - name: since
          in: query
          description: start page
          required: false
          schema:
            type: integer
        - name: per_page
          in: query
          description: Maximum number per page, maximum limit is 50
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrgPage"
  /orgs/{org}:
    get:
      tags:
        - org
      summary: orgDetail
      description: Query organization details based on organization namespace
      operationId: orgDetail
      parameters:
        - name: org
          in: path
          description: Organization namespace
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrgDetail"
        "404":
          description: Organization does not exist
    patch:
      tags:
        - org
      summary: updateOrg
      description: Update the basic information of the organization. The current operator must be the organization maintainer.
      operationId: updateOrg
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token or private token (needs to start with Bearer plus a space)
          required: true
        - name: org
          in: path
          description: organization namespace
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrgDetail"
        "401":
          description: Operation failed, not logged in yet
        "403":
          description: No permission yet, operation failed.
        "404":
          description: Organization does not exist
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateOrg"
        description: Update org request body
        required: true
  /user/orgs:
    get:
      tags:
        - org
      summary: userOrgPageList
      description: List all organizations of the current user. This interface must have scope permissions of user or read:org, otherwise 403 will be returned.
      operationId: userOrgPageList
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token or private token (needs to start with Bearer plus a space)
          required: true
        - name: since
          in: query
          description: start page
          required: false
          schema:
            type: integer
        - name: per_page
          in: query
          description: Maximum number per page, maximum limit is 50
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserOrgPage"
        "401":
          description: Operation failed, not logged in yet
        "403":
          description: No permission yet, operation failed
  #  /users/{username}/orgs:
  #    get:
  #    tags:
  #        - org
  #      summary: list organizations by username
  #      description: "List public organization memberships for the specified user."
  #      operationId: userOrgByUserNamePageList
  #      parameters:
  #        - name: since
  #          in: query
  #          description: start page
  #          required: false
  #          schema:
  #            type: integer
  #        - name: per_page
  #          in: query
  #          description: Maximum number per page, maximum limit is 50
  #          required: false
  #          schema:
  #            type: integer
  #      responses:
  #        "200":
  #          description: Success
  #          content:
  #            application/json:
  #              schema:
  #                type: array
  #                items:
  #                  $ref: "#/components/schemas/UserOrgPage"
  #        "400":
  #          description: username is not exist
  /orgs/{org}/invitations:
    post:
      tags:
        - org
      summary: userOrgInvitation
      description: Invite a user to the organization using the AtomGit user's ID or email address. The current user initiating the operation must be the organization owner.
      operationId: userOrgInvitation
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token or private token (needs to start with Bearer plus a space)
          required: true
        - name: org
          in: path
          description: organization namespace
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserOrgInvition"
        "400":
          description: Wrong parameters
        "401":
          description: Operation failed, not logged in yet
        "403":
          description: No permission yet, operation failed
      requestBody:
        content:
          application/json:
            schema:
              type: json
              properties:
                invitee_id:
                  description: Required unless you provide an email. The AtomGit user ID of the person you invited.
                  type: string
                email:
                  description: Required unless you provide an email. The AtomGit user ID of the person you invited.
                  type: string
                role:
                  description: new member's role:maintainer、developer、guest。
                  type: string
  /orgs/{org}/members:
    get:
      tags:
        - org
      summary: orgMembers
      description: List all users who are members of an organization
      operationId: orgMembers
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token or private token (needs to start with Bearer plus a space)
          required: true
        - name: org
          in: path
          description: organization namespace
          required: true
          schema:
            type: string
        - name: since
          in: query
          description: start page
          required: false
          schema:
            type: integer
        - name: per_page
          in: query
          description: Maximum number per page, maximum limit is 50
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrgMember"
        "400":
          description: Wrong parameters，Organization does not exist
  /orgs/{org}/members/{username}:
    get:
      tags:
        - org
      summary: orgMemberCheck
      description: Verify whether the user is a member of the organization based on the username
      operationId: orgMemberCheck
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token or private token (needs to start with Bearer plus a space)
          required: true
        - name: org
          in: path
          description: organization namespace
          required: true
          schema:
            type: string
        - name: username
          in: path
          description: username
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Respond to this status code if the requester is a member of an organization and the username being queried is a member of this organization
        "401":
          description: If the requester is not a member of the organization, respond with this status code
        "404":
          description: Respond to this status code if the requester is a member of an organization and the user whose name is being queried is not a member of the organization.
    delete:
      tags:
        - org
      summary: orgMemberDelete
      description: "To remove organization members based on user name, the current operator must be an organization maintainer, otherwise the removal will fail."
      operationId: orgMemberDelete
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token or private token (needs to start with Bearer plus a space)
          required: true
        - name: org
          in: path
          description: organization namespace
          required: true
          schema:
            type: string
        - name: username
          in: path
          description: username
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
        "400":
          description: The operation failed, the parameter username is incorrect!
        "401":
          description: The operation failed. The current operator is not an organization administrator and does not have permissions at the moment.
  /orgs/{org}/memberships/{username}:
    get:
      tags:
        - org
      summary: orgMemberRole
      description: Query the user's role in the organization based on the user name
      operationId: orgMemberRole
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token or private token (needs to start with Bearer plus a space)
          required: true
        - name: org
          in: path
          description: organization namespace
          required: true
          schema:
            type: string
        - name: username
          in: path
          description: the queried user's username
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrgMemberRole"
          "400":
            description: Wrong parameters
          "401":
            description: Operation failed, not logged in yet
          "403":
            description: The operation failed. The current operator is not a member of the organization.
    put:
      tags:
        - org
      summary: SetOrgMemberRole
      description: Set the user's role in the organization based on the user name
      operationId: SetOrgMemberRole
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token or private token (needs to start with Bearer plus a space)
          required: true
        - name: org
          in: path
          description: organization namespace
          required: true
          schema:
            type: string
        - name: username
          in: path
          description: the queried user's username
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrgMemberRole"
          "400":
            description: Wrong parameters
          "401":
            description: Operation failed, not logged in yet
          "403":
            description: The operation failed. The current operator is not an maintainer of the organization.
      requestBody:
        content:
          application/json:
            schema:
              type: json
              properties:
                role:
                  description: set user's role:maintainer、developer、guest。
                  type: string
  /orgs/{org}/followers:
    get:
      tags:
        - org
      summary: List all followers of the specified organization.
      description: List all followers of the specified organization.
      operationId: orgFollowers
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token or private token (must be prefixed with 'Bearer' followed by a space).
          required: true
        - name: org
          in: path
          description: Organization path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrgFollowers"
        "404":
          description: The organization does not exist.
        "401":
          description: Operation failed, not logged in yet.
        "403":
          description: No permission, operation failed.
  /enterprise/org/{org}/info:
    get:
      tags:
        - org
      summary: enterpriseInfoByOrgCode
      description: enterpriseInfoByOrgCode
      operationId: enterpriseInfoByOrgCode
      parameters:
        - name: org
          in: path
          description: organization namespace
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Enterprise"
          "400":
            description: Wrong parameters
          "401":
            description: Operation failed, not logged in yet
          "403":
            description: The operation failed. The current operator is not an maintainer of the organization.
  /enterprise/credit/{credit_code}/info:
    get:
      tags:
        - org
      summary: enterpriseInfoByCreditCode
      description: enterpriseInfoByCreditCode
      operationId: enterpriseInfoByCreditCode
      parameters:
        - name: credit_code
          in: path
          description: credit code
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Enterprise"
          "400":
            description: Wrong parameters
          "401":
            description: Operation failed, not logged in yet
          "403":
            description: The operation failed. The current operator is not an maintainer of the organization.
  ############ 应用（apps API）############
  # 获取atu token
  /login/oauth/access_token:
    post:
      tags:
        - apps
      summary: get oauth access_token
      description: get oauth access Token, based on authorization code or refresh_ Token
      operationId: getOAuthAtuToken
      parameters:
        - name: Content-Type
          in: header
          description: application/json
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: json
              properties:
                client_id:
                  type: string
                  required: false
                  description: Application Client Id
                client_secret:
                  type: string
                  required: true
                  description: Application client key
                code:
                  type: string
                  required: false
                  description: Oauth authorization code (non empty when using authorization code to obtain token)
                grant_type:
                  type: string
                  required: false
                  description: grant_type value:refresh_token(Use refresh_ Token must be passed when refreshing a token)
                refresh_token:
                  type: string
                  required: false
                  description: refresh_token(Use refresh_ Token must be passed when refreshing a token)
      responses:
        200:
          description: create tokenSuccess
        403:
          description: Forbidden
        404:
          description: resouce not found
        responseBody:
          content:
            application/json:
              schema:
                type: json
                properties:
                  access_token:
                    type: string
                    required: true
                    description: access_token。
                  expires_in:
                    type: long
                    required: true
                    description: access_token expire time(timestamp:ms)
                  refresh_token:
                    type: string
                    required: true
                    description: refresh_token
                  refresh_token_expires_in:
                    type: long
                    required: true
                    description: refresh_token expire time(timestamp:ms)
  ############ 分支接口（Branches API）############
  # 获取分支信息
  /repos/{owner}/{repo}/branches/{branch}:
    get:
      tags:
        - branches
      summary: getBranch
      description: Get branch information
      operationId: getBranch
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token or private token (needs to start with Bearer plus a space)
          required: true
        - name: owner
          in: path
          description: The owner of the repository is generally called "username". The name is not case sensitive.
          required: true
        - name: repo
          in: path
          description: "repository name. The name is not case sensitive."
          required: true
        - name: branch
          in: path
          description: "Branch name, cannot contain wildcard characters."
          required: true
      responses:
        404:
          description: 404 not found
        200:
          description: success
        responseBody:
          content:
            application/json:
              schema:
                type: json
                properties:
                  name:
                    type: string
                    required: true
                    description: branch name.
                  commit:
                    type: object
                    description: Commit ID
                    properties:
                      committer:
                        type: object
                        required: true
                        description: commitor. Default value -  The currently authenticated user.
                        properties:
                          name:
                            type: string
                            required: true
                            description: The name of the commitor. If you omit this field, you will receive a 422 status code.
                          email:
                            type: string
                            required: true
                            description: commitor's email. If you omit the email, you will receive a 422 status code.
                          date:
                            type: string
                            required: false
                      author:
                        type: object
                        required: true
                        description: "commitor. Default value -  The currently authenticated user."
                        properties:
                          name:
                            type: string
                            required: true
                            description: "The name of the commitor. If you omit this field, you will receive a 422 status code"
                          email:
                            type: string
                            required: true
                            description: commitor's email. If you omit the email, you will receive a 422 status code.
                          date:
                            type: string
                            required: false
                      message:
                        type: string
                        required: true
                        description: commit message
                      sha:
                        type: string
                        required: true
                        description: commit  sha value.
                      parents:
                        type: array
                        required: true
                        items:
                          type: object
                          properties:
                            sha:
                              type: string
                              required: true
                              description: commit sha value.
  # 获取分支列表
  /repos/{owner}/{repo}/branches:
    get:
      tags:
        - branches
      summary: getBranchList
      description: get branch list
      operationId: getBranchList
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token or private token (needs to start with Bearer plus a space)
          required: true
        - name: owner
          in: path
          description: The owner of the repository,  generally called "username". The name is not case sensitive.
          required: true
        - name: repo
          in: path
          description: repository name, the name is not case sensitive
          required: true
        - name: per_page
          in: query
          description: page size
          required: false
        - name: page
          in: query
          description: page num
          required: false
      responses:
        200:
          description: success
        404:
          description: 404 not found
        responseBody:
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      required: true
                      description: Branch name, cannot contain wildcard characters
                    commit:
                      type: object
                      required: true
                      description: commit ID
                      properties:
                        sha:
                          type: string
                          required: true
                          description: commit sha value
                    protected:
                      type: boolean
                      required: true
                      description: is protected branch or not
  ############ 标签接口（Tags API）############
  /repos/{owner}/{repo}/tags:
    get:
      tags:
        - tags
      summary: getTagList
      description: getTagList
      operationId: getTagList
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token or Privatetoken(start with Bearer and a space)
          required: true
        - name: owner
          in: path
          description: The owner of the code repository is generally referred to as the "username". The name is not case sensitive.
          required: true
        - name: repo
          in: path
          description: Code repository name. The name is not case sensitive.
          required: true
        - name: per_page
          in: query
          description: per_page
          required: false
        - name: page
          in: query
          description: page
          required: false
        - name: search
          in: query
          description: Label name retrieval, suppor fuzzy queries
          required: false
      responses:
        200:
          description: Success
        404:
          description: resouce not found
        responseBody:
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      required: true
                      description: tag name
                    commit:
                      type: object
                      required: true
                      description: commit id
                      properties:
                        sha:
                          type: string
                          required: true
                          description: commit SHA value
  /repos/{owner}/{repo}/labels/{name}:
    get:
      tags:
        - tags
      summary: Get a single tag based on the tag name.
      description: Get a single tag based on the tag name.
      operationId: getTagByName
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token or private token (must be prefixed with 'Bearer' followed by a space).
          required: true
        - name: owner
          in: path
          description: The owner of the code repository, generally referred to as the 'username'. This name is case-insensitive.
          required: true
        - name: repo
          in: path
          description: repository path（This name is case-insensitive）
          required: true
        - name: name
          in: path
          description: tag name
          required: true
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/LabelInfo"
        "404":
          description: The resource does not exist.
        "401":
          description: Fail，need login or invalid token
        "403":
          description: No permission, operation failed.
  # ############ 提交接口（Commits API）############
  # # 获取分支提交
  /repos/{owner}/{repo}/commits/{ref}:
    get:
      tags:
        - commits
      summary: getRefCommit
      description: get commit info
      operationId: getRefCommit
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token or private token (needs to start with Bearer plus a space)
          required: true
        - name: owner
          in: path
          description: The owner of the repository,  generally called "username". The name is not case sensitive.
          required: true
        - name: repo
          in: path
          description: "repository name, the name is not case sensitive"
          required: true
        - name: ref
          in: path
          description: "ref"
          required: true
      responses:
        200:
          description: success
        404:
          description: 404 not found
        500:
          description: internal error
        responseBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    required: true
                    description: ref name
                  commit:
                    type: object
                    properties:
                      committer:
                        type: object
                        required: true
                        description: commitor. Default value -  The currently authenticated user.
                        properties:
                          name:
                            type: string
                            required: true
                            description: The name of the commitor. If you omit this field, you will receive a 422 status code.
                          email:
                            type: string
                            required: true
                            description: commitor's email. If you omit the email, you will receive a 422 status code.
                          date:
                            type: string
                            required: false
                      author:
                        type: object
                        required: true
                        description: "commitor. Default value -  The currently authenticated user."
                        properties:
                          name:
                            type: string
                            required: true
                            description: The name of the commitor. If you omit this field, you will receive a 422 status code
                          email:
                            type: string
                            required: true
                            description: commitor's email. If you omit the email, you will receive a 422 status code.
                          date:
                            type: string
                            required: false
                      message:
                        type: string
                        required: true
                        description: commit message
                  sha:
                    type: string
                    required: true
                    description: commit sha value
                  parents:
                    type: array
                    items:
                      type: object
                      properties:
                        sha:
                          type: string
                          required: true
                          description: commit sha value
                    required: true
                  stats:
                    type: object
                    required: true
                    properties:
                      additions:
                        type: integer
                        required: true
                      deletions:
                        type: integer
                        required: true
                      total:
                        type: integer
                        required: true
  # # 获取联合提交状态
  /repos/{owner}/{repo}/commits/status/{ref}:
    get:
      tags:
        - commit statuses
      summary: getCombinedCommitStatuses
      description: Get combined commit statuses
      operationId: getCombinedCommitStatuses
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token or private token (needs to start with Bearer plus a space)
          required: true
        - name: owner
          in: path
          description: The owner of the repository,  generally called "username". The name is not case sensitive.
          required: true
        - name: repo
          in: path
          description: repository name, the name is not case sensitive
          required: true
        - name: ref
          in: path
          description: ref
          required: true
      responses:
        200:
          description: success
        404:
          description: 404 not found
        responseBody:
          content:
            application/json:
              schema:
                type: json
                properties:
                  state:
                    type: string
                    required: true
                    description: "Status enumeration, the enumeration values ​​are: error, failure, pending, success"
                  sha:
                    type: string
                    required: true
                    description: commit sha value。
                  total_count:
                    type: integer
                    required: true
                  statuses:
                    type: array
                    required: true
                    items:
                      type: object
                      properties:
                        state:
                          description: "Status enumeration, the enumeration values ​​are: error, failure, pending, success"
                          type: string
                          required: true
                        target_url:
                          type: string
                          required: false
                          description: |
                            The target URL associated with this status to allow the user to easily view the source of the status.
                            For example, if your continuous integration system is publishing build status, you will want to output a similarly formatted link address for the build of this specific SHA: http://ci.example.com/user/repo/build/sha
                        description:
                          type: string
                          required: false
                          description: A short description of the status.
                        context:
                          type: string
                          required: false
                          description: A string flag used to distinguish this state from other system (user or application) states. This field is not case sensitive. Default value -  default
  # # 创建提交状态
  /repos/{owner}/{repo}/statuses/{sha}:
    post:
      tags:
        - commit statuses
      summary: CreateCommitStatuses
      description: create commit status
      operationId: CreateCommitStatuses
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token or private token (needs to start with Bearer plus a space)
          required: true
        - name: owner
          in: path
          description: The owner of the repository,  generally called "username". The name is not case sensitive.
          required: true
        - name: repo
          in: path
          description: repository name, the name is not case sensitive
          required: true
        - name: sha
          in: path
          description: commit sha value
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: json
              properties:
                state:
                  description: "Status enumeration, the enumeration values ​​are: error, failure, pending, success"
                  type: string
                  required: true
                target_url:
                  type: string
                  required: false
                  description: |
                    The target URL associated with this status to allow the user to easily view the source of the status.
                    For example, if your continuous integration system is publishing build status, you will want to output a similarly formatted link address for the build of this specific SHA: http://ci.example.com/user/repo/build/sha
                description:
                  type: string
                  required: false
                  description: A short description of the status.
                context:
                  type: string
                  required: false
                  description: A string flag used to distinguish this state from other system (user or application) states. This field is not case sensitive. Default value -  default
      responses:
        201:
          description: Created
        500:
          description: Internal Error
        responseBody:
          content:
            application/json:
              schema:
                type: json
                properties:
                  context:
                    type: string
                    required: true
                    description: A string flag used to distinguish this state from other system (user or application) states. This field is not case sensitive. Default value -  default
                  created_at:
                    type: string
                    required: true
                    description: "created time. Follow ISO 8601 time format: YYYY-MM-DDTHH:MM:SSZ"
                  description:
                    type: string
                    required: false
                    description: A short description of the status.
                  required:
                    type: boolean
                    required: true
                  id:
                    type: integer
                    required: true
                  state:
                    type: string
                    required: true
                    description: "Status enumeration, the enumeration values ​​are: error, failure, pending, success"
                  target_url:
                    type: string
                    required: false
                    description: |
                      The target URL associated with this status to allow the user to easily view the source of the status.
                      For example, if your continuous integration system is publishing build status, you will want to output a similarly formatted link address for the build of this specific SHA: http://ci.example.com/user/repo/build/sha
  # ############ Check-runs接口 ############
  # # 创建自动化检查
  /repos/{owner}/{repo}/check-runs:
    post:
      tags:
        - check-runs
      summary: CreateCheckRun
      description: create automated check
      operationId: CreateCheckRun
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token or private token (needs to start with Bearer plus a space)
          required: true
        - name: owner
          in: path
          description: The owner of the repository,  generally called "username". The name is not case sensitive.
          required: true
        - name: repo
          in: path
          description: repository name, the name is not case sensitive
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: json
              properties:
                name:
                  description: The name of the automated check. For example, "code-coverage"。
                  type: string
                  required: true
                head_sha:
                  type: string
                  required: true
                  description: commit sha value
                status:
                  type: string
                  required: false
                  description: |
                    Status enumeration, the enumeration value is:queued, in_progress, completed。default: queued
                started_at:
                  type: string
                  required: false
                  description: "start time of check。 Follow ISO 8601 time format: YYYY-MM-DDTHH:MM:SSZ"
                conclusion:
                  type: string
                  required: false
                  description: |
                    This field is required if you pass the "completed_at" field or set the "status" field to "completed". This field expresses the final result of the automated check. ,
                     Note: Providing the "conclusion" field will automatically set the status parameter to "completed". Also it will not be possible to change "conclusion" to "stale", only platforms can be set to this value.
                     Enumeration values: action_required, canceled, failure, neutral, success, skip, stale, timed_out
                completed_at:
                  type: string
                  required: false
                  description: "end time of check。 Follow ISO 8601 time format: YYYY-MM-DDTHH:MM:SSZ"
                action:
                  type: object
                  required: false
                  description: Automated checks can accept various types of data in "output", including titles and summaries, and can optionally provide descriptive details about the run.
                  properties:
                    label:
                      type: string
                      required: true
                      description: "The text displayed on the button in the web UI. Maximum length is 20 characters."
                    description:
                      type: string
                      required: true
                      description: "A brief explanation of the purpose of action. Maximum length is 40 characters."
                    identifier:
                      type: string
                      required: true
                      description: "A comparison identifier for action on the integrated system. Maximum length is 20 characters."
                output:
                  type: object
                  required: false
                  description: Automated checks can accept various types of data in "output", including titles and summaries, and can optionally provide descriptive details about the run.
                  properties:
                    title:
                      type: string
                      required: true
                      description: "title"
                    summary:
                      type: string
                      required: true
                      description: "Summary, supports Markdown format. Maximum length is 65535 characters."
                    text:
                      type: string
                      required: false
                      description: "detail, maximum length is 65535 characters"
                    annotations:
                      type: object
                      required: false
                      description: |
                        Attach the information you analyzed to specific lines of code.
                        Corresponding annotations can be seen in the inspection and file changes tabs of subsequent change requests on the platform.
                        The automated inspection API limits the number of annotations requested to a maximum of 50.
                        If you want to create more than 50, you can send the request multiple times to add comments to the list of existing comments.
                      properties:
                        path:
                          type: string
                          required: true
                          description: "The path to the file to add the annotation to. For example: assets/css/main.css."
                        start_line:
                          type: int
                          required: true
                          description: "The starting line of the comment. Line numbers start from 1."
                        end_line:
                          type: int
                          required: false
                          description: "Ending line of comment."
                        start_column:
                          type: int
                          required: false
                          description: "The starting column of the annotation. Annotations only support start_column and end_column on the same line. If the values ​​of start_line and end_line are different, this parameter is omitted. Column numbers start at 1."
                        end_column:
                          type: int
                          required: false
                          description: "The ending column of the comment. Comments only support start_column and end_column on the same line. If the values ​​of start_line and end_line are different, this parameter is omitted."
                        annotation_level:
                          type: string
                          required: true
                          description: |
                            The level of annotation, the enumeration values ​​are: notice, warning, failure
                        message:
                          type: string
                          required: true
                          description: "A short description of the line of code information. Maximum size is 64kb."
                        title:
                          type: string
                          required: false
                          description: The title of the annotation. Maximum length is 255 characters.
                        raw_details:
                          type: string
                          required: false
                          description: "Details of the comment. Maximum size is 64kb."

                    images:
                      type: object
                      required: false
                      description: "Add images in CR UI."
                      properties:
                        alt:
                          type: string
                          required: true
                          description: "Alt text for the image."
                        image_url:
                          type: string
                          required: true
                          description: "The full URL of the image."
                        caption:
                          type: string
                          required: false
                          description: "Short image description."
      responses:
        201:
          description: created
        500:
          description: internal error
        responseBody:
          content:
            application/json:
              schema:
                type: json
                properties:
                  id:
                    type: integer
                    required: true
                  head_sha:
                    type: string
                    required: true
                  external_id:
                    type: integer
                    required: true
                  status:
                    type: string
                    required: true
                  conclusion:
                    type: string
                    required: false
                  started_at:
                    type: string
                    required: true
                    description: "the start time. Follows ISO 8601 time format: YYYY-MM-DDTHH:MM:SSZ"
                  completed_at:
                    type: string
                    required: false
                    description: "the end time. Follows ISO 8601 time format: YYYY-MM-DDTHH:MM:SSZ"
                  name:
                    type: string
                    required: true
                  app:
                    type: object
                    properties:
                      id:
                        type: integer
                        required: true
                      slug:
                        type: string
                        required: true
                      name:
                        type: string
                        required: true
                      description:
                        type: string
                        required: true
  # # 更新自动化检查
  /repos/{owner}/{repo}/check-runs/{check_run_id}:
    get:
      tags:
        - check-runs
      summary: GetCheckRun
      description: Query automated checks
      operationId: GetCheckRun
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token or private token (needs to start with Bearer plus a space)
          required: true
        - name: owner
          in: path
          description: "The account owner of the repository. The name is not case sensitive."
          required: true
        - name: repo
          in: path
          description: "The name of the repository. The name is not case sensitive."
          required: true
        - name: check_run_id
          in: path
          description: The unique identifier of the check run.
      responses:
        200:
          description: Created
    patch:
      tags:
        - check-runs
      summary: UpdateCheckRun
      description: Update automated checks
      operationId: UpdateCheckRun
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token or private token (needs to start with Bearer plus a space)
          required: true
        - name: owner
          in: path
          description: The owner of the repository, generally called "username". The name is not case-sensitive.
          required: true
        - name: repo
          in: path
          description: repository name, the name is not case sensitive
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: json
              properties:
                name:
                  description: The name of the automated check. For example, "code-coverage".
                  type: string
                  required: true
                head_sha:
                  type: string
                  required: true
                  description: commit sha value
                status:
                  type: string
                  required: false
                  description: |
                    Status enumeration, the enumeration values ​​are: queued, in_progress, completed. Default value: queued
                started_at:
                  type: string
                  required: false
                  description: |
                    start time. Follows ISO 8601 time format: YYYY-MM-DDTHH:MM:SSZ
                conclusion:
                  type: string
                  required: false
                  description: |
                    This field is required if you pass the "completed_at" field or set the "status" field to "completed". This field expresses the final result of the automated check. ,
                    Note: Providing the "conclusion" field will automatically set the status parameter to "completed". Also it will not be possible to change "conclusion" to "stale", only platforms can be set to this value.
                    Enumeration values: action_required, canceled, failure, neutral, success, skip, stale, timed_out
                completed_at:
                  type: string
                  required: false
                  description: "end time. Follows ISO 8601 time format: YYYY-MM-DDTHH:MM:SSZ"
                action:
                  type: object
                  required: false
                  description: Automated checks can accept various types of data in "output", including titles and summaries, and can optionally provide descriptive details about the run.
                  properties:
                    label:
                      type: string
                      required: true
                      description: "The text displayed on the button in the web UI. Maximum length is 20 characters."
                    description:
                      type: string
                      required: true
                      description: "A brief explanation of the purpose of action. Maximum length is 40 characters."
                    identifier:
                      type: string
                      required: true
                      description: "A comparison identifier for action on the integrated system. Maximum length is 20 characters."
                output:
                  type: object
                  required: false
                  description: Automated checks can accept various types of data in "output", including titles and summaries, and can optionally provide descriptive details about the run.
                  properties:
                    title:
                      type: string
                      required: true
                      description: "title"
                    summary:
                      type: string
                      required: true
                      description: "Summary, supports Markdown format. Maximum length is 65535 characters."
                    text:
                      type: string
                      required: false
                      description: "detail, maximum length is 65535 characters"
                    annotations:
                      type: object
                      required: false
                      description: |
                        Attach the information you analyzed to specific lines of code.
                        Corresponding annotations can be seen in the inspection and file changes tabs of subsequent change requests on the platform.
                        The automated inspection API limits the number of annotations requested to a maximum of 50.
                        If you want to create more than 50, you can send the request multiple times to add comments to the list of existing comments.
                      properties:
                        path:
                          type: string
                          required: true
                          description: "The path to the file to add the annotation to. For example: assets/css/main.css."
                        start_line:
                          type: int
                          required: true
                          description: "The starting line of the comment. Line numbers start from 1."
                        end_line:
                          type: int
                          required: false
                          description: "The end line of the comment."
                        start_column:
                          type: int
                          required: false
                          description: "The starting column of the annotation. Comments only support start_column and end_column on the same line. If the values ​​of start_line and end_line are different, this parameter is omitted. Column numbers start from 1."
                        end_column:
                          type: int
                          required: false
                          description: "Ending column of comments. Comments only support start_column and end_column on the same line. If the values ​​of start_line and end_line are different, this parameter is omitted."
                        annotation_level:
                          type: string
                          required: true
                          description: |
                            The level of annotation, the enumeration values ​​are: notice, warning, failure
                        message:
                          type: string
                          required: true
                          description: "A short description of the line of code information. Maximum size is 64kb."
                        title:
                          type: string
                          required: false
                          description: "Title of the comment. Maximum length is 255 characters."
                        raw_details:
                          type: string
                          required: false
                          description: "Details of the comment. Maximum size is 64kb."
                    images:
                      type: object
                      required: false
                      description: "Add images in CR UI."
                      properties:
                        alt:
                          type: string
                          required: true
                          description: "Alt text for the image."
                        image_url:
                          type: string
                          required: true
                          description: "The full URL of the image."
                        caption:
                          type: string
                          required: false
                          description: "Short image description."
      responses:
        200:
          description: success
        500:
          description: internal error
        responseBody:
          content:
            application/json:
              schema:
                type: json
                properties:
                  id:
                    type: integer
                    required: true
                  head_sha:
                    type: string
                    required: true
                    description: Submit SHA value
                  external_id:
                    type: integer
                    required: true
                    description: Unique identifier in external integrated systems.
                  status:
                    type: string
                    required: true
                    description: |
                      Status enumeration, the enumeration values ​​are: queued, in_progress, completed. Default value: queued
                  conclusion:
                    type: string
                    required: false
                  description: |
                    This field is required if you pass the "completed_at" field or set the "status" field to "completed". This field expresses the final result of the automated check. ,
                    Note: Providing the "conclusion" field will automatically set the status parameter to "completed". Also it will not be possible to change "conclusion" to "stale", only platforms can be set to this value.
                    Enumeration values: action_required, canceled, failure, neutral, success, skip, stale, timed_out
                  started_at:
                    type: string
                    required: true
                    description: "start time. Follows ISO 8601 time format: YYYY-MM-DDTHH:MM:SSZ"
                  completed_at:
                    type: string
                    required: false
                    description: "end time. Follows the ISO 8601 time format: YYYY-MM-DDTHH:MM:SSZ"
                  name:
                    type: string
                    required: true
                    description: The name of the automated check. For example, "code-coverage".
                  app:
                    type: object
                    properties:
                      id:
                        type: integer
                        required: true
                        description: Atomgit App 的 ID
                      slug:
                        type: string
                        required: true
                        description: Atomgit App 的 slug
                      name:
                        type: string
                        required: true
                        description: Atomgit App 的名称
                      description:
                        type: string
                        required: true
  # # 仓库数据相关
  # # 获取组织下仓库列表
  /orgs/{orgPath}/repos:
    get:
      tags:
        - repositories
      summary: getOrgRepoList
      description: getOrgRepoList
      operationId: getOrgRepoList
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token or Privatetoken(start with Bearer and a space)
          required: true
        - name: orgPath
          in: path
          description: The path of the organization to which the code repository belongs, which is not case sensitive.
          required: true
        - name: per_page
          in: query
          description: per_page
          required: false
        - name: page
          in: query
          description: page
          required: false
        - name: search
          in: query
          description: query-search,fuzzy query repo name
          required: false
      responses:
        200:
          description: Success
        404:
          description: resouce not found
        responseBody:
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    private:
                      type: boolean
                      required: true
                      description: is it a private repository
                    id:
                      type: long
                      required: true
                      description: repo id
                    full_name:
                      type: string
                      required: true
                      description: absolute path of the repo
                    name:
                      type: string
                      required: true
                      description: repo name
                    description:
                      type: string
                      required: false
                      description: repo description
                    default_branch:
                      type: string
                      required: false
                      description: repo default branch
                    git_url:
                      type: string
                      required: true
                      description: repo ssh clone url
                    html_url:
                      type: string
                      required: true
                      description: repo http clone url
  # # 获取组织下仓库列表
  /users/{username}/repos:
    get:
      tags:
        - repositories
      summary: getUserSpaceRepoList
      description: getUserSpaceRepoList
      operationId: getUserSpaceRepoList
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token or Privatetoken(start with Bearer and a space)
          required: true
        - name: username
          in: path
          description: The username of the user who owns the repository, which is not case sensitive.
          required: true
        - name: per_page
          in: query
          description: per_page
          required: false
        - name: page
          in: query
          description: page
          required: false
        - name: search
          in: query
          description: query-search,fuzzy query repo name
          required: false
      responses:
        200:
          description: Success
        404:
          description: resouce not found
        responseBody:
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    private:
                      type: boolean
                      required: true
                      description: is it a private repository
                    id:
                      type: long
                      required: true
                      description: repo id
                    full_name:
                      type: string
                      required: true
                      description: absolute path of the repo
                    name:
                      type: string
                      required: true
                      description: repo name
                    description:
                      type: string
                      required: false
                      description: repo description
                    default_branch:
                      type: string
                      required: false
                      description: repo default branch
                    git_url:
                      type: string
                      required: true
                      description: repo ssh clone url
                    html_url:
                      type: string
                      required: true
                      description: repo http clone url
  # # 获取代码库详情
  /repos/{owner}/{repo}:
    get:
      tags:
        - repositories
      summary: getRepository
      description: getRepository
      operationId: getRepository
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token or Privatetoken(start with Bearer and a space)
          required: true
        - name: owner
          in: path
          description: The owner of the code repository is generally referred to as the "username". The name is not case sensitive.
          required: true
        - name: repo
          in: path
          description: "Code repository name. The name is not case sensitive."
          required: true
      responses:
        404:
          description: resouce not found
        200:
          description: Success
        responseBody:
          content:
            application/json:
              schema:
                type: json
                properties:
                  private:
                    type: boolean
                    required: true
                    description: is it a private repository
                  id:
                    type: long
                    required: true
                    description: repo id
                  full_name:
                    type: string
                    required: true
                    description: absolute path of the repo
                  name:
                    type: string
                    required: true
                    description: repo name
                  description:
                    type: string
                    required: false
                    description: repo description
                  default_branch:
                    type: string
                    required: false
                    description: repo default branch
                  git_url:
                    type: string
                    required: true
                    description: repo ssh clone url
                  html_url:
                    type: string
                    required: true
                    description: repo http clone url
  # # 获取仓库content
  /repos/{owner}/{repo}/contents/{path}:
    get:
      tags:
        - repository contents
      summary: GetRepoConent
      description: get repo content
      operationId: GetRepoConent
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token or private token (needs to start with Bearer plus a space)
          required: true
        - name: owner
          in: path
          description: The owner of the repository,  generally called "username". The name is not case sensitive.
          required: true
        - name: repo
          in: path
          description: repository name, the name is not case sensitive
          required: true
        - name: path
          in: path
          description: file path
      responses:
        200:
          description: success
        403:
          description: No Access
        404:
          description: 404 not found
        responseBody:
          content:
            application/json:
              schema:
                type: json
                properties:
                  encoding:
                    type: string
                    required: true
                    description: "Encode type. Default: base64"
                  name:
                    type: string
                    required: true
                    description: "filename"
                  path:
                    type: string
                    required: true
                    description: "file path"
                  sha:
                    type: string
                    required: true
                    description: "commit sha value"
                  size:
                    type: integer
                    required: true
                    description: File size, or 0 if "type" is "dir" or "submodule"
                  type:
                    type: string
                    required: true
                    description: "File type, enumeration values: file, dir, symlink, submodule"
                  entries:
                    type: array
                    required: false
                    description: |
                      If "type" is "dir", files and subdirectories in that directory are returned.
                      If "type" is "file", an empty array is returned.
                      If "type" is "symlink", information about the symbolic link is returned.
                      If "type" is "submodule", returns the submodule information.
                    items:
                      type: object
                      properties:
                        encoding:
                          type: string
                          required: true
                          description: "Encode type. Default: base64"
                        name:
                          type: string
                          required: true
                          description: "filename"
                        path:
                          type: string
                          required: true
                          description: "file path"
                        sha:
                          type: string
                          required: true
                          description: "commit sha value"
                        size:
                          type: integer
                          required: true
                          description: File size, or 0 if "type" is "dir" or "submodule"
                        type:
                          type: string
                          required: true
                          description: "File type, enumeration values: file, dir, symlink, submodule"
    # 创建或更新content
    put:
      tags:
        - repository contents
      summary: SaveRepoConent
      description: save repo content
      operationId: SaveRepoConent
      parameter:
        - name: Authorization
          in: header
          description: Oauth2 token or private token (needs to start with Bearer plus a space)
          required: true
        - name: owner
          in: path
          description: The owner of the repository,  generally called "username". The name is not case sensitive.
          required: true
        - name: repo
          in: path
          description: repository name, the name is not case sensitive
          required: true
        - name: path
          in: path
          description: file path
      requestBody:
        content:
          application/json:
            schema:
              type: json
              properties:
                message:
                  type: string
                  required: true
                  description: commit message
                content:
                  type: string
                  required: true
                  description: File content, encoded using Base64.
                sha:
                  type: string
                  required: false
                  description: If it is an update file, change the field to required. Just submit the SHA value.
                branch:
                  type: string
                  required: false
                  description: "branch name ,Default：repository's default branch'"
                committer:
                  type: object
                  required: false
                  description: commitor. Default value -  The currently authenticated user."
                  properties:
                    name:
                      type: string
                      required: true
                      description: "The name of the commitor. If you omit this field, you will receive a 422 status code."
                    email:
                      type: string
                      required: true
                      description: commitor's email. If you omit the email, you will receive a 422 status code.
                    date:
                      type: string
                      required: false
                author:
                  type: object
                  required: false
                  description: "commitor. Default value -  The currently authenticated user."
                  properties:
                    name:
                      type: string
                      required: true
                      description: "The name of the commitor. If you omit this field, you will receive a 422 status code"
                    email:
                      type: string
                      required: true
                      description: commitor's email. If you omit the email, you will receive a 422 status code.
                    date:
                      type: string
                      required: false
      responses:
        200:
          description: success
        201:
          description: created
        403:
          description: No Access
        409:
          description: Conflict (someone updated the file first)
        404:
          description: 404 not found
        responseBody:
          content:
            application/json:
              schema:
                type: json
                properties:
                  content:
                    type: object
                    properties:
                      encoding:
                        type: string
                        required: true
                        description: "Encode type. Default: base64"
                      name:
                        type: string
                        required: true
                        description: "filename"
                      path:
                        type: string
                        required: true
                        description: "file path"
                      sha:
                        type: string
                        required: true
                        description: "commit sha value"
                      size:
                        type: integer
                        required: true
                        description: File size, or 0 if "type" is "dir" or "submodule"
                      type:
                        type: string
                        required: true
                        description: "File type, enumeration values: file, dir, symlink, submodule"
                      entries:
                        type: array
                        required: false
                        description: |
                          If "type" is "dir", files and subdirectories in that directory are returned.
                          If "type" is "file", an empty array is returned.
                          If "type" is "symlink", information about the symbolic link is returned.
                          If "type" is "submodule", returns the submodule information.
                        items:
                          type: object
                          properties:
                            encoding:
                              type: string
                              required: true
                              description: "Encode type. Default: base64"
                            name:
                              type: string
                              required: true
                              description: "filename"
                            path:
                              type: string
                              required: true
                              description: "file path"
                            sha:
                              type: string
                              required: true
                              description: "commit sha value"
                            size:
                              type: integer
                              required: true
                              description: File size, or 0 if "type" is "dir" or "submodule"
                            type:
                              type: string
                              required: true
                              description: "File type, enumeration values: file, dir, symlink, submodule"
                  commit:
                    type: object
                    properties:
                      committer:
                        type: object
                        required: true
                        description: "commitor. Default value -  The currently authenticated user."
                        properties:
                          name:
                            type: string
                            required: true
                            description: "The name of the commitor. If you omit this field, you will receive a 422 status code."
                          email:
                            type: string
                            required: true
                            description: commitor's email. If you omit the email, you will receive a 422 status code.
                          date:
                            type: string
                            required: false
                      author:
                        type: object
                        required: true
                        description: "commitor. Default value -  The currently authenticated user."
                        properties:
                          name:
                            type: string
                            required: true
                            description: "The name of the commitor. If you omit this field, you will receive a 422 status code"
                          email:
                            type: string
                            required: true
                            description: commitor's email. If you omit the email, you will receive a 422 status code.
                          date:
                            type: string
                            required: false
                      message:
                        type: string
                        required: true
                        description: commit message
                      sha:
                        type: string
                        required: true
                        description: "commit sha value"
                      parents:
                        type: array
                        required: true
                        description: "parent commit"
                        items:
                          type: object
                          properties:
                            sha:
                              type: string
                              required: true
                              description: "parent commit sha value"
    # 删除content
    delete:
      tags:
        - repository contents
      summary: DeleteRepoConent
      description: Delete Repo Content
      operationId: DeleteRepoConent
      parameter:
        - name: Authorization
          in: header
          description: Oauth2 token or private token (needs to start with Bearer plus a space)
          required: true
        - name: owner
          in: path
          description: The owner of the repository,  generally called "username". The name is not case sensitive.
          required: true
        - name: repo
          in: path
          description: repository name, the name is not case sensitive
          required: true
        - name: path
          in: path
          description: The path of the file to be deleted.
      requestBody:
        content:
          application/json:
            schema:
              type: json
              properties:
                message:
                  type: string
                  required: true
                  description: commit message
                sha:
                  type: string
                  required: true
                  description: "File SHA value to be deleted"
                branch:
                  type: string
                  required: false
                  description: "branch name, default:repository's default branch"
                committer:
                  type: object
                  required: false
                  description: commitor. Default value -  The currently authenticated user.
                  properties:
                    name:
                      type: string
                      required: true
                      description: The name of the commitor. If you omit this field, you will receive a 422 status code.
                    email:
                      type: string
                      required: true
                      description: commitor's email. If you omit the email, you will receive a 422 status code.
                    date:
                      type: string
                      required: false
                author:
                  type: object
                  required: false
                  description: commitor. Default value -  The currently authenticated user.
                  properties:
                    name:
                      type: string
                      required: true
                      description: The name of the commitor. If you omit this field, you will receive a 422 status code
                    email:
                      type: string
                      required: true
                      description: commitor's email. If you omit the email, you will receive a 422 status code.
                    date:
                      type: string
                      required: false
      responses:
        200:
          description: OK
        403:
          description: Forbidden
        409:
          description: Conflict
        404:
          description: Resource not found
        responseBody:
          content:
            application/json:
              schema:
                type: json
                properties:
                  content:
                    type: object
                    properties:
                      encoding:
                        type: string
                        required: true
                        description: "Encode type. Default: base64"
                      name:
                        type: string
                        required: true
                        description: "filename"
                      path:
                        type: string
                        required: true
                        description: "file path"
                      sha:
                        type: string
                        required: true
                        description: "commit sha value"
                      size:
                        type: integer
                        required: true
                        description: File size, or 0 if "type" is "dir" or "submodule"
                      type:
                        type: string
                        required: true
                        description: "File type, enumeration values: file, dir, symlink, submodule"
                      entries:
                        type: array
                        required: false
                        description: |
                          If "type" is "dir", files and subdirectories in that directory are returned.
                          If "type" is "file", an empty array is returned.
                          If "type" is "symlink", information about the symbolic link is returned.
                          If "type" is "submodule", returns the submodule information.
                        items:
                          type: object
                          properties:
                            encoding:
                              type: string
                              required: true
                              description: "Encode type. Default: base64"
                            name:
                              type: string
                              required: true
                              description: "filename"
                            path:
                              type: string
                              required: true
                              description: "file path"
                            sha:
                              type: string
                              required: true
                              description: "commit sha value"
                            size:
                              type: integer
                              required: true
                              description: File size, or 0 if "type" is "dir" or "submodule"
                            type:
                              type: string
                              required: true
                              description: "File type, enumeration values: file, dir, symlink, submodule"
                  commit:
                    type: object
                    properties:
                      committer:
                        type: object
                        required: true
                        description: "The person that committed the file. Default: the authenticated user."
                        properties:
                          name:
                            type: string
                            required: true
                            description: "The name of the author or committer of the commit. You'll receive a 422 status code if name is omitted."
                          email:
                            type: string
                            required: true
                            description: The email of the author or committer of the commit. You'll receive a 422 status code if email is omitted.
                          date:
                            type: string
                            required: false
                      author:
                        type: object
                        required: true
                        description: commitor. Default value -  The currently authenticated user.
                        properties:
                          name:
                            type: string
                            required: true
                            description: The name of the commitor. If you omit this field, you will receive a 422 status code.
                          email:
                            type: string
                            required: true
                            description: commitor's email. If you omit the email, you will receive a 422 status code.
                          date:
                            type: string
                            required: false
                      message:
                        type: string
                        required: true
                        description: commit message
                      sha:
                        type: string
                        required: true
                        description: commit sha value
                      parents:
                        type: array
                        required: true
                        description: 父commit sha value
                        properties:
                          sha:
                            type: string
                            required: true
                            description: 父commit sha value
  /repos/{owner}/{repo}/files/blame:
    get:
      tags:
        - repository contents
      summary: GetRepoFileBlame
      description: GetRepoFileBlame
      operationId: GetRepoFileBlame
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token or Privatetoken(start with Bearer and a space)
          required: true
        - name: owner
          in: path
          description: The owner of the code repository is generally referred to as the "username". The name is not case sensitive.
          required: true
        - name: repo
          in: path
          description: Code repository name. The name is not case sensitive.
          required: true
        - name: sha
          in: query
          required: true
          description: sha value，like branchname，commitId
        - name: file_path
          in: query
          required: false
          description: The file path of blame to be queried
      responses:
        200:
          description: Success
        403:
          description: Forbidden
        404:
          description: resouce not found
        responseBody:
          content:
            application/json:
              schema:
                type: json
                properties:
                  start:
                    type: integer
                    required: true
                    description: "commit start line"
                  contents:
                    type: array
                    required: true
                    description: "file content list"
                    properties:
                      content:
                        type: string
                        required: true
                        description: "file content info"
                  commit:
                    type: object
                    description: commit info
                    properties:
                      author_email:
                        type: string
                        required: true
                        description: "commitor email information"
                      author_name:
                        type: string
                        required: true
                        description: "commitor name"
                      user:
                        type: object
                        required: false
                        description: commitor's plateform info related(not required)。
                        properties:
                          avatar_url:
                            type: string
                            required: true
                            description: "User avatar address"
                          email:
                            type: string
                            required: true
                            description: "User email information"
                          id:
                            type: string
                            required: true
                            description: "User platform ID"
                          username:
                            type: string
                            required: true
                            description: "User Platform username"
  /repos/{owner}/{repo}/trees/{sha}:
    get:
      tags:
        - repository contents
      summary: GetRepoTrees
      description: GetRepoTrees
      operationId: GetRepoTrees
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token or Privatetoken(start with Bearer and a space)
          required: true
        - name: owner
          in: path
          description: The owner of the code repository is generally referred to as the "username". The name is not case sensitive.
          required: true
        - name: repo
          in: path
          description: Code repository name. The name is not case sensitive.
          required: true
        - name: sha
          in: path
          required: true
          description: sha value，like branchName，commitId
        - name: recursive
          in: query
          required: false
          description: File tree query type, not mandatory. By default, only the file tree in the current path is queried. If any string is passed (such as 1), all files in the current path will be recursively searched
        - name: file_path
          in: query
          required: false
          description: Query the file tree under the specified path, not mandatory, starting from the root path by default
      responses:
        200:
          description: Success
        403:
          description: Forbidden
        404:
          description: resouce not found
        responseBody:
          content:
            application/json:
              schema:
                type: json
                properties:
                  mode:
                    type: string
                    required: true
                    description: "mode"
                  path:
                    type: string
                    required: true
                    description: "file path"
                  sha:
                    type: string
                    required: true
                    description: "commit SHA value"
                  type:
                    type: string
                    required: true
                    description: "Object type:blob,tree,symlink,commit"
  ############ 变更请求接口（Change Requests API）############
  # 创建变更请求
  /repos/{owner}/{repo}/pulls:
    post:
      tags:
        - change requests
      summary: CreateChangeRequest
      description: create change request
      operationId: CreateChangeRequest
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token or private token (needs to start with Bearer plus a space)
          required: true
        - name: owner
          in: path
          description: The owner of the repository,  generally called "username". The name is not case sensitive.
          required: true
        - name: repo
          in: path
          description: repository name, the name is not case sensitive
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: json
              properties:
                title:
                  type: string
                  required: false
                  description: cr title
                body:
                  type: string
                  required: false
                  description: cr description
                head:
                  type: string
                  required: true
                  description: "Source branch, when creating a cross-database CR, the format is: '[<src_org>|<src_username>]:<src_branch>'. If you create a change request for the same library, just pass <src_branch>."
                base:
                  type: string
                  required: true
                  description: "Target branch, format: '<dst_branch>'"
                draft:
                  type: boolean
                  required: false
                  description: "true means creating a draft (in-progress) change request, false means creating a published change request. Default value: false"
      responses:
        201:
          description: created
        403:
          description: No Access
        404:
          description: 404 not found
        409:
          description: conflict. There are remaining similar change requests under review.
        responseBody:
          content:
            application/json:
              schema:
                type: json
                properties:
                  id:
                    type: string
                    required: true
                    description: cr id
                  number:
                    type: integer
                    required: true
                    description: The number of the change request (short ID within the repo).
                  state:
                    type: string
                    required: true
                    description: "The status of the change request, enumeration values: open, closed."
                  title:
                    type: string
                    required: true
                    description: cr title
                  body:
                    type: string
                    required: true
                    description: cr description
                  created_at:
                    type: string
                    required: true
                    description: |
                      cr created time. Follow ISO 8601 time format: YYYY-MM-DDTHH:MM:SSZ"
                  updated_at:
                    type: string
                    required: true
                    description: |
                      cr updated time. Follow ISO 8601 time format: YYYY-MM-DDTHH:MM:SSZ"
                  draft:
                    type: boolean
                    required: true
                    description: "true means creating a draft (in-progress) change request, false means creating a published change request. Default value: false"
  # 查询变更请求详情
  /repos/{owner}/{repo}/pulls/{pull_number}:
    get:
      tags:
        - change requests
      summary: GetChangeRequest
      description: get change request detail
      operationId: GetChangeRequest
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token or private token (needs to start with Bearer plus a space)
          required: true
        - name: owner
          in: path
          description: The owner of the repository,  generally called "username". The name is not case sensitive.
          required: true
        - name: repo
          in: path
          description: repository name, the name is not case sensitive
          required: true
        - name: pull_number
          in: path
          description: The number of the change request (short ID within the repo).
      responses:
        200:
          description: success
        403:
          description: forbidden
        404:
          description: 404 not found
        responseBody:
          content:
            application/json:
              schema:
                type: json
                properties:
                  id:
                    type: string
                    required: true
                    description: Business ID of the change request.
                  number:
                    type: integer
                    required: true
                    description: The number of the change request (short ID within the repo).
                  state:
                    type: string
                    required: true
                    description: "The status of the change request, enumeration values: open, closed."
                  title:
                    type: string
                    required: true
                    description: Change request title.
                  body:
                    type: string
                    required: true
                    description: Description of the change request.
                  created_at:
                    type: string
                    required: true
                    description: |
                      The time the change request was created. Follow ISO 8601 time format: YYYY-MM-DDTHH:MM:SSZ"
                  updated_at:
                    type: string
                    required: true
                    description: |
                      Change request update time. Follow ISO 8601 time format: YYYY-MM-DDTHH:MM:SSZ"
                  in_reply_to:
                    type: string
                    required: false
                    description: |
                      The comment business ID of the change request reply.
  # 创建评论
  /repos/{owner}/{repo}/pulls/comments:
    post:
      tags:
        - change requests
      summary: CreateChangeRequestComment
      description: Create Change Request Comment
      operationId: CreateChangeRequestComment
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token or private token (needs to start with Bearer plus a space)
          required: true
        - name: owner
          in: path
          description: The owner of the repository, generally called "username". The name is not case sensitive.
          required: true
        - name: repo
          in: path
          description: repository name, not case sensitive
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: json
              properties:
                body:
                  type: string
                  required: false
                  description: comment content
                commit_id:
                  type: string
                  required: true
                  description: |
                    The corresponding commit sha value of the file to be commented, and the corresponding patchset submitted.
                path:
                  type: string
                  required: false
                  description: |
                    Relative path to the file to comment (value omitted if global comment).
                line:
                  type: integer
                  required: false
                  description: |
                    line number
      responses:
        201:
          description: created
        403:
          description: No Access
        404:
          description: "404 not Found"
        responseBody:
          content:
            application/json:
              schema:
                type: json
                properties:
                  id:
                    type: string
                    required: true
                    description: The business ID of the comment
                  pull_request_review_id:
                    type: string
                    required: true
                    description: |
                      The business ID of the change request to which the comment belongs.
                  path:
                    type: string
                    required: false
                    description: |
                      The business ID of the change request to which the comment belongs.
                  commit_id:
                    type: string
                    required: false
                    description: |
                      The business ID of the change request to which the comment belongs.
                  in_reply_to_id:
                    type: string
                    required: false
                    description: |
                      The business ID of the change request to which the comment belongs.
                  body:
                    type: string
                    required: true
                    description: comment content
                  line:
                    type: integer
                    required: false
                    description: line number
                  created_at:
                    type: string
                    required: true
                    description: |
                      Creation time. Follow ISO 8601 time format: YYYY-MM-DDTHH:MM:SSZ"
                  updated_at:
                    type: string
                    required: true
                    description: |
                      Update time. Follow ISO 8601 time format: YYYY-MM-DDTHH:MM:SSZ"

  # 创建回复
  /repos/{owner}/{repo}/pulls/comments/{comment_id}/replies:
    post:
      tags:
        - change requests
      summary: CreateChangeRequestReply
      description: create change request reply
      operationId: CreateChangeRequestReply
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token or private token (needs to start with Bearer plus a space)
          required: true
        - name: owner
          in: path
          description: The owner of the repository,  generally called "username". The name is not case sensitive.
          required: true
        - name: repo
          in: path
          description: repository name, the name is not case sensitive
          required: true
        - name: comment_id
          in: path
          description: The business ID of the comment.
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: json
              properties:
                body:
                  type: string
                  required: false
                  description: reply content
      responses:
        201:
          description: created
        403:
          description: No Access
        404:
          description: 404 not found
        responseBody:
          content:
            application/json:
              schema:
                type: json
                properties:
                  id:
                    type: string
                    required: true
                    description: The business ID of the reply.
                  pull_request_review_id:
                    type: string
                    required: true
                    description: |
                      The business ID of the comment to which the reply belongs.
                  path:
                    type: string
                    required: false
                    description: file path corresponding to the comment
                  commit_id:
                    type: string
                    required: false
                    description: The corresponding commit sha value of the file to be commented, and the corresponding patchset submitted.
                  in_reply_to_id:
                    type: string
                    required: false
                    description: |
                      The business ID of the comment to which the reply belongs.
                  body:
                    type: string
                    required: true
                    description: The content of the reply.
                  line:
                    type: integer
                    required: false
                    description: Reply to the line number of the corresponding file.
                  created_at:
                    type: string
                    required: true
                    description: |
                      Creation time. Follow ISO 8601 time format: YYYY-MM-DDTHH:MM:SSZ"
                  updated_at:
                    type: string
                    required: true
                    description: |
                      Update time. Follow ISO 8601 time format: YYYY-MM-DDTHH:MM:SSZ"
  # 查询评论详情
  /repos/{owner}/{repo}/pulls/comments/{comment_id}:
    get:
      tags:
        - change requests
      summary: GetChangeRequestComment
      description: get change request comment
      operationId: GetChangeRequestComment
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token or private token (needs to start with Bearer plus a space)
          required: true
        - name: owner
          in: path
          description: The owner of the repository,  generally called "username". The name is not case sensitive.
          required: true
        - name: repo
          in: path
          description: repository name, the name is not case sensitive
          required: true
        - name: pull_number
          in: path
          description: "The number of the change request (short ID within the repo)"
      responses:
        200:
          description: success
        403:
          description: No Access
        404:
          description: 404 not found
        responseBody:
          content:
            application/json:
              schema:
                type: json
                properties:
                  id:
                    type: string
                    required: true
                    description: The business ID of the comment.
                  pull_request_review_id:
                    type: string
                    required: true
                    description: |
                      The business ID of the change request to which the comment belongs.
                  path:
                    type: string
                    required: false
                    description: The file path corresponding to the comment
                  ccommit_id:
                    type: string
                    required: false
                    description: The corresponding commit sha value of the file to be commented, and the corresponding patchset submitted.
                  in_reply_to_id:
                    type: string
                    required: false
                    description: The business ID of the reply comment.
                  body:
                    type: string
                    required: true
                    description: The content of the comment.
                  line:
                    type: integer
                    required: false
                    description: The line number of the file corresponding to the comment.
                  created_at:
                    type: string
                    required: true
                    description: |
                      Creation time. Follow ISO 8601 time format: YYYY-MM-DDTHH:MM:SSZ"
                  updated_at:
                    type: string
                    required: true
                    description: |
                      Update time. Follow ISO 8601 time format: YYYY-MM-DDTHH:MM:SSZ"
  # 查询评论列表
  /repos/{owner}/{repo}/pulls/{pull_number}/comments:
    get:
      tags:
        - change requests
      summary: GetChangeRequesCommentList
      description: get change request comment list
      operationId: GetChangeRequesCommentList
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token or private token (needs to start with Bearer plus a space)
          required: true
        - name: owner
          in: path
          description: The owner of the repository,  generally called "username". The name is not case sensitive.
          required: true
        - name: repo
          in: path
          description: repository name, the name is not case sensitive
          required: true
        - name: pull_number
          in: path
          description: The number of the change request (short ID within the repo).
          required: true
        - name: page
          in: query
          description: "Page num (default is 1)"
          required: false
        - name: per_page
          in: query
          description: "Page size (default 30, max 100)"
          required: false
      responses:
        200:
          description: success
        403:
          description: forbidden
        404:
          description: 404 not found
        responseBody:
          content:
            application/json:
              schema:
                type: array
                required: true
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      required: true
                      description: The business ID of the comment.
                    pull_request_review_id:
                      type: string
                      required: true
                      description: |
                        The business ID of the change request to which the comment belongs.
                    path:
                      type: string
                      required: false
                      description: file path corresponding to the comment
                    commit_id:
                      type: string
                      required: false
                      description: The corresponding commit sha value of the file to be commented, and the corresponding patchset submitted.
                    in_reply_to_id:
                      type: string
                      required: false
                      description: The business ID of the reply comment.
                    body:
                      type: string
                      required: true
                      description: The content of the comment.
                    line:
                      type: integer
                      required: false
                      description: The line number of the file corresponding to the comment.
                    created_at:
                      type: string
                      required: true
                      description: |
                        Creation time. Follow ISO 8601 time format: YYYY-MM-DDTHH:MM:SSZ"
                    updated_at:
                      type: string
                      required: true
                      description: |
                        Update time. Follow ISO 8601 time format: YYYY-MM-DDTHH:MM:SSZ"
  ###### issue ######
  /issues:
    get:
      tags:
        - issues
      summary: GetUserIssuesList
      description: Get a list of all issues responsible for or created by the current user
      operationId: GetUserIssuesList
      parameters:
        - name: Authorization
          in: header
          description: private token (needs to start with Bearer and a space)
          required: true
        - name: filter
          in: query
          description: |
            filter enumeration: assigned, created. Default value: assigned
        - name: state
          in: query
          description: |
            Status enumeration: open, closed, all. Default value: open
        - name: sort
          in: query
          description: |
            Sorting: created(default), updated
        - name: direction
          in: query
          description: |
            Sorting direction: asc, desc(default)
        - name: page
          in: query
          description: "Page num (default is 1)"
          required: false
        - name: per_page
          in: query
          description: "Page size (default 30, max 100)"
          required: false
      responses:
        401:
          description: "Invalid token, please check if the token is correct."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        403:
          description: Permission exception
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Issue"
  /repos/{owner}/{repo}/issues:
    get:
      tags:
        - issues
      summary: GetRepoIssuesList
      description: get repo issues list
      operationId: GetRepoIssuesList
      parameters:
        - name: Authorization
          in: header
          description: Private token | app token(ats) (needs to start with Bearer plus a space)
          required: true
        - name: owner
          in: path
          description: The owner of the repository,  generally called "username". The name is not case sensitive.
          required: true
        - name: repo
          in: path
          description: repository name, the name is not case sensitive
          required: true
        - name: creator
          in: query
          description: |
            Create user uid
        - name: assignee
          in: query
          description: |
            Person in charge uid
        - name: state
          in: query
          description: |
            Status enumeration: open, closed, all. Default value: open
        - name: sort
          in: query
          description: |
            Sorting: created(default), updated
        - name: direction
          in: query
          description: |
            Sorting direction: asc, desc(default)
        - name: page
          in: query
          description: "Page num (default is 1)"
          required: false
        - name: per_page
          in: query
          description: "Page size (default 30, max 100)"
          required: false
      responses:
        401:
          description: "Invalid token, please check if the token is correct."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        403:
          description: Permission exception
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Issue"
    post:
      tags:
        - issues
      summary: CreateRepoIssue
      description: create repo issue
      operationId: CreateRepoIssue
      parameters:
        - name: Authorization
          in: header
          description: Private token | app token(ats) (needs to start with Bearer plus a space)
          required: true
        - name: owner
          in: path
          description: The owner of the repository,  generally called "username". The name is not case sensitive.
          required: true
        - name: repo
          in: path
          description: repository name, the name is not case sensitive
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: json
              properties:
                title:
                  type: string
                  required: true
                  description: issue title
                body:
                  type: string
                  required: true
                  description: Issue content (use markdown format to write content)
      responses:
        401:
          description: "Invalid token, please check if the token is correct."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        403:
          description: Permission exception
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Issue"
  /repos/{owner}/{repo}/issues/{issue_number}:
    get:
      tags:
        - issues
      summary: GetRepoIssueInfo
      description: get repo issue info
      operationId: GetRepoIssueInfo
      parameters:
        - name: Authorization
          in: header
          description: Private token | app token(ats) (needs to start with Bearer plus a space)
          required: true
        - name: owner
          in: path
          description: The owner of the repository,  generally called "username". The name is not case sensitive.
          required: true
        - name: repo
          in: path
          description: repository name, the name is not case sensitive
          required: true
        - name: issue_number
          in: path
          description: issue number
          required: true
      responses:
        401:
          description: "Invalid token, please check if the token is correct."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        403:
          description: Permission exception
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Issue"
    patch:
      tags:
        - issues
      summary: PatchRepoIssueInfo
      description: path repo issue info
      operationId: PatchRepoIssueInfo
      parameters:
        - name: Authorization
          in: header
          description: Private token | app token(ats) (needs to start with Bearer plus a space)
          required: true
        - name: owner
          in: path
          description: The owner of the repository,  generally called "username". The name is not case sensitive.
          required: true
        - name: repo
          in: path
          description: repository name, the name is not case sensitive
          required: true
        - name: issue_number
          in: path
          description: issue num
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: json
              properties:
                title:
                  type: string
                  required: false
                  description: issue title
                body:
                  type: string
                  required: false
                  description: Issue content (use markdown format to write content)
                state:
                  type: string
                  required: true
                  description: issue状态 open, closed
                state_reason:
                  type: string
                  required: false
                  description: state=closed ,optional：completed ， not_planned
      responses:
        401:
          description: "Invalid token, please check if the token is correct."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        403:
          description: Permission exception
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Issue"
  /repos/{owner}/{repo}/issues/{issue_number}/lock:
    put:
      tags:
        - issues
      summary: LockRepoIssue
      description: lock issue
      operationId: LockRepoIssue
      parameters:
        - name: Authorization
          in: header
          description: Private token | app token(ats) (needs to start with Bearer plus a space)
          required: true
        - name: owner
          in: path
          description: The owner of the repository,  generally called "username". The name is not case sensitive.
          required: true
        - name: repo
          in: path
          description: repository name, the name is not case sensitive
          required: true
        - name: issue_number
          in: path
          description: issue num
          required: true
      responses:
        401:
          description: "Invalid token, please check if the token is correct."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        403:
          description: Permission exception
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        204:
          description: Success
    delete:
      tags:
        - issues
      summary: unLockRepoIssue
      description: unlock issue
      operationId: unLockRepoIssue
      parameters:
        - name: Authorization
          in: header
          description: Private token | app token(ats) (needs to start with Bearer plus a space)
          required: true
        - name: owner
          in: path
          description: The owner of the repository,  generally called "username". The name is not case sensitive.
          required: true
        - name: repo
          in: path
          description: repository name, the name is not case sensitive
          required: true
        - name: issue_number
          in: path
          description: issue num
          required: true
      responses:
        401:
          description: "Invalid token, please check if the token is correct."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        403:
          description: Permission exception
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        204:
          description: Success
  /repos/{owner}/{repo}/assignees:
    get:
      tags:
        - issues
      summary: GetRepoAssignees
      description: List the available assignees for the repository issue
      operationId: GetRepoAssignees
      parameters:
        - name: Authorization
          in: header
          description: Private token | app token(ats) (needs to start with Bearer plus a space)
          required: true
        - name: owner
          in: path
          description: The owner of the repository,  generally called "username". The name is not case sensitive.
          required: true
        - name: repo
          in: path
          description: repository name, the name is not case sensitive
          required: true
        - name: issue_number
          in: path
          description: issue num
          required: true
      responses:
        401:
          description: "Invalid token, please check if the token is correct."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        403:
          description: Permission exception
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/IssueUser"
  /repos/{owner}/{repo}/assignees/{assignee}:
    get:
      tags:
        - issues
      summary: CheckRepoAssignee
      description: Check whether the user can be set as the issue leader
      operationId: CheckRepoAssignee
      parameters:
        - name: Authorization
          in: header
          description: Private token | app token(ats) (needs to start with Bearer plus a space)
          required: true
        - name: owner
          in: path
          description: The owner of the repository,  generally called "username". The name is not case sensitive.
          required: true
        - name: repo
          in: path
          description: repository name, the name is not case sensitive
          required: true
        - name: assignee
          in: path
          description: username
          required: true
      responses:
        401:
          description: "Invalid token, please check if the token is correct."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        403:
          description: Permission exception
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        404:
          description: Otherwise, a 404 status code is returned.
        204:
          description: If assignee can be assigned to an issue in the repository, a 204 header with no content is returned.
  /repos/{owner}/{repo}/issues/{issue_number}/assignees:
    post:
      tags:
        - issues
      summary: SetIssueAssignee
      description: set issue assignee
      operationId: SetIssueAssignee
      parameters:
        - name: Authorization
          in: header
          description: Private token | app token(ats) (needs to start with Bearer plus a space)
          required: true
        - name: owner
          in: path
          description: The owner of the repository,  generally called "username". The name is not case sensitive.
          required: true
        - name: repo
          in: path
          description: repository name, the name is not case sensitive
          required: true
        - name: issue_number
          in: path
          description: issue num
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: json
              properties:
                assignee:
                  type: string
                  required: true
                  description: assignee's username
      responses:
        401:
          description: "Invalid token, please check if the token is correct."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        403:
          description: Permission exception
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Issue"
    delete:
      tags:
        - issues
      summary: ClearIssueAssignee
      description: clear issue assignee
      operationId: ClearIssueAssignee
      parameters:
        - name: Authorization
          in: header
          description: Private token | app token(ats) (needs to start with Bearer plus a space)
          required: true
        - name: owner
          in: path
          description: The owner of the repository,  generally called "username". The name is not case sensitive.
          required: true
        - name: repo
          in: path
          description: repository name, the name is not case sensitive
          required: true
        - name: issue_number
          in: path
          description: issue num
          required: true
      responses:
        401:
          description: "Invalid token, please check if the token is correct."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        403:
          description: Permission exception
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Issue"
  ###### issue comment ######
  /repos/{owner}/{repo}/issues/{issue_number}/comments:
    get:
      tags:
        - issues comment
      summary: GetIssueCommentsList
      description: get issue comments list
      operationId: GetIssueCommentsList
      parameters:
        - name: Authorization
          in: header
          description: Private token | app token(ats) (needs to start with Bearer plus a space)
          required: true
        - name: owner
          in: path
          description: The owner of the repository,  generally called "username". The name is not case sensitive.
          required: true
        - name: repo
          in: path
          description: repository name, the name is not case sensitive
          required: true
        - name: issue_number
          in: path
          description: issue num
          required: true
      responses:
        401:
          description: "Invalid token, please check if the token is correct."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        403:
          description: Permission exception
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Comment"
    post:
      tags:
        - issues comment
      summary: CreateIssueComment
      description: create issue comment
      operationId: CreateIssueComment
      parameters:
        - name: Authorization
          in: header
          description: Private token | app token(ats) (needs to start with Bearer plus a space)
          required: true
        - name: owner
          in: path
          description: The owner of the repository,  generally called "username". The name is not case sensitive.
          required: true
        - name: repo
          in: path
          description: repository name, the name is not case sensitive
          required: true
        - name: issue_number
          in: path
          description: issue num
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: json
              properties:
                body:
                  type: string
                  required: true
                  description: Comment content (use MD format to write content)
      responses:
        401:
          description: "Invalid token, please check if the token is correct."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        403:
          description: Permission exception
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
  /repos/{owner}/{repo}/issues/comments/{comment_id}:
    get:
      tags:
        - issues comment
      summary: GetIssueCommentInfo
      description: get issue comment info
      operationId: GetIssueCommentInfo
      parameters:
        - name: Authorization
          in: header
          description: Private token | app token(ats) (needs to start with Bearer plus a space)
          required: true
        - name: owner
          in: path
          description: The owner of the repository,  generally called "username". The name is not case sensitive.
          required: true
        - name: repo
          in: path
          description: repository name, the name is not case sensitive
          required: true
        - name: comment_id
          in: path
          description: CommentId
          required: true
      responses:
        401:
          description: "Invalid token, please check if the token is correct."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        403:
          description: Permission exception
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Comment"
    patch:
      tags:
        - issues comment
      summary: UpdateIssueComment
      description: update issue Comment(Only supports modifying your own comments)
      operationId: UpdateIssueComment
      parameters:
        - name: Authorization
          in: header
          description: Private token | app token(ats) (needs to start with Bearer plus a space)
          required: true
        - name: owner
          in: path
          description: The owner of the repository,  generally called "username". The name is not case sensitive.
          required: true
        - name: repo
          in: path
          description: repository name, the name is not case sensitive
          required: true
        - name: issue_number
          in: path
          description: issue num
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: json
              properties:
                body:
                  type: string
                  required: true
                  description: Comment content (use MD format to write content)
      responses:
        401:
          description: "Invalid token, please check if the token is correct."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        403:
          description: Permission exception
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
    delete:
      tags:
        - issues comment
      summary: DeleteIssueComment
      description: delete issue Comment(Only supports modifying your own comments)
      operationId: DeleteIssueComment
      parameters:
        - name: Authorization
          in: header
          description: Private token | app token(ats) (needs to start with Bearer plus a space)
          required: true
        - name: owner
          in: path
          description: The owner of the repository,  generally called "username". The name is not case sensitive.
          required: true
        - name: repo
          in: path
          description: repository name, the name is not case sensitive
          required: true
        - name: issue_number
          in: path
          description: issue num
          required: true
      responses:
        401:
          description: "Invalid token, please check if the token is correct."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        403:
          description: Permission exception
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        204:
          description: Success
  /security/results/save:
    post:
      tags:
        - security
      summary: SaveSecurityResults
      description: json file structure, view <a href="/security/security/reporter">Description of the content structure of the scan result json file</a>
      operationId: SaveSecurityResults
      parameters:
        - name: Authorization
          in: header
          description: Oauth2 token or private token (needs to start with Bearer plus a space)
          required: true
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: Upload files
      responses:
        401:
          description: 'Token is illegal. Please check if the token is correct'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
            application/xml:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        403:
          description: Permission exception
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        200:
          description: success
components:
  schemas:
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
    Id:
      type: integer
      format: int64
      readOnly: true
    Tag:
      type: object
      properties:
        id:
          description: Tag ID
          allOf:
            - $ref: "#/components/schemas/Id"
        name:
          description: Tag name
          type: string
          minLength: 1
      xml:
        name: Tag
    ParamterError:
      type: object
      properties:
        cause:
          description: error cause
          type: string
          example: MESSAGE.PARAMETER_ERROR
        error_code:
          description: PARAMETER_ERROR
          type: string
          example: error code
        error_message:
          description: PARAMETER_ERROR
          type: string
          example: illegal nickname (the length cannot be less than 1 and cannot be greater than 20 characters)
        trace_id:
          description: trace id
          type: string
          example: trace_id
        code:
          description: response code
          type: Integer
          example: 1000
    InvalidToken:
      type: object
      properties:
        error:
          description: error name
          type: string
          example: invalid_token
        error_description:
          description: wrong description
          type: string
          example: Invalid token, please provide correct token
    Forbidden:
      type: object
      properties:
        error_code:
          description: error name
          type: string
        error_message:
          description: wrong description
          type: string
    UpdateAuthenticatedUserDTO:
      type: object
      properties:
        name:
          description: The current user's nickname is between 1 and 20 characters in length
          type: string
          example: this is my nickname
        blog:
          description: The blog address of the current user is between 1 and 100 characters
          type: string
          example: https://youboke.com
        company:
          description: The company name of the current user is between 1 and 50 characters
          type: string
          example: atom
        location:
          description: The current user's location is between 1 and 20 characters
          type: string
          example: beijing
        bio:
          description: The current user's profile is between 1 and 200 characters
          type: string
          example: hello i am putianyang
    UserEmailVO:
      type: object
      properties:
        email:
          description: email
          type: string
          example: 2xas@qq.com
        verified:
          description: verified
          type: boolean
          example: false
        visibility:
          description: is public or private
          type: string
          example: public
    User:
      type: object
      properties:
        login:
          description: username
          type: string
          example: mrpuatomgit
        id:
          description: user id
          type: string
          example: 63db126c0566d2f7d2c9498c
        url:
          description: The interface path to obtain user information based on the user name
          type: string
          example: https://api.atomgit.com/users/mrpuatomgit
        name:
          description: nickname
          type: string
          example: Joooooooo
        company:
          description: company
          type: string
          example: atom
        blog:
          description: blog
          type: string
          example: https://youboke.com
        location:
          description: location
          type: string
          example: beijing
        email:
          description: email
          type: string
          example: example@atomgit.com
        bio:
          description: bio
          type: string
          example: hello i am putianyang
        avatar_url:
          description: avatar
          type: string
          example: https://img-host/uploads/user/1656318880150_5104.png
        html_url:
          description: home_url
          type: string
          example: https://atomgit.com/mrpuatomgit
        public_repos:
          description: public_repos count
          type: Integer
          example: 3
        total_private_repos:
          description: private_repos count
          type: Integer
          example: 2
        owned_private_repos:
          description: number of private repos created by user
          type: Integer
          example: 1
        created_at:
          description: created_at
          type: string
          example: "2023-02-02 09:31:24"
        updated_at:
          description: updated_at
          example: "2023-02-02 09:31:24"
    AuthenticatedUserListVO:
      type: object
      properties:
        login:
          description: username
          type: string
          example: mrpuatomgit
        id:
          description: user id
          type: string
          example: 63db126c0566d2f7d2c9498c
        avatar_url:
          description: avataurl
          type: string
          example: https://img-host/uploads/user/1656318880150_5104.png
        url:
          description: The interface path to obtain user information based on the user name
          type: string
          example: https://api.atomgit.com/users/mrpuatomgit
        html_url:
          description: html_url
          type: string
          example: https://atomgit.com/mrpuatomgit
        organizations_url:
          description: organizations_url
          type: string
          example: https://atomgit.com/users/zhangzhe/starred
        repos_url:
          description: repos_url
          type: string
          example: https://atomgit.com/users/zhangzhe/projects
    SSHKeyVO:
      type: object
      properties:
        key:
          description: public key
          type: string
          example: ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIPE6tiarA4AR0asd33dklfjf87R6TE9BJAfkdBpqHi9zWfRhloJ 323467712@qq.com
        id:
          description: public key id
          type: string
          example: 207003
        title:
          description: public key name
          type: string
          example: ssh-1
        createdAt:
          description: creation time
          type: string
          example: "2023-02-24T04:31:36.000+00:00"
        readOnly:
          description: Is it read-only?
          type: boolean
          example: false
    AddSSHKeyDTO:
      type: object
      properties:
        title:
          description: title
          type: string
          example: title
        key:
          description: ssh public key
          type: string
          example: ssh public key
    RemindPage:
      type: object
      properties:
        total:
          description: total
          type: Integer
          example: 60
        list:
          description: notify message list
          type: array
          properties:
            id:
              description: notify message id
              type: string
              example: 63db126c0566d2f7d2c9498c
            content:
              description: notify message content
              type: string
              example: nevins35更改了讨论#15可以帮帮我吗-打不开了的状态为：重新打开
            unread:
              description: notify message is unread
              type: boolean
              example: false
            updated_at:
              description: notify message update date time
              type: string
              example: 2024-01-10T18:04:18+08:00
            url:
              description: notify message api url
              type: string
              example: https://api.atomgit.com/notifications/threads/51662c27f70c461cb04deafad374d5f4
            html_url:
              description: notify message html url
              type: string
              example: https://atomgit.com/orgs/nevins_logo/discussions/15
            type:
              description: notify type
              type: string
              example: discuss_update_state
            namespace:
              type: object
              description: belong to organization or project's namespace info
              properties:
                id:
                  description: organization or project's id
                  type: string
                  example: 636c4fe43f24db95beef4064
                name:
                  description: organization or project's name
                  type: string
                  example: nevins_logo
                path:
                  description: organization or project's path
                  type: string
                  example: nevins_logo
                type:
                  description: namespace type
                  type: string
                  example: organization
            actor:
              type: object
              description: sender info
              properties:
                login:
                  description: sender's username
                  type: string
                  example: mrpuatomgit
                id:
                  description: sender's userid
                  type: string
                  example: 63db126c0566d2f7d2c9498c
                avatar_url:
                  description: sender's avatar url
                  type: string
                  example: https://img-host/uploads/user/1656318880150_5104.png
                url:
                  description: sender info api url
                  type: string
                  example: https://api.atomgit.com/users/leige
                html_url:
                  description: sender profile html url
                  type: string
                  example: https://atomgit.com/mrpuatomgit
                followers_url:
                  description: sender's followers url
                  type: string
                  example:
                followering_url:
                  description: sender's followering url
                  type: string
                  example:
                gists_url:
                  description: sender's gists url
                  type: string
                  example:
                starred_url:
                  description: sender's starred url
                  type: string
                  example:
                subscriptions_url:
                  description: sender's subscriptions url
                  type: string
                  example:
                organizations_url:
                  description: sender's organizations url
                  type: string
                  example:
                repos_url:
                  description: sender's repos url
                  type: string
                  example:
                events_url:
                  description: sender's events url
                  type: string
                  example:
                received_events_url:
                  description: sender's received events url
                  type: string
                  example:
                type:
                  description: sender's user type
                  type: string
                  example: user
                site_admin:
                  description: sender is a admin
                  type: string
                  example: false
    PrivatePage:
      type: object
      properties:
        total:
          description: total
          type: Integer
          example: 60
        list:
          description: private message list
          type: array
          properties:
            id:
              description: private message id
              type: string
              example: 63db126c0566d2f7d2c9498c
            content:
              description: private message content
              type: string
              example: nevins35更改了讨论#15可以帮帮我吗-打不开了的状态为：重新打开
            unread:
              description: private message is unread
              type: boolean
              example: false
            updated_at:
              description: private message update time
              type: string
              example: 2024-01-10T18:04:18+08:00
            url:
              description: private message api url
              type: string
              example: https://api.atomgit.com/notifications/messages/51662c27f70c461cb04deafad374d5f4
            html_url:
              description: private message html url
              type: string
              example: https://atomgit.com/-/profile/notice/message/36f5c1f7d3f943fa6e58f7c25d921a9e
            sender:
              type: object
              description: sender info
              properties:
                login:
                  description: sender's username
                  type: string
                  example: mrpuatomgit
                id:
                  description: sender's userid
                  type: string
                  example: 63db126c0566d2f7d2c9498c
                avatar_url:
                  description: sender's avatar url
                  type: string
                  example: https://img-host/uploads/user/1656318880150_5104.png
                url:
                  description: sender info api url
                  type: string
                  example: https://api.atomgit.com/users/leige
                html_url:
                  description: sender profile html url
                  type: string
                  example: https://atomgit.com/mrpuatomgit
                followers_url:
                  description: sender's followers url
                  type: string
                  example:
                followering_url:
                  description: sender's followering url
                  type: string
                  example:
                gists_url:
                  description: sender's gists url
                  type: string
                  example:
                starred_url:
                  description: sender's starred url
                  type: string
                  example:
                subscriptions_url:
                  description: sender's subscriptions url
                  type: string
                  example:
                organizations_url:
                  description: sender's organizations url
                  type: string
                  example:
                repos_url:
                  description: sender's repos url
                  type: string
                  example:
                events_url:
                  description: sender's events url
                  type: string
                  example:
                received_events_url:
                  description: sender's received events url
                  type: string
                  example:
                type:
                  description: sender's user type
                  type: string
                  example: user
                site_admin:
                  description: sender is a admin
                  type: string
                  example: false
    RemindDetail:
      type: object
      properties:
        id:
          description: notify message id
          type: string
          example: 63db126c0566d2f7d2c9498c
        content:
          description: notify message content
          type: string
          example: nevins35更改了讨论#15可以帮帮我吗-打不开了的状态为：重新打开
        unread:
          description: notify message is unread
          type: boolean
          example: false
        updated_at:
          description: notify message update date time
          type: string
          example: 2024-01-10T18:04:18+08:00
        url:
          description: notify message api url
          type: string
          example: https://api.atomgit.com/notifications/threads/51662c27f70c461cb04deafad374d5f4
        html_url:
          description: notify message html url
          type: string
          example: https://atomgit.com/orgs/nevins_logo/discussions/15
        type:
          description: notify type
          type: string
          example: discuss_update_state
        namespace:
          type: object
          description: belong to organization or project's namespace info
          properties:
            id:
              description: organization or project's id
              type: string
              example: 636c4fe43f24db95beef4064
            name:
              description: organization or project's name
              type: string
              example: nevins_logo
            path:
              description: organization or project's path
              type: string
              example: nevins_logo
            type:
              description: namespace type
              type: string
              example: organization
        actor:
          type: object
          description: sender info
          properties:
            login:
              description: sender's username
              type: string
              example: mrpuatomgit
            id:
              description: sender's userid
              type: string
              example: 63db126c0566d2f7d2c9498c
            avatar_url:
              description: sender's avatar url
              type: string
              example: https://img-host/uploads/user/1656318880150_5104.png
            url:
              description: sender info api url
              type: string
              example: https://api.atomgit.com/users/leige
            html_url:
              description: sender profile html url
              type: string
              example: https://atomgit.com/mrpuatomgit
            followers_url:
              description: sender's followers url
              type: string
              example:
            followering_url:
              description: sender's followering url
              type: string
              example:
            gists_url:
              description: sender's gists url
              type: string
              example:
            starred_url:
              description: sender's starred url
              type: string
              example:
            subscriptions_url:
              description: sender's subscriptions url
              type: string
              example:
            organizations_url:
              description: sender's organizations url
              type: string
              example:
            repos_url:
              description: sender's repos url
              type: string
              example:
            events_url:
              description: sender's events url
              type: string
              example:
            received_events_url:
              description: sender's received events url
              type: string
              example:
            type:
              description: sender's user type
              type: string
              example: user
            site_admin:
              description: sender is a admin
              type: string
              example: false
    PrivateDetail:
      type: object
      properties:
        id:
          description: private message id
          type: string
          example: 63db126c0566d2f7d2c9498c
        content:
          description: private message content
          type: string
          example: nevins35更改了讨论#15可以帮帮我吗-打不开了的状态为：重新打开
        unread:
          description: private message is unread
          type: boolean
          example: false
        updated_at:
          description: private message update time
          type: string
          example: 2024-01-10T18:04:18+08:00
        url:
          description: private message api url
          type: string
          example: https://api.atomgit.com/notifications/messages/51662c27f70c461cb04deafad374d5f4
        html_url:
          description: private message html url
          type: string
          example: https://atomgit.com/-/profile/notice/message/36f5c1f7d3f943fa6e58f7c25d921a9e
        sender:
          type: object
          description: sender info
          properties:
            login:
              description: sender's username
              type: string
              example: mrpuatomgit
            id:
              description: sender's userid
              type: string
              example: 63db126c0566d2f7d2c9498c
            avatar_url:
              description: sender's avatar url
              type: string
              example: https://img-host/uploads/user/1656318880150_5104.png
            url:
              description: sender info api url
              type: string
              example: https://api.atomgit.com/users/leige
            html_url:
              description: sender profile html url
              type: string
              example: https://atomgit.com/mrpuatomgit
            followers_url:
              description: sender's followers url
              type: string
              example:
            followering_url:
              description: sender's followering url
              type: string
              example:
            gists_url:
              description: sender's gists url
              type: string
              example:
            starred_url:
              description: sender's starred url
              type: string
              example:
            subscriptions_url:
              description: sender's subscriptions url
              type: string
              example:
            organizations_url:
              description: sender's organizations url
              type: string
              example:
            repos_url:
              description: sender's repos url
              type: string
              example:
            events_url:
              description: sender's events url
              type: string
              example:
            received_events_url:
              description: sender's received events url
              type: string
              example:
            type:
              description: sender's user type
              type: string
              example: user
            site_admin:
              description: sender is a admin
              type: string
              example: false
    UserActivity:
      type: object
      properties:
        type:
          description: Activity type
          type: string
          example: push
        actor:
          type: object
          description: actor info
          properties:
            login:
              description: actor username
              type: string
              example: mrpuatomgit
            id:
              description: actor user id
              type: string
              example: 63db126c0566d2f7d2c9498c
            avatar_url:
              description: actor user avatar url
              type: string
              example: https://img-host/uploads/user/1656318880150_5104.png
            url:
              description: API endpoint for querying user information.
              type: string
              example: https://api.atomgit.com/users/leige
            html_url:
              description: User profile url.
              type: string
              example: https://atomgit.com/mrpuatomgit
            followers_url:
              description: actor's followers url
              type: string
              example:
            followering_url:
              description: actor's followering url
              type: string
              example:
            gists_url:
              description: actor's gists url
              type: string
              example:
            starred_url:
              description: actor's starred url
              type: string
              example:
            subscriptions_url:
              description: actor's subscriptions url
              type: string
              example:
            organizations_url:
              description: actor's organizations url
              type: string
              example:
            repos_url:
              description: actor's repos url
              type: string
              example:
            events_url:
              description: actor's events url
              type: string
              example:
            received_events_url:
              description: actor's received events url
              type: string
              example:
            type:
              description: actor's user type
              type: string
              example: user
            site_admin:
              description: Is actor a administrator
              type: string
              example: false
        repo:
          description: Repository information
          type: object
          properties:
            id:
              description: Repository id
              type: string
              example: 34367
            name:
              description: Repository name
              type: string
              example: feed
            path:
              description: Repository path
              type: string
              example: feed
            name_with_namespace:
              description: Full repository name (including namespace name)
              type: string
              example: feed
            path_with_namespace:
              description: Full repository path (including namespace path)
              type: string
              example: feed
            visibility_level:
              description: Is the repository public
              type: int
              example: 20
            web_url:
              description: repository web url
              type: string
              example: https://atomgit.com/miykaelxxm/feed
        created_at:
          description: create time
          type: string
          example: 2024-01-10T18:04:18+08:00
        payload:
          description: The relevant information included in the activity.
          type: string
          example: test
    OrgPage:
      type: object
      properties:
        login:
          description: organization name
          type: string
          example: csdn
        id:
          description: organization id
          type: string
          example: 62b59720cbcaeffdff0148ce
        url:
          description: Organization's OepnApi address
          type: string
          example: https://api.atomgit.com/orgs/csdn
        repos_url:
          description: organization’s repos address
          type: string
          example: https://api.atomgit.com/orgs/csdn/repos
        events_url:
          description: The organization’s event address
          type: string
          example: https://api.atomgit.com/orgs/csdn/events
        hooks_url:
          description: Organization’s hooks address
          type: string
          example: https://api.atomgit.com/orgs/csdn/hooks
        issues_url:
          description: The organization’s issue address
          type: string
          example: https://api.atomgit.com/orgs/csdn_test2/issues
        members_url:
          description: The organization’s members address
          type: string
          example: https://api.atomgit.com/orgs/csdn/members/{/member}
        public_members_url:
          description: The organization’s public members address
          type: string
          example: https://api.atomgit.com/orgs/csdn/public_members/{/member}
        avatar_url:
          description: Organization avatar address
          type: string
          example: https://img-host/uploads/org/1656042927816_7741.png
        description:
          description: description of the organization
          type: string
          example: csdn is a goog website
    OrgDetail:
      type: object
      properties:
        login:
          description: organization name
          type: string
          example: csdn
        id:
          description: organization id
          type: string
          example: 62b59720cbcaeffdff0148ce
        url:
          description: Organization's OepnApi address
          type: string
          example: https://api.atomgit.com/orgs/csdn
        repos_url:
          description: organization’s repos address
          type: string
          example: https://api.atomgit.com/orgs/csdn/repos
        events_url:
          description: The organization’s event address
          type: string
          example: https://api.atomgit.com/orgs/csdn/events
        hooks_url:
          description: Organization’s hooks address
          type: string
          example: https://api.atomgit.com/orgs/csdn/hooks
        issues_url:
          description: The organization’s issue address
          type: string
          example: https://api.atomgit.com/orgs/csdn_test2/issues
        members_url:
          description: The organization’s members address
          type: string
          example: https://api.atomgit.com/orgs/csdn/members/{/member}
        public_members_url:
          description: The organization’s public members address
          type: string
          example: https://api.atomgit.com/orgs/csdn/public_members/{/member}
        avatar_url:
          description: Organization avatar address
          type: string
          example: https://img-host/uploads/org/1656042927816_7741.png
        description:
          description: description of the organization
          type: string
          example: csdn is a goog website
        name:
          description: the organization's name
          type: string
          example: test organization
        company:
          description: Organization official website
          type: string
          example: http://www.csdn.net
        blog:
          description: Organization's blog
          type: string
          example: http://www.csdn.net
        location:
          description: Organization location
          type: string
          example: Chaoyang District, Beijing
        public_repos:
          description: The number of public repositories of the organization
          type: Integer
          example: 1
        followers:
          description: Number of fans of the organization
          type: Integer
          example: 10
        following:
          description: Number of followers of the organization
          type: Integer
          example: 0
        email:
          description: Organization's email address
          type: string
          example: admin@csdn.net
        html_url:
          description: URL of the organization
          type: string
          example: https://atomgit.com/csdn
        created_at:
          description: Creation time of the organization
          type: string
          example: 2022-12-21T15:45:17+08:00
        updated_at:
          description: Organization update time
          type: string
          example: 2022-12-21T15:45:17+08:00
        type:
          description: type of organization
          type: string
          example: Organization
    UpdateOrg:
      type: object
      properties:
        description:
          description: description of the organization
          type: string
          example: csdn is a goog website
        name:
          description: name of the organization
          type: string
          example: test organization
        company:
          description: Organization official website
          type: string
          example: http://www.csdn.net
        location:
          description: Organization location
          type: string
          example: Chaoyang District, Beijing
    UserOrgPage:
      type: object
      properties:
        login:
          description: organization name
          type: string
          example: csdn
        id:
          description: organization id
          type: string
          example: 62b59720cbcaeffdff0148ce
        url:
          description: Organization's OepnApi address
          type: string
          example: https://api.atomgit.com/orgs/csdn
        repos_url:
          description: organization’s repos address
          type: string
          example: https://api.atomgit.com/orgs/csdn/repos
        events_url:
          description: The organization’s event address
          type: string
          example: https://api.atomgit.com/orgs/csdn/events
        hooks_url:
          description: Organization’s hooks address
          type: string
          example: https://api.atomgit.com/orgs/csdn/hooks
        issues_url:
          description: The organization’s issue address
          type: string
          example: https://api.atomgit.com/orgs/csdn_test2/issues
        members_url:
          description: The organization’s members address
          type: string
          example: https://api.atomgit.com/orgs/csdn/members/{/member}
        public_members_url:
          description: The organization’s public members address
          type: string
          example: https://api.atomgit.com/orgs/csdn/public_members/{/member}
        avatar_url:
          description: Organization avatar address
          type: string
          example: https://img-host/uploads/org/1656042927816_7741.png
        description:
          description: description of the organization
          type: string
          example: csdn is a goog website
    UserOrgInvition:
      type: object
      properties:
        login:
          description: Invitee username
          type: string
          example: csdn
        id:
          description: Invitee user id
          type: string
          example: 62b59720cbcaeffdff0148ce
        role:
          description: Invitee user role
          type: string
          example: maintainer
        email:
          description: Email address of the invitee
          type: string
          example: admin@csdn.net
        created_at:
          description: operation time
          type: string
          example: 2022-12-21T15:45:17+08:00
        inviter:
          description: Inviter information
          type: object
          properties:
            login:
              description: Inviter username
              type: string
              example: mrpuatomgit
            id:
              description: Inviter user ID
              type: string
              example: 63db126c0566d2f7d2c9498c
            avatar_url:
              description: Inviter user avatar
              type: string
              example: https://img-host/uploads/user/1656318880150_5104.png
            url:
              description: Inviter information api address
              type: string
              example: https://api.atomgit.com/users/leige
            html_url:
              description: Inviter’s homepage address
              type: string
              example: https://atomgit.com/mrpuatomgit
            followers_url:
              description: the inviter’s followers url
              type: string
              example:
            following_url:
              description: following url of the inviter
              type: string
              example:
            gists_url:
              description: gists url of the inviter
              type: string
              example:
            starred_url:
              description: the inviter's starred url
              type: string
              example:
            subscriptions_url:
              description: Inviter’s subscriptions url
              type: string
              example:
            organizations_url:
              description: The organizations url of the inviter
              type: string
              example:
            repos_url:
              description: The repos url of the inviter
              type: string
              example:
            events_url:
              description: event url of the inviter
              type: string
              example:
            received_events_url:
              description: the inviter’s received events url
              type: string
              example:
            type:
              description: user type of the inviter
              type: string
              example: user
            site_admin:
              description: Whether the inviter is an administrator
              type: string
              example: false
    OrgMember:
      type: object
      properties:
        login:
          description: username of organization member
          type: string
          example: mrpuatomgit
        id:
          description: User ID of organization member
          type: string
          example: 63db126c0566d2f7d2c9498c
        avatar_url:
          description: Avatar of organization member
          type: string
          example: https://img-host/uploads/user/1656318880150_5104.png
        url:
          description: URL of detailed information about organization members
          type: string
          example: https://api.atomgit.com/users/leige
        html_url:
          description: Home page URL of organization members
          type: string
          example: https://atomgit.com/mrpuatomgit
        followers_url:
          description: followers url of organization members
          type: string
          example:
        following_url:
          description: following url of organization members
          type: string
          example:
        gists_url:
          description: gists url of organization members
          type: string
          example:
        starred_url:
          description: starred url of organization member
          type: string
          example:
        subscriptions_url:
          description: subscriptions url of organization members
          type: string
          example:
        organizations_url:
          description: organizations url of organization members
          type: string
          example:
        repos_url:
          description: repos url of organization members
          type: string
          example:
        events_url:
          description: events url of organization members
          type: string
          example:
        received_events_url:
          description: received events url of organization members
          type: string
          example:
        type:
          description: type
          type: string
          example: user
        site_admin:
          description: Whether the organization member is an administrator
          type: string
          example: false
    OrgMemberRole:
      type: object
      properties:
        url:
          description: openApi address of organization member details
          type: string
          example: https://api.atomgit.com/orgs/csdn
        state:
          description: Organization status
          type: string
          example: active
        role:
          description: To query organization member roles
          type: string
          example: maintainer
        organization_url:
          description: openApi address of organization details
          type: string
          example: https://api.atomgit.com/orgs/csdn
        user:
          description: Detailed information of the user name being queried
          type: object
          properties:
            login:
              description: the user name being queried
              type: string
              example: mrpuatomgit
            id:
              description: The user ID being queried
              type: string
              example: 63db126c0566d2f7d2c9498c
            avatar_url:
              description: The avatar of the user being queried
              type: string
              example: https://img-host/uploads/user/1656318880150_5104.png
            url:
              description: the openApi address of the user details being queried
              type: string
              example: https://api.atomgit.com/users/leige
            html_url:
              description: The atomgit access address of the queried user
              type: string
              example: https://atomgit.com/mrpuatomgit
            followers_url:
              description: The queried user followers address
              type: string
              example:
            following_url:
              description: The following address of the user being queried
              type: string
              example:
            gists_url:
              description: The user gists address being queried
              type: string
              example:
            starred_url:
              description: The starred address of the user being queried
              type: string
              example:
            subscriptions_url:
              description: Queryed user subscriptions address
              type: string
              example:
            organizations_url:
              description: Queryed user organizations address
              type: string
              example:
            repos_url:
              description: The queried user repos address
              type: string
              example:
            events_url:
              description: The user events address being queried
              type: string
              example:
            received_events_url:
              description: The queried user's received events address
              type: string
              example:
            type:
              description: The type of user being queried
              type: string
              example: user
            site_admin:
              description: The user being queried is an administrator
              type: string
              example: false
        organization:
          description: Organization information of the current operation
          type: object
          properties:
            login:
              description: organization name
              type: string
              example: csdn
            id:
              description: organization id
              type: string
              example: 62b59720cbcaeffdff0148ce
            url:
              description: Organization's OepnApi address
              type: string
              example: https://api.atomgit.com/orgs/csdn
            repos_url:
              description: organization’s repos address
              type: string
              example: https://api.atomgit.com/orgs/csdn/repos
            events_url:
              description: The organization’s event address
              type: string
              example: https://api.atomgit.com/orgs/csdn/events
            hooks_url:
              description: Organization’s hooks address
              type: string
              example: https://api.atomgit.com/orgs/csdn/hooks
            issues_url:
              description: The organization’s issue address
              type: string
              example: https://api.atomgit.com/orgs/csdn_test2/issues
            members_url:
              description: The organization’s members address
              type: string
              example: https://api.atomgit.com/orgs/csdn/members/{/member}
            public_members_url:
              description: The organization’s public members address
              type: string
              example: https://api.atomgit.com/orgs/csdn/public_members/{/member}
            avatar_url:
              description: Organization avatar address
              type: string
              example: https://img-host/uploads/org/1656042927816_7741.png
            description:
              description: description of the organization
              type: string
              example: csdn is a goog website
    OrgFollowers:
      type: object
      properties:
        id:
          type: string
          description: id
          example: 62c791bede9059102516aa8f
        login:
          type: string
          description: username
          example: lik0914
        url:
          type: string
          description:  API endpoint for querying user information.
          example: https://api.atomgit.com/users/lik0914
        avatar_url:
          type: string
          description: user avatar url
          example: https://xxx.com/uploads/user/1657265547983_3769.png
        html_url:
          type: string
          description: user profile url.
          example: https://atomgit.com/lik0914
        type:
          type: string
          description: user type is User or Bot
          example: User
        site_admin:
          description: actor is the user an administrator
          type: string
          example: false
    Issue:
      type: object
      properties:
        id:
          description: id
          type: string
          example: 64a2791c36ca86246aed3612
        url:
          description: url
          type: string
          example: https://api.atomgit.com/repos/test/public01/issues/6
        number:
          description: number
          type: int
          example: 1
        state:
          description: state
          type: string
          example: closed
        title:
          description: title
          type: string
          example: test title
        body:
          description: Issue text (use MD format to write content)
          type: string
          example: issue content
        user:
          type: object
          $ref: "#/components/schemas/IssueUser"
        assignee:
          type: object
          $ref: "#/components/schemas/IssueUser"
        locked:
          type: boolean
          description: lock status
          example: false
        repository_url:
          type: string
          description: repository_url
          example: https://api.atomgit.com/repos/test/public01
        html_url:
          type: string
          description: issue web url
          example: https://atomgit.com/test/public01/issues/1
        closed_at:
          type: string
          description: closed_at
          example: 2023-07-04T17:03:05+08:00
        created_at:
          type: string
          description: created_at
          example: 2023-07-04T17:03:05+08:00
        updated_at:
          type: string
          description: updated_at
          example: 2023-07-04T17:03:05+08:00
    LabelInfo:
      type: object
      properties:
        id:
          description: tag id
          type: string
          example: 655c0046df514a6764aa00b0
        name:
          description: tag name
          type: string
          example: 系统BUG
        color:
          description: tag color
          type: string
          example: '#ED4014'
        desc:
          description: tag description
          type: string
          example: 系统BUG
        repository_id:
          description: Repository id
          type: string
          example: 34309
        created_at:
          description: tag create time
          type: string
          example: 2023-11-21T08:56:39+08:00
        updated_at:
          description: tag update time
          type: string
          example: 2023-11-21T08:56:39+08:00
    Comment:
      type: object
      properties:
        id:
          description: id
          type: string
          example: 64a2791c36ca86246aed3612
        url:
          description: url
          type: string
          example: https://api.atomgit.com/repos/test/public01/issues/comments/64a6742ece72b305b44bb8f1
        body:
          description: Comment content（use MD format）
          type: string
          example: issue Comment content
        user:
          type: object
          $ref: "#/components/schemas/IssueUser"
        issue_url:
          type: string
          description: issue_url
          example: https://api.atomgit.com/repos/test/public01/issue/1
        html_url:
          type: string
          description: issue Comment web url
          example: https://atomgit.com/test/public01/issues/1#issuecomment-64a6742ece72b305b44bb8f1
        created_at:
          type: string
          description: created_at
          example: 2023-07-04T17:03:05+08:00
        updated_at:
          type: string
          description: updated_at
          example: 2023-07-04T17:03:05+08:00
    IssueUser:
      type: object
      properties:
        id:
          type: string
          description: id
          example: 62c791bede9059102516aa8f
        login:
          type: string
          description: username
          example: lik0914
        url:
          type: string
          description: user url
          example: https://api.atomgit.com/users/lik0914
        avatar_url:
          type: string
          description: avatar_url
          example: https://xxx.com/uploads/user/1657265547983_3769.png
        html_url:
          type: string
          description: html_url
          example: https://atomgit.com/lik0914
        type:
          type: string
          description: user type - User | Bot
          example: User
    Enterprise:
      type: object
      properties:
        enterpriseName:
          type: string
          description: name
          example: name
        orgCode:
          type: string
          description: orgCode
          example:
        orgId:
          type: string
          description: orgId
          example:
        corporation:
          type: string
          description: corporation
          example:
        attestationStatus:
          type: int
          description: status
          example:
        isShow:
          type: boolean
          description: is show enterprise logo
          example:
        idcard:
          type: string
          description: identity
          example:
        creditCode:
          type: string
          description:
          example:
  requestBodies:
    UserArray:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/User"
      description: List of user object
      required: true
  examples:
    Order:
      value:
        quantity: 1
        shipDate: "2018-10-19T16:46:45Z"
        status: placed
        complete: false
